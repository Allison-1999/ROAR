diff --git a/Bridges/__pycache__/__init__.cpython-37.pyc b/Bridges/__pycache__/__init__.cpython-37.pyc
index 748c80a..893843a 100644
Binary files a/Bridges/__pycache__/__init__.cpython-37.pyc and b/Bridges/__pycache__/__init__.cpython-37.pyc differ
diff --git a/Bridges/__pycache__/bridge.cpython-37.pyc b/Bridges/__pycache__/bridge.cpython-37.pyc
index d31942c..6290ebe 100644
Binary files a/Bridges/__pycache__/bridge.cpython-37.pyc and b/Bridges/__pycache__/bridge.cpython-37.pyc differ
diff --git a/Bridges/__pycache__/carla_bridge.cpython-37.pyc b/Bridges/__pycache__/carla_bridge.cpython-37.pyc
index 2f8c9c7..c364856 100644
Binary files a/Bridges/__pycache__/carla_bridge.cpython-37.pyc and b/Bridges/__pycache__/carla_bridge.cpython-37.pyc differ
diff --git a/ROAR/__pycache__/__init__.cpython-37.pyc b/ROAR/__pycache__/__init__.cpython-37.pyc
index 455e188..c8c0623 100644
Binary files a/ROAR/__pycache__/__init__.cpython-37.pyc and b/ROAR/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc
index 84e3be8..1009acf 100644
Binary files a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc
index 0b1ba9f..9742dcc 100644
Binary files a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc differ
diff --git a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc
index 841d66d..55b89fb 100644
Binary files a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc differ
diff --git a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc
index 03e1014..92b14a2 100644
Binary files a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc differ
diff --git a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc
index cfa960a..42f4506 100644
Binary files a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc differ
diff --git a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc
index c0ee652..303da5c 100644
Binary files a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc differ
diff --git a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc
index 4204108..e70abce 100644
Binary files a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc
index 98a2b8a..3cd2956 100644
Binary files a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc differ
diff --git a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc
index 9449546..7e2c553 100644
Binary files a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc differ
diff --git a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc
index 82c261f..9e685ff 100644
Binary files a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/control_module/__pycache__/controller.cpython-37.pyc b/ROAR/control_module/__pycache__/controller.cpython-37.pyc
index 6443e8f..90ac7c5 100644
Binary files a/ROAR/control_module/__pycache__/controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/controller.cpython-37.pyc differ
diff --git a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc
index 391e7bc..867822a 100644
Binary files a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc differ
diff --git a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc
index 0e2ca63..a4696b6 100644
Binary files a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc and b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc differ
diff --git a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc
index c12f588..5c42b9d 100644
Binary files a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc
index 52c9a49..2f0fb36 100644
Binary files a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc differ
diff --git a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc
index f6e7a5f..5eef87c 100644
Binary files a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc differ
diff --git a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc
index a3b9d51..105e490 100644
Binary files a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc differ
diff --git a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc
index 98ce179..0fbbbef 100644
Binary files a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc differ
diff --git a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc
index d9da805..3bda57a 100644
Binary files a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc differ
diff --git a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc
index 12e72a4..fe8d5a1 100644
Binary files a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc
index aca849f..2a8eb3e 100644
Binary files a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc differ
diff --git a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc
index 62e6f0c..3e54513 100644
Binary files a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc
index dad5d0d..990dca0 100644
Binary files a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc and b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc differ
diff --git a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc
index 7bc0045..51a7efa 100644
Binary files a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc
index 174b209..4dba087 100644
Binary files a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc differ
diff --git a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc
index 19daef3..c32e87d 100644
Binary files a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc
index 54bd8f0..d6d0e38 100644
Binary files a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc differ
diff --git a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc
index 9b54d47..054e40e 100644
Binary files a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc differ
diff --git a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc
index 7fe96e6..62f47a3 100644
Binary files a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc differ
diff --git a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc
index f666feb..e09db3f 100644
Binary files a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc differ
diff --git a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc
index e339030..8dece62 100644
Binary files a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc
index 3cf685f..d0fbb37 100644
Binary files a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc differ
diff --git a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc
index 0250514..77233df 100644
Binary files a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc differ
diff --git a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc
index 00ab4de..2a15a16 100644
Binary files a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc
index 86f93dc..8dba6e8 100644
Binary files a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc differ
diff --git a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc
index d636bc0..466de9c 100644
Binary files a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc differ
diff --git a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc
index d7e8cad..b84d89b 100644
Binary files a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc differ
diff --git a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc
index 1c8adb5..448e375 100644
Binary files a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc differ
diff --git a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc
index 6e2c1e3..95f385a 100644
Binary files a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc differ
diff --git a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc
index 7341979..9b0a837 100644
Binary files a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc differ
diff --git a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc
index 1152170..6fa437a 100644
Binary files a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc differ
diff --git a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc
index 717c785..a39046d 100644
Binary files a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc
index ad18fd4..c12bd72 100644
Binary files a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc differ
diff --git a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc
index 34f7870..80d27f0 100644
Binary files a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc differ
diff --git a/ROAR_Sim/carla_client/carla_runner.py b/ROAR_Sim/carla_client/carla_runner.py
index 2c68862..54cfbc4 100644
--- a/ROAR_Sim/carla_client/carla_runner.py
+++ b/ROAR_Sim/carla_client/carla_runner.py
@@ -54,6 +54,8 @@ class CarlaRunner:
         self.controller = None
         self.display = None
         self.agent = None
+        self.vehicle = None
+
 
         self.npc_agents: Dict[npc_agent_class, Any] = {}
         self.agent_collision_counter = 0
@@ -73,6 +75,16 @@ class CarlaRunner:
         self.logger = logging.getLogger(__name__)
         self.timestep_counter = 0
 
+    def reset_vehicle_to_start_point(self):
+        # self.vehicle.set_transform(self.world.map.get_spawn_points()[1])
+        loc = carla.Location(-809.5368041992188, -689.7285766601562, 75.23312377929688)
+        rot = carla.Rotation(-2.182129144668579, 1.353726111119613e-05, -0.014190672896802425)
+        velocity = carla.Vector3D(7.291184425354004, 0.3368271291255951, -0.36976736783981323)
+        self.world.player.set_transform(carla.Transform(loc, rot))
+        self.world.player.set_target_velocity(velocity)
+        self.vehicle = self.carla_bridge. \
+            convert_vehicle_from_source_to_agent(self.world.player)
+
     def set_carla_world(self) -> Vehicle:
         """
         Initiating the vehicle with loading messages
@@ -117,9 +129,9 @@ class CarlaRunner:
                                               carla_setting=self.carla_settings
                                               )
             self.logger.debug("All settings done")
-
-            return self.carla_bridge. \
+            self.vehicle = self.carla_bridge. \
                 convert_vehicle_from_source_to_agent(self.world.player)
+            return self.vehicle
 
         except Exception as e:
             self.logger.error(
diff --git a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc
index cab1782..b19abb6 100644
Binary files a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc differ
diff --git a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc
index e5483e6..df1a284 100644
Binary files a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc differ
diff --git a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc
index 67f0c8a..ce64669 100644
Binary files a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc differ
diff --git a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc
index a98bf88..31473c6 100644
Binary files a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc differ
diff --git a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc
index 15303f6..c8686a2 100644
Binary files a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc differ
diff --git a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc
index a3db8ca..fd16e5f 100644
Binary files a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc differ
diff --git a/ROAR_Sim/carla_client/util/world.py b/ROAR_Sim/carla_client/util/world.py
index 80a59b0..0d835f2 100644
--- a/ROAR_Sim/carla_client/util/world.py
+++ b/ROAR_Sim/carla_client/util/world.py
@@ -30,7 +30,7 @@ class World(object):
         self.carla_settings: CarlaConfig = carla_settings
         self.agent_settings: AgentConfig = agent_settings
         self.carla_world: carla.World = carla_world
-        self.clean_spawned_all_actors()
+        # self.clean_spawned_all_actors() # Jingjing: The destroy of current vehicle, should not lead to other vehicle's destory
         self.actor_role_name = carla_settings.role_name
         try:
             self.map = self.carla_world.get_map()
@@ -309,22 +309,22 @@ class World(object):
         ]
         for actor in actors:
             if actor is not None:
-                actor.destroy()
+                actor.destroy() # Jingjing: Player will be destoryed here individually, and won't effect the player in other world.
 
         self._destroy_custom_sensors()
         for npc, _ in self.npcs_mapping.values():
             npc.destroy()
+        # Jingjing: if clean all actors in the world, then the vehicle and sensors that belongs to other clients will also be destroyed
+        # self.clean_spawned_all_actors() # Jingjing: The destroy of current vehicle, should not lead to other vehicle's destory
 
-        self.clean_spawned_all_actors()
-
-    def clean_spawned_all_actors(self):
+    def clean_spawned_all_actors(self): # Jingjing: The destroy of current vehicle, should not lead to other vehicle's destory
         """
         This function is to clean all actors that are not traffic light/signals
         Returns:
-
         """
-        self.carla_world.tick()
-        for actor in self.carla_world.get_actors():
-            if "traffic" not in actor.type_id and "spectator" not in actor.type_id:
-                actor.destroy()
-        self.carla_world.tick()
+        # self.carla_world.tick()
+        # for actor in self.carla_world.get_actors():
+        #     if "traffic" not in actor.type_id and "spectator" not in actor.type_id:
+        #         actor.destroy()
+        # self.carla_world.tick()
+        return
diff --git a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc
index 683efc4..704176d 100644
Binary files a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc differ
diff --git a/ROAR_gym/ROAR_Gym/__init__.py b/ROAR_gym/ROAR_Gym/__init__.py
index 2989d64..a4d9062 100644
--- a/ROAR_gym/ROAR_Gym/__init__.py
+++ b/ROAR_gym/ROAR_Gym/__init__.py
@@ -20,7 +20,7 @@ register(
     entry_point='ROAR_Gym.envs:ROAREnvE2E',
 )
 
-register(
-    id='roar-multi-v0',
-    entry_point='ROAR_Gym.envs:ROARMultiEnv',
-)
\ No newline at end of file
+# register(
+#     id='roar-multi-v0',
+#     entry_point='ROAR_Gym.envs:ROARMultiEnv',
+# )
\ No newline at end of file
diff --git a/ROAR_gym/ROAR_Gym/envs/__init__.py b/ROAR_gym/ROAR_Gym/envs/__init__.py
index 21612d9..9f6ffa6 100644
--- a/ROAR_gym/ROAR_Gym/envs/__init__.py
+++ b/ROAR_gym/ROAR_Gym/envs/__init__.py
@@ -2,6 +2,6 @@ from ROAR_Gym.envs.roar_env import ROAREnv
 from ROAR_Gym.envs.roar_pid_env import ROARPIDEnv
 from ROAR_Gym.envs.roar_env_e2e import ROAREnvE2E
 from ROAR_Gym.envs.e2eModel_roar_env import ROARppoEnvE2E
-from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
+# from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
 from ROAR_Gym.envs.line_detect import *
 
diff --git a/ROAR_gym/ROAR_Gym/envs/e2eModel_roar_env.py b/ROAR_gym/ROAR_Gym/envs/e2eModel_roar_env.py
index 468886c..a008d54 100644
--- a/ROAR_gym/ROAR_Gym/envs/e2eModel_roar_env.py
+++ b/ROAR_gym/ROAR_Gym/envs/e2eModel_roar_env.py
@@ -37,7 +37,6 @@ else:
     }
 
 
-
 class ROARppoEnvE2E(ROAREnv):
     def __init__(self, params):
         super().__init__(params)
@@ -85,6 +84,7 @@ class ROARppoEnvE2E(ROAREnv):
         self.crash_step=0
         self.reward_step=0
         self.reset_by_crash=True
+        self.is_crashing = False
         self.fps=8
         self.crash_tol=5
         self.reward_tol=4
@@ -206,6 +206,7 @@ class ROARppoEnvE2E(ROAREnv):
 
         # if self.steps-self.crash_step>self.crash_tol*self.fps:
         if self.carla_runner.get_num_collision() > 0:
+            self.is_crashing = True
             if self.reset_by_crash:
                 reward -= 200#0# /(min(total_num_cross,10))
             # self.crash_check = True
@@ -303,7 +304,12 @@ class ROARppoEnvE2E(ROAREnv):
             self.largest_steps=self.steps
         elif self.complete_loop and self.agent.finish_loop and self.steps<self.largest_steps:
             self.largest_steps=self.steps
-        super(ROARppoEnvE2E, self).reset()
+
+        # reset
+        if self.is_crashing:
+            super(ROARppoEnvE2E, self).reset_by_collision()
+        else:
+            super(ROARppoEnvE2E, self).reset()
         self.steps=0
         self.crash_step=0
         self.reward_step=0
diff --git a/ROAR_gym/ROAR_Gym/envs/roar_env.py b/ROAR_gym/ROAR_Gym/envs/roar_env.py
index c5d345d..fcfeb2a 100644
--- a/ROAR_gym/ROAR_Gym/envs/roar_env.py
+++ b/ROAR_gym/ROAR_Gym/envs/roar_env.py
@@ -86,6 +86,34 @@ class ROAREnv(gym.Env, ABC):
         self._start_game()
         return self.agent
 
+    def reset_by_collision(self) -> Any:
+        # # self.carla_runner.on_finish()
+        # # self.carla_runner = CarlaRunner(agent_settings=self.agent_config,
+        # #                                 carla_settings=self.carla_config,
+        # #                                 npc_agent_class=self.npc_agent_class)
+        # # vehicle = self.carla_runner.set_carla_world()
+        # self.carla_runner.reset_vehicle_to_start_point()
+        # if self.agent:
+        #     self.agent.reset(vehicle=self.carla_runner.vehicle)
+        # else:
+        #     self.agent = self.EgoAgentClass(vehicle=self.carla_runner.vehicle, agent_settings=self.agent_config)
+        # self.clock: Optional[pygame.time.Clock] = None
+        # self._start_game()
+        # return self.agent
+        self.carla_runner.on_finish()
+        self.carla_runner = CarlaRunner(agent_settings=self.agent_config,
+                                        carla_settings=self.carla_config,
+                                        npc_agent_class=self.npc_agent_class)
+        vehicle = self.carla_runner.set_carla_world()
+
+        if self.agent:
+            self.agent.reset(vehicle=vehicle)
+        else:
+            self.agent = self.EgoAgentClass(vehicle=vehicle, agent_settings=self.agent_config)
+        self.clock: Optional[pygame.time.Clock] = None
+        self._start_game()
+        return self.agent
+
     def render(self, mode='ego'):
         self.carla_runner.world.render(display=self.carla_runner.display)
         pygame.display.flip()
diff --git a/ROAR_gym/configurations/ppo_configuration.py b/ROAR_gym/configurations/ppo_configuration.py
index 31170af..498c6d6 100644
--- a/ROAR_gym/configurations/ppo_configuration.py
+++ b/ROAR_gym/configurations/ppo_configuration.py
@@ -10,8 +10,8 @@ sys.path.append(Path(os.getcwd()).parent.as_posix())
 misc_params = {
   "env_name": 'roar-e2e-ppo-v0',
   "run_fps": 8,  # TODO Link to the environment RUN_FPS
-  "model_directory": Path("./output/PPOe2e_Run_29"),
-  "run_name": "Run 29",
+  "model_directory": Path("./output/PPOe2e_Run_1"),
+  "run_name": "Run 3",
   "total_timesteps": int(1e6),
 }
 
diff --git a/ROAR_gym/configurations/wandb_configuration.json b/ROAR_gym/configurations/wandb_configuration.json
index 44a45f0..76b4c9d 100644
--- a/ROAR_gym/configurations/wandb_configuration.json
+++ b/ROAR_gym/configurations/wandb_configuration.json
@@ -1 +1 @@
-{"run_id": "Run 29", "name": "", "project_name": "Baseline", "entity": "roar"}
\ No newline at end of file
+{"run_id": "Run 11", "name": "", "project_name": "ROAR", "entity": "jingjingwei"}
\ No newline at end of file
diff --git a/ROAR_gym/e2eModel.py b/ROAR_gym/e2eModel.py
index fbd222f..63c342a 100644
--- a/ROAR_gym/e2eModel.py
+++ b/ROAR_gym/e2eModel.py
@@ -8,7 +8,7 @@ TODO: Before Running this file make the following changes:
     self._last_obs = np.nan_to_num(self._last_obs)
 
 to the following file:
-    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py
+    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
 
 2. Add this line after line 167 such that:
 with th.no_grad():
@@ -86,7 +86,7 @@ warnings.filterwarnings('ignore')
 try:
     from ROAR_Gym.envs.roar_env import LoggingCallback
 except:
-    from ROAR_Gym.ROAR_Gym.envs.roar_env import LoggingCallback
+    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
 
 # os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
 #  Parameters & Constants
@@ -156,7 +156,7 @@ def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_rando
 
     # Create a wandb run variable
     wandb.tensorboard.patch(
-        tensorboardX=False,
+        # tensorboardX=False,
         pytorch=True,
     )
     run = wandb.init(
@@ -253,13 +253,13 @@ def main(pass_num):
 
         print(f"Starting new run {run.id}")
     else:
-        # Load wandb run
+        # Load wandb run <-- TODO: What has been stored?
         run = wandb_run_init(
             wandb_hp_config,
             load=True,
         )
 
-        # Load the model
+        # Load the model <-- TODO: redirect to new location.
         model = PPO.load(
             latest_model_path,
             env=env,
@@ -289,14 +289,14 @@ def main(pass_num):
         callback=checkpoint_callback
     )
 
-    wandb_callback = WandbCallback(
+    wandb_callback = WandbCallback( # metadata: path, etc.
         verbose=2,
         model_save_path=f"models/{run.id}",
         gradient_save_freq=PPO_params["n_steps"],
         model_save_freq=wandb_saves["model_save_freq"],
     )
 
-    callbacks = CallbackList([
+    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
         wandb_callback,
         checkpoint_callback,
         event_callback,
diff --git a/ROAR_gym/models/Run 1/model.zip b/ROAR_gym/models/Run 1/model.zip
new file mode 100644
index 0000000..a24ab7b
Binary files /dev/null and b/ROAR_gym/models/Run 1/model.zip differ
diff --git a/ROAR_gym/models/Run 29/model.zip b/ROAR_gym/models/Run 29/model.zip
new file mode 100644
index 0000000..cc53ce6
Binary files /dev/null and b/ROAR_gym/models/Run 29/model.zip differ
diff --git a/ROAR_gym/models/Run 3/model.zip b/ROAR_gym/models/Run 3/model.zip
new file mode 100644
index 0000000..f12a8f0
Binary files /dev/null and b/ROAR_gym/models/Run 3/model.zip differ
diff --git a/ROAR_gym/models/Run 5/model.zip b/ROAR_gym/models/Run 5/model.zip
new file mode 100644
index 0000000..5fc48b8
Binary files /dev/null and b/ROAR_gym/models/Run 5/model.zip differ
diff --git a/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651740990.DESKTOP-014BV0C.25620.0 b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651740990.DESKTOP-014BV0C.25620.0
new file mode 100644
index 0000000..4f94072
Binary files /dev/null and b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651740990.DESKTOP-014BV0C.25620.0 differ
diff --git a/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651741606.DESKTOP-014BV0C.2176.0 b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651741606.DESKTOP-014BV0C.2176.0
new file mode 100644
index 0000000..1d1e9f1
Binary files /dev/null and b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651741606.DESKTOP-014BV0C.2176.0 differ
diff --git a/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744107.DESKTOP-014BV0C.20752.0 b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744107.DESKTOP-014BV0C.20752.0
new file mode 100644
index 0000000..95de3a9
Binary files /dev/null and b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744107.DESKTOP-014BV0C.20752.0 differ
diff --git a/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744260.DESKTOP-014BV0C.20952.0 b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744260.DESKTOP-014BV0C.20952.0
new file mode 100644
index 0000000..dd3acc9
Binary files /dev/null and b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744260.DESKTOP-014BV0C.20952.0 differ
diff --git a/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744657.DESKTOP-014BV0C.11480.0 b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744657.DESKTOP-014BV0C.11480.0
new file mode 100644
index 0000000..6488c90
Binary files /dev/null and b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744657.DESKTOP-014BV0C.11480.0 differ
diff --git a/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744687.DESKTOP-014BV0C.1360.0 b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744687.DESKTOP-014BV0C.1360.0
new file mode 100644
index 0000000..1f67171
Binary files /dev/null and b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744687.DESKTOP-014BV0C.1360.0 differ
diff --git a/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651782454.DESKTOP-014BV0C.12320.0 b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651782454.DESKTOP-014BV0C.12320.0
new file mode 100644
index 0000000..5463c1d
Binary files /dev/null and b/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651782454.DESKTOP-014BV0C.12320.0 differ
diff --git a/ROAR_gym/runs/Run 29/PPO_0/events.out.tfevents.1651740410.DESKTOP-014BV0C.25876.0 b/ROAR_gym/runs/Run 29/PPO_0/events.out.tfevents.1651740410.DESKTOP-014BV0C.25876.0
new file mode 100644
index 0000000..2655c98
Binary files /dev/null and b/ROAR_gym/runs/Run 29/PPO_0/events.out.tfevents.1651740410.DESKTOP-014BV0C.25876.0 differ
diff --git a/ROAR_gym/runs/Run 29/PPO_0/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0 b/ROAR_gym/runs/Run 29/PPO_0/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0
new file mode 100644
index 0000000..5bf5517
Binary files /dev/null and b/ROAR_gym/runs/Run 29/PPO_0/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0 differ
diff --git a/ROAR_gym/runs/Run 3/PPO_0/events.out.tfevents.1651783279.DESKTOP-014BV0C.2408.0 b/ROAR_gym/runs/Run 3/PPO_0/events.out.tfevents.1651783279.DESKTOP-014BV0C.2408.0
new file mode 100644
index 0000000..731611b
Binary files /dev/null and b/ROAR_gym/runs/Run 3/PPO_0/events.out.tfevents.1651783279.DESKTOP-014BV0C.2408.0 differ
diff --git a/ROAR_gym/runs/Run 3/PPO_0/events.out.tfevents.1651786678.DESKTOP-014BV0C.9720.0 b/ROAR_gym/runs/Run 3/PPO_0/events.out.tfevents.1651786678.DESKTOP-014BV0C.9720.0
new file mode 100644
index 0000000..76518c8
Binary files /dev/null and b/ROAR_gym/runs/Run 3/PPO_0/events.out.tfevents.1651786678.DESKTOP-014BV0C.9720.0 differ
diff --git a/ROAR_gym/runs/Run 5/PPO_0/events.out.tfevents.1651786980.DESKTOP-014BV0C.26248.0 b/ROAR_gym/runs/Run 5/PPO_0/events.out.tfevents.1651786980.DESKTOP-014BV0C.26248.0
new file mode 100644
index 0000000..84093b5
Binary files /dev/null and b/ROAR_gym/runs/Run 5/PPO_0/events.out.tfevents.1651786980.DESKTOP-014BV0C.26248.0 differ
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/code/ROAR_gym/e2eModel.py b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/code/ROAR_gym/e2eModel.py
new file mode 100644
index 0000000..63c342a
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/code/ROAR_gym/e2eModel.py	
@@ -0,0 +1,350 @@
+"""
+IMPORTANT
+IF YOU HAVE NOT RUN THIS FILE AS 'ADMIN' (OR OPENED PYCHARM AS 'ADMIN')
+STOP AND RESTART WITH ADMIN PRIVILEGES
+
+TODO: Before Running this file make the following changes:
+1. Add the following line:
+    self._last_obs = np.nan_to_num(self._last_obs)
+
+to the following file:
+    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+
+2. Add this line after line 167 such that:
+with th.no_grad():
+    # Convert to pytorch tensor or to TensorDict
+    self._last_obs = np.nan_to_num(self._last_obs)
+    obs_tensor = obs_as_tensor(self._last_obs, self.device)
+    actions, values, log_probs = self.policy.forward(obs_tensor)
+
+3. Add:
+
+        data.pop('_last_obs')
+
+    in  line 652 of base_class.py for sb3
+    possible location of file: \envs\ROAR\Lib\site-packages\stable_baselines3\common\base_class.py
+
+4. Change for on_policy_algorithm.py, in function collect_rollouts add:
+
+        self.env.reset()
+
+    before the following while loop:
+
+        while n_steps < n_rollout_steps:
+"""
+
+# IMPORTS
+# imports for logs and warnings
+import warnings
+import logging
+
+from typing import Optional, Dict
+
+# imports for weights and biases integration
+import wandb
+from wandb.integration.sb3 import WandbCallback
+
+# imports for file path handling
+import os
+import sys
+from pathlib import Path
+
+# imports for reading and writing json config files
+import json
+
+# imports from the ROAR module
+from ROAR_Sim.configurations.configuration import Configuration as CarlaConfig
+from ROAR.configurations.configuration import Configuration as AgentConfig
+from ROAR.agent_module.agent import Agent
+from ROAR.agent_module.rl_e2e_ppo_agent import RLe2ePPOAgent
+from ROAR.agent_module.forward_only_agent import ForwardOnlyAgent   # testing stuff
+
+# imports for reinforcement learning
+import gym
+import torch as th
+from stable_baselines3.ppo.ppo import PPO
+from stable_baselines3.ppo.policies import CnnPolicy
+from stable_baselines3.common.callbacks import CheckpointCallback, EveryNTimesteps, CallbackList, BaseCallback
+from stable_baselines3.common.monitor import Monitor
+from stable_baselines3.common.vec_env import DummyVecEnv, VecVideoRecorder
+
+
+# imports for helper functions and torch cnn models
+from ppo_util import find_latest_model, CustomMaxPoolCNN, Atari_PPO_Adapted_CNN
+
+sys.path.append(Path(os.getcwd()).parent.as_posix())
+
+# imports from config files
+from configurations.ppo_configuration import PPO_params, misc_params, wandb_saves
+agent_config = AgentConfig.parse_file(Path("configurations/agent_configuration.json"))
+carla_config = CarlaConfig.parse_file(Path("configurations/carla_configuration.json"))
+
+# Setup for the loggers
+logging.getLogger("tensorflow").setLevel(logging.ERROR)
+logging.getLogger("numpy").setLevel(logging.ERROR)
+warnings.filterwarnings('ignore')
+try:
+    from ROAR_Gym.envs.roar_env import LoggingCallback
+except:
+    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+
+# os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+#  Parameters & Constants
+CUDA_VISIBLE_DEVICES = 1
+RUN_FPS = misc_params["run_fps"]
+MODEL_DIR = misc_params["model_directory"]
+WANDB_CONFIG_DIR = "configurations/wandb_configuration.json"
+
+
+def json_read_write(file, load_var=None, mode='r'):
+    """
+
+    Args:
+        file: address of json file to be loaded
+        load_var: variable to be written to, or read from
+        mode: 'r' to read from json, 'w' to write to json
+
+    Returns:
+        load_var: variable with data that has been read in mode 'r'
+                  original variable in case of 'w'
+
+    """
+    if mode == 'r':
+        with open(file, mode) as json_file:
+            load_var = json.load(json_file)  # Reading the file
+            print(f"{file} json config read successful")
+            json_file.close()
+            return load_var
+    elif mode == 'w':
+        assert load_var is not None, "load_var was None"
+        with open(file, mode) as json_file:
+            json.dump(load_var, json_file)  # Writing to the file
+            print(f"{file} json config write successful")
+            json_file.close()
+            return load_var
+    else:
+        assert mode == 'w' or 'r', f"unsupported mode type: {mode}"
+        return None
+
+# TODO track previously used run IDs
+def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_random_id=False):
+
+    wandb_config = json_read_write(
+        file=WANDB_CONFIG_DIR,
+        mode='r',
+    )
+
+    if load is True:
+        # Load run_id from the config file
+        run_id = wandb_config["run_id"]
+        assert run_id != "", "Run ID not set even though previous run exists"
+    else:
+        # Create wandb run id
+        if requested_run_id is not None:
+            run_id = requested_run_id
+        else:
+            assert use_random_id is True, "RUN ID NOT SET FOR NEW RUN"
+            run_id = wandb.util.generate_id()
+
+        # Store run_id to wandb_configuration file
+        wandb_config["run_id"] = run_id
+        wandb_config = json_read_write(
+            file=WANDB_CONFIG_DIR,
+            load_var=wandb_config,
+            mode='w',
+        )
+
+    # Create a wandb run variable
+    wandb.tensorboard.patch(
+        # tensorboardX=False,
+        pytorch=True,
+    )
+    run = wandb.init(
+        project=wandb_config["project_name"],
+        entity=wandb_config["entity"],  # Change to whoever wants to log the data
+        config=wandb_hp_config,
+        # sync_tensorboard=True,  # auto-upload sb3's tensorboard metrics
+        save_code=True,  # Allows us to check diff of code between runs
+        resume="allow",
+        # magic=True,
+        id=run_id,
+        name=run_id,
+        #monitor_gym=True,  # auto-upload the videos of agents playing the game,
+    )
+
+    return run
+
+
+class Tensorboard_Faster_Logger(BaseCallback):
+    """
+    Callback for saving a model (the check is done every ``check_freq`` steps)
+    based on the training reward (in practice, we recommend using ``EvalCallback``).
+
+    :param check_freq:
+    :param log_dir: Path to the folder where the model will be saved.
+      It must contains the file created by the ``Monitor`` wrapper.
+    :param verbose: Verbosity level.
+    """
+    def __init__(self, check_freq: int, verbose: int = 1):
+        super(Tensorboard_Faster_Logger, self).__init__(verbose)
+        self.check_freq = check_freq
+
+    # def _init_callback(self) -> None:
+
+    def _on_step(self) -> bool:
+        if self.n_calls % self.check_freq == 0:
+            self.logger.dump(self.num_timesteps)
+        return True
+
+
+def main(pass_num):
+    # Create the gym environment using the configs
+    env = gym.make(
+        id=misc_params["env_name"],
+        params={
+            "agent_config": agent_config,
+            "carla_config": carla_config,
+            "ego_agent_class": RLe2ePPOAgent,
+        }
+    )
+    #print(th.cuda.is_available())
+
+    # Setting the feature extract or based on the environment mode
+    if env.mode == 'baseline':
+        policy_kwargs = dict(
+            features_extractor_class=Atari_PPO_Adapted_CNN,
+            features_extractor_kwargs=dict(features_dim=256)
+        )
+    else:
+        policy_kwargs = dict(
+            features_extractor_class=CustomMaxPoolCNN,
+            features_extractor_kwargs=dict(features_dim=256)
+        )
+
+    # training kwargs for PPO init
+    training_kwargs = PPO_params
+
+    # wandb config for current run hyper-parameters
+    wandb_hp_config = {
+        "policy_type": "CnnPolicy",
+        "env_name": misc_params["env_name"],
+        "training_kwargs": training_kwargs,
+    }
+
+    # Try to find latest model path if we have trained previously
+    latest_model_path = find_latest_model(MODEL_DIR)
+    # FIXME wandb may continue old run if the run crashes before it is logged
+    if latest_model_path is None:
+        # Create new wandb run
+        run = wandb_run_init(
+            wandb_hp_config,
+            load=False,
+            requested_run_id=misc_params["run_name"],
+        )
+
+        # Create model with tensorboard log
+        model = PPO(
+            CnnPolicy,
+            env=env,
+            policy_kwargs=policy_kwargs,
+            tensorboard_log=f"runs/{run.name}",  # TODO add "tensorboard" to logdir name
+            **training_kwargs
+        )
+
+        print(f"Starting new run {run.id}")
+    else:
+        # Load wandb run <-- TODO: What has been stored?
+        run = wandb_run_init(
+            wandb_hp_config,
+            load=True,
+        )
+
+        # Load the model <-- TODO: redirect to new location.
+        model = PPO.load(
+            latest_model_path,
+            env=env,
+            policy_kwargs=policy_kwargs,
+            tensorboard_log=f"runs/{run.name}",  # TODO add "tensorboard" to logdir name
+            **training_kwargs,
+        )
+
+        print(f"Loading old run {run.id}")
+
+    print("Model Loaded Successfully")
+
+    # Defining Callback Functions
+
+    logging_callback = LoggingCallback(model=model)
+
+    faster_Logging_Callback = Tensorboard_Faster_Logger(check_freq=wandb_saves["model_save_freq"])
+
+    checkpoint_callback = CheckpointCallback(
+        save_freq=wandb_saves["model_save_freq"],
+        verbose=2,
+        save_path=(MODEL_DIR / "logs").as_posix()
+    )
+
+    event_callback = EveryNTimesteps(
+        n_steps=wandb_saves["model_save_freq"],
+        callback=checkpoint_callback
+    )
+
+    wandb_callback = WandbCallback( # metadata: path, etc.
+        verbose=2,
+        model_save_path=f"models/{run.id}",
+        gradient_save_freq=PPO_params["n_steps"],
+        model_save_freq=wandb_saves["model_save_freq"],
+    )
+
+    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+        wandb_callback,
+        checkpoint_callback,
+        event_callback,
+        logging_callback
+        # faster_Logging_Callback
+    ])
+
+    # Begin learning
+    model = model.learn(
+        total_timesteps=misc_params["total_timesteps"],
+        callback=callbacks,
+        reset_num_timesteps=False,
+        # tb_log_name=wandb_config["run_id"],
+    )
+
+    # Save Model
+    model.save(MODEL_DIR / f"roar_e2e_model_{pass_num}")  # TODO fix naming convention
+    print("Successful Save!")
+    # # Finish wandb run
+    # run.finish()
+
+if __name__ == '__main__':
+    logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
+                        datefmt="%H:%M:%S", level=logging.INFO)
+    logging.getLogger("Controller").setLevel(logging.ERROR)
+    logging.getLogger("SimplePathFollowingLocalPlanner").setLevel(logging.ERROR)
+    i=0
+    while True:
+        main(i)
+        i += 1
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/conda-environment.yaml b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/conda-environment.yaml
new file mode 100644
index 0000000..e69de29
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/config.yaml b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/config.yaml
new file mode 100644
index 0000000..cc76694
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/config.yaml	
@@ -0,0 +1,294 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x00000273216B0BC8>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651740405
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 3
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000002726F067D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0.0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x0000027257033B08>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000002726EF0B318>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000002726F04A248>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740408.9643095
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 29
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/diff.patch b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/diff.patch
new file mode 100644
index 0000000..354a428
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/diff.patch	
@@ -0,0 +1,103 @@
+diff --git a/ROAR_gym/ROAR_Gym/__init__.py b/ROAR_gym/ROAR_Gym/__init__.py
+index 2989d64..a4d9062 100644
+--- a/ROAR_gym/ROAR_Gym/__init__.py
++++ b/ROAR_gym/ROAR_Gym/__init__.py
+@@ -20,7 +20,7 @@ register(
+     entry_point='ROAR_Gym.envs:ROAREnvE2E',
+ )
+ 
+-register(
+-    id='roar-multi-v0',
+-    entry_point='ROAR_Gym.envs:ROARMultiEnv',
+-)
+\ No newline at end of file
++# register(
++#     id='roar-multi-v0',
++#     entry_point='ROAR_Gym.envs:ROARMultiEnv',
++# )
+\ No newline at end of file
+diff --git a/ROAR_gym/ROAR_Gym/envs/__init__.py b/ROAR_gym/ROAR_Gym/envs/__init__.py
+index 21612d9..9f6ffa6 100644
+--- a/ROAR_gym/ROAR_Gym/envs/__init__.py
++++ b/ROAR_gym/ROAR_Gym/envs/__init__.py
+@@ -2,6 +2,6 @@ from ROAR_Gym.envs.roar_env import ROAREnv
+ from ROAR_Gym.envs.roar_pid_env import ROARPIDEnv
+ from ROAR_Gym.envs.roar_env_e2e import ROAREnvE2E
+ from ROAR_Gym.envs.e2eModel_roar_env import ROARppoEnvE2E
+-from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
++# from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
+ from ROAR_Gym.envs.line_detect import *
+ 
+diff --git a/ROAR_gym/configurations/wandb_configuration.json b/ROAR_gym/configurations/wandb_configuration.json
+index 44a45f0..1a46b99 100644
+--- a/ROAR_gym/configurations/wandb_configuration.json
++++ b/ROAR_gym/configurations/wandb_configuration.json
+@@ -1 +1 @@
+-{"run_id": "Run 29", "name": "", "project_name": "Baseline", "entity": "roar"}
+\ No newline at end of file
++{"run_id": "Run 29", "name": "", "project_name": "ROAR", "entity": "jingjingwei"}
+\ No newline at end of file
+diff --git a/ROAR_gym/e2eModel.py b/ROAR_gym/e2eModel.py
+index fbd222f..63c342a 100644
+--- a/ROAR_gym/e2eModel.py
++++ b/ROAR_gym/e2eModel.py
+@@ -8,7 +8,7 @@ TODO: Before Running this file make the following changes:
+     self._last_obs = np.nan_to_num(self._last_obs)
+ 
+ to the following file:
+-    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py
++    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+ 
+ 2. Add this line after line 167 such that:
+ with th.no_grad():
+@@ -86,7 +86,7 @@ warnings.filterwarnings('ignore')
+ try:
+     from ROAR_Gym.envs.roar_env import LoggingCallback
+ except:
+-    from ROAR_Gym.ROAR_Gym.envs.roar_env import LoggingCallback
++    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+ 
+ # os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+ #  Parameters & Constants
+@@ -156,7 +156,7 @@ def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_rando
+ 
+     # Create a wandb run variable
+     wandb.tensorboard.patch(
+-        tensorboardX=False,
++        # tensorboardX=False,
+         pytorch=True,
+     )
+     run = wandb.init(
+@@ -253,13 +253,13 @@ def main(pass_num):
+ 
+         print(f"Starting new run {run.id}")
+     else:
+-        # Load wandb run
++        # Load wandb run <-- TODO: What has been stored?
+         run = wandb_run_init(
+             wandb_hp_config,
+             load=True,
+         )
+ 
+-        # Load the model
++        # Load the model <-- TODO: redirect to new location.
+         model = PPO.load(
+             latest_model_path,
+             env=env,
+@@ -289,14 +289,14 @@ def main(pass_num):
+         callback=checkpoint_callback
+     )
+ 
+-    wandb_callback = WandbCallback(
++    wandb_callback = WandbCallback( # metadata: path, etc.
+         verbose=2,
+         model_save_path=f"models/{run.id}",
+         gradient_save_freq=PPO_params["n_steps"],
+         model_save_freq=wandb_saves["model_save_freq"],
+     )
+ 
+-    callbacks = CallbackList([
++    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+         wandb_callback,
+         checkpoint_callback,
+         event_callback,
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/events.out.tfevents.1651740410.DESKTOP-014BV0C.25876.0 b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/events.out.tfevents.1651740410.DESKTOP-014BV0C.25876.0
new file mode 120000
index 0000000..2ac8d6a
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/events.out.tfevents.1651740410.DESKTOP-014BV0C.25876.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 29/PPO_0/events.out.tfevents.1651740410.DESKTOP-014BV0C.25876.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0 b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0
new file mode 120000
index 0000000..74b5ccc
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 29/PPO_0/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/model.zip b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/model.zip
new file mode 120000
index 0000000..8ff906c
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/model.zip	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/models/Run 29/model.zip
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/requirements.txt b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/requirements.txt
new file mode 100644
index 0000000..629591c
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/requirements.txt	
@@ -0,0 +1,150 @@
+absl-py==1.0.0
+aiosignal==1.2.0
+ale-py==0.7.5
+argon2-cffi-bindings==21.2.0
+argon2-cffi==21.3.0
+async-timeout==4.0.2
+attrs==21.4.0
+autorom.accept-rom-license==0.4.2
+autorom==0.4.2
+backcall==0.2.0
+beautifulsoup4==4.11.1
+bleach==5.0.0
+cachetools==5.0.0
+carla==0.9.10
+certifi==2019.11.28
+cffi==1.15.0
+charset-normalizer==2.0.12
+click==8.1.3
+cloudpickle==2.0.0
+colorama==0.4.4
+cycler==0.11.0
+debugpy==1.6.0
+decorator==4.4.2
+defusedxml==0.7.1
+deprecated==1.2.13
+distlib==0.3.4
+docker-pycreds==0.4.0
+entrypoints==0.4
+fastjsonschema==2.15.3
+filelock==3.6.0
+fonttools==4.33.3
+frozenlist==1.3.0
+gitdb==4.0.9
+gitpython==3.1.27
+google-auth-oauthlib==0.4.6
+google-auth==2.6.6
+grpcio==1.43.0
+gym==0.21.0
+idna==3.3
+imageio-ffmpeg==0.4.2
+imageio==2.8.0
+importlib-metadata==4.11.3
+importlib-resources==5.7.1
+ipykernel==6.13.0
+ipython-genutils==0.2.0
+ipython==7.33.0
+ipywidgets==7.7.0
+jedi==0.18.1
+jinja2==3.1.2
+joblib==1.1.0
+jsonschema==4.4.0
+jupyter-client==7.3.0
+jupyter-core==4.10.0
+jupyterlab-pygments==0.2.2
+jupyterlab-widgets==1.1.0
+kiwisolver==1.4.2
+markdown==3.3.6
+markupsafe==2.1.1
+matplotlib-inline==0.1.3
+matplotlib==3.5.2
+mistune==0.8.4
+moviepy==1.0.3
+mpmath==1.2.1
+msgpack==1.0.3
+nbclient==0.6.2
+nbconvert==6.5.0
+nbformat==5.4.0
+nest-asyncio==1.5.5
+networkx==2.6.3
+notebook==6.4.11
+numpy==1.19.0
+oauthlib==3.2.0
+open3d==0.10.0.0
+opencv-contrib-python==4.4.0.42
+opencv-python==4.4.0.42
+openvr==1.14.1501
+packaging==21.3
+pandas==1.0.5
+pandocfilters==1.5.0
+parso==0.8.3
+pathtools==0.1.2
+pickleshare==0.7.5
+pillow==8.1.2
+pip==22.0.4
+platformdirs==2.5.2
+plotly==4.14.3
+prettytable==2.0.0
+proglog==0.1.9
+prometheus-client==0.14.1
+promise==2.3
+prompt-toolkit==3.0.29
+protobuf==3.20.1
+psutil==5.9.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycparser==2.21
+pydantic==1.5.1
+pygame==1.9.6
+pyglet==1.5.23
+pygments==2.12.0
+pyparsing==3.0.8
+pyrealsense2==2.38.1.2225
+pyrsistent==0.18.1
+pyserial==3.4
+python-dateutil==2.8.2
+pytz==2022.1
+pywavelets==1.3.0
+pywin32==304
+pywinpty==2.0.5
+pyyaml==6.0
+pyzmq==22.3.0
+ray==1.12.0
+redis==4.2.2
+requests-oauthlib==1.3.1
+requests==2.27.1
+retrying==1.3.3
+rsa==4.8
+scikit-image==0.16.2
+scipy==1.5.2
+send2trash==1.8.0
+sentry-sdk==1.5.11
+setproctitle==1.2.3
+setuptools==62.1.0
+shortuuid==1.0.8
+six==1.16.0
+smmap==5.0.0
+soupsieve==2.3.2.post1
+stable-baselines3==1.5.0
+sympy==1.7.1
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.1
+tensorboard==2.9.0
+terminado==0.13.3
+tinycss2==1.1.1
+torch==1.11.0
+torchvision==0.12.0
+tornado==6.1
+tqdm==4.64.0
+traitlets==5.1.1
+typing-extensions==4.2.0
+urllib3==1.26.9
+virtualenv==20.14.1
+wandb==0.12.16
+wcwidth==0.2.5
+webencodings==0.5.1
+werkzeug==2.1.2
+wheel==0.37.1
+widgetsnbextension==3.6.0
+wrapt==1.14.1
+zipp==3.8.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch
new file mode 100644
index 0000000..ddf053b
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch	
@@ -0,0 +1,281 @@
+diff --git a/Bridges/__pycache__/__init__.cpython-37.pyc b/Bridges/__pycache__/__init__.cpython-37.pyc
+index 748c80a..893843a 100644
+Binary files a/Bridges/__pycache__/__init__.cpython-37.pyc and b/Bridges/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/Bridges/__pycache__/bridge.cpython-37.pyc b/Bridges/__pycache__/bridge.cpython-37.pyc
+index d31942c..6290ebe 100644
+Binary files a/Bridges/__pycache__/bridge.cpython-37.pyc and b/Bridges/__pycache__/bridge.cpython-37.pyc differ
+diff --git a/Bridges/__pycache__/carla_bridge.cpython-37.pyc b/Bridges/__pycache__/carla_bridge.cpython-37.pyc
+index 2f8c9c7..c364856 100644
+Binary files a/Bridges/__pycache__/carla_bridge.cpython-37.pyc and b/Bridges/__pycache__/carla_bridge.cpython-37.pyc differ
+diff --git a/ROAR/__pycache__/__init__.cpython-37.pyc b/ROAR/__pycache__/__init__.cpython-37.pyc
+index 455e188..c8c0623 100644
+Binary files a/ROAR/__pycache__/__init__.cpython-37.pyc and b/ROAR/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc
+index 84e3be8..1009acf 100644
+Binary files a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc
+index 0b1ba9f..9742dcc 100644
+Binary files a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc
+index 841d66d..55b89fb 100644
+Binary files a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc
+index 03e1014..92b14a2 100644
+Binary files a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc
+index cfa960a..42f4506 100644
+Binary files a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc
+index c0ee652..303da5c 100644
+Binary files a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc
+index 4204108..e70abce 100644
+Binary files a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc
+index 98a2b8a..3cd2956 100644
+Binary files a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc differ
+diff --git a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc
+index 9449546..7e2c553 100644
+Binary files a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc
+index 82c261f..9e685ff 100644
+Binary files a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/controller.cpython-37.pyc b/ROAR/control_module/__pycache__/controller.cpython-37.pyc
+index 6443e8f..90ac7c5 100644
+Binary files a/ROAR/control_module/__pycache__/controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/controller.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc
+index 391e7bc..867822a 100644
+Binary files a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc
+index 0e2ca63..a4696b6 100644
+Binary files a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc and b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc
+index c12f588..5c42b9d 100644
+Binary files a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc
+index 52c9a49..2f0fb36 100644
+Binary files a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc
+index f6e7a5f..5eef87c 100644
+Binary files a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc
+index a3b9d51..105e490 100644
+Binary files a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc
+index 98ce179..0fbbbef 100644
+Binary files a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc
+index d9da805..3bda57a 100644
+Binary files a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc
+index 12e72a4..fe8d5a1 100644
+Binary files a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc
+index aca849f..2a8eb3e 100644
+Binary files a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc
+index 62e6f0c..3e54513 100644
+Binary files a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc
+index dad5d0d..990dca0 100644
+Binary files a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc and b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc
+index 7bc0045..51a7efa 100644
+Binary files a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc
+index 174b209..4dba087 100644
+Binary files a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc
+index 19daef3..c32e87d 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc
+index 54bd8f0..d6d0e38 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc
+index 9b54d47..054e40e 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc
+index 7fe96e6..62f47a3 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc
+index f666feb..e09db3f 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc
+index e339030..8dece62 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc
+index 3cf685f..d0fbb37 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc
+index 0250514..77233df 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc
+index 00ab4de..2a15a16 100644
+Binary files a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc
+index 86f93dc..8dba6e8 100644
+Binary files a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc
+index d636bc0..466de9c 100644
+Binary files a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc
+index d7e8cad..b84d89b 100644
+Binary files a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc
+index 1c8adb5..448e375 100644
+Binary files a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc
+index 6e2c1e3..95f385a 100644
+Binary files a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc
+index 7341979..9b0a837 100644
+Binary files a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc
+index 1152170..6fa437a 100644
+Binary files a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc differ
+diff --git a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc
+index 717c785..a39046d 100644
+Binary files a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc
+index ad18fd4..c12bd72 100644
+Binary files a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc
+index 34f7870..b90f5ce 100644
+Binary files a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc
+index cab1782..b19abb6 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc
+index e5483e6..df1a284 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc
+index 67f0c8a..ce64669 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc
+index a98bf88..31473c6 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc
+index 15303f6..c8686a2 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc
+index a3db8ca..dbbb536 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc differ
+diff --git a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc
+index 683efc4..925c8f2 100644
+Binary files a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR_gym/ROAR_Gym/__init__.py b/ROAR_gym/ROAR_Gym/__init__.py
+index 2989d64..a4d9062 100644
+--- a/ROAR_gym/ROAR_Gym/__init__.py
++++ b/ROAR_gym/ROAR_Gym/__init__.py
+@@ -20,7 +20,7 @@ register(
+     entry_point='ROAR_Gym.envs:ROAREnvE2E',
+ )
+ 
+-register(
+-    id='roar-multi-v0',
+-    entry_point='ROAR_Gym.envs:ROARMultiEnv',
+-)
+\ No newline at end of file
++# register(
++#     id='roar-multi-v0',
++#     entry_point='ROAR_Gym.envs:ROARMultiEnv',
++# )
+\ No newline at end of file
+diff --git a/ROAR_gym/ROAR_Gym/envs/__init__.py b/ROAR_gym/ROAR_Gym/envs/__init__.py
+index 21612d9..9f6ffa6 100644
+--- a/ROAR_gym/ROAR_Gym/envs/__init__.py
++++ b/ROAR_gym/ROAR_Gym/envs/__init__.py
+@@ -2,6 +2,6 @@ from ROAR_Gym.envs.roar_env import ROAREnv
+ from ROAR_Gym.envs.roar_pid_env import ROARPIDEnv
+ from ROAR_Gym.envs.roar_env_e2e import ROAREnvE2E
+ from ROAR_Gym.envs.e2eModel_roar_env import ROARppoEnvE2E
+-from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
++# from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
+ from ROAR_Gym.envs.line_detect import *
+ 
+diff --git a/ROAR_gym/configurations/wandb_configuration.json b/ROAR_gym/configurations/wandb_configuration.json
+index 44a45f0..1a46b99 100644
+--- a/ROAR_gym/configurations/wandb_configuration.json
++++ b/ROAR_gym/configurations/wandb_configuration.json
+@@ -1 +1 @@
+-{"run_id": "Run 29", "name": "", "project_name": "Baseline", "entity": "roar"}
+\ No newline at end of file
++{"run_id": "Run 29", "name": "", "project_name": "ROAR", "entity": "jingjingwei"}
+\ No newline at end of file
+diff --git a/ROAR_gym/e2eModel.py b/ROAR_gym/e2eModel.py
+index fbd222f..63c342a 100644
+--- a/ROAR_gym/e2eModel.py
++++ b/ROAR_gym/e2eModel.py
+@@ -8,7 +8,7 @@ TODO: Before Running this file make the following changes:
+     self._last_obs = np.nan_to_num(self._last_obs)
+ 
+ to the following file:
+-    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py
++    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+ 
+ 2. Add this line after line 167 such that:
+ with th.no_grad():
+@@ -86,7 +86,7 @@ warnings.filterwarnings('ignore')
+ try:
+     from ROAR_Gym.envs.roar_env import LoggingCallback
+ except:
+-    from ROAR_Gym.ROAR_Gym.envs.roar_env import LoggingCallback
++    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+ 
+ # os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+ #  Parameters & Constants
+@@ -156,7 +156,7 @@ def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_rando
+ 
+     # Create a wandb run variable
+     wandb.tensorboard.patch(
+-        tensorboardX=False,
++        # tensorboardX=False,
+         pytorch=True,
+     )
+     run = wandb.init(
+@@ -253,13 +253,13 @@ def main(pass_num):
+ 
+         print(f"Starting new run {run.id}")
+     else:
+-        # Load wandb run
++        # Load wandb run <-- TODO: What has been stored?
+         run = wandb_run_init(
+             wandb_hp_config,
+             load=True,
+         )
+ 
+-        # Load the model
++        # Load the model <-- TODO: redirect to new location.
+         model = PPO.load(
+             latest_model_path,
+             env=env,
+@@ -289,14 +289,14 @@ def main(pass_num):
+         callback=checkpoint_callback
+     )
+ 
+-    wandb_callback = WandbCallback(
++    wandb_callback = WandbCallback( # metadata: path, etc.
+         verbose=2,
+         model_save_path=f"models/{run.id}",
+         gradient_save_freq=PPO_params["n_steps"],
+         model_save_freq=wandb_saves["model_save_freq"],
+     )
+ 
+-    callbacks = CallbackList([
++    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+         wandb_callback,
+         checkpoint_callback,
+         event_callback,
+diff --git a/readme.md b/readme.md
+index 5b12ca0..25639ef 100644
+--- a/readme.md
++++ b/readme.md
+@@ -23,7 +23,7 @@ ROAR/ROAR_Sim/configurations/npc_config.json
+ ### Some Concept
+ CARLA provides support for multi-agent through the following three core concepts.
+ - Actor: Actor is anything that participates in the simulation and can be moved around, for example, vehicles, pedestrians.
+-- Blueprint:Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
++- Blueprint: Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
+ - World: The world is the major ruler of the simulation. It represents the currently loaded map, and contains the setting of parameters of the current simulation environment and functions that create, control and destroy actors. CARLA provides carla.World as the default world setting. 
+ 
+ ### Result
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/wandb-metadata.json b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/wandb-metadata.json
new file mode 100644
index 0000000..8ee5d65
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/wandb-metadata.json	
@@ -0,0 +1,24 @@
+{
+    "os": "Windows-10-10.0.19041-SP0",
+    "python": "3.7.12",
+    "heartbeatAt": "2022-05-05T08:46:48.329008",
+    "startedAt": "2022-05-05T08:46:45.766759",
+    "docker": null,
+    "gpu": "NVIDIA GeForce RTX 2080",
+    "gpu_count": 1,
+    "cpu_count": 12,
+    "cuda": null,
+    "args": [],
+    "state": "running",
+    "program": "C:/Users/Ma_Ya/ROAR/ROAR_gym/e2eModel.py",
+    "codePath": "ROAR_gym\\e2eModel.py",
+    "git": {
+        "remote": "git@github.com:Allison-1999/ROAR.git",
+        "commit": "a12966ac4c7da853bb30c5ca35a2c6962bff5c44"
+    },
+    "email": "jingjingwei@berkeley.edu",
+    "root": "C:/Users/Ma_Ya/ROAR",
+    "host": "DESKTOP-014BV0C",
+    "username": "Ma_Ya",
+    "executable": "C:\\Users\\Ma_Ya\\.conda\\envs\\ROAR\\python.exe"
+}
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/wandb-summary.json
new file mode 100644
index 0000000..87805c6
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014645-Run 29/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"Episode reward": -2708.75, "Episode actual reward": -400.2266010238612, "Checkpoint reached": 45, "largest_steps": 159, "highest_speed": 66.96382995367924, "avg10_checkpoints": 106.36363636363636, "avg10_score": -495.40909090909093, "avg10_actual_score": -632.4813295397189, "highest_actual_score": -432.8771927196724, "_timestamp": 1651740739, "_runtime": 334, "_step": 1979}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_014645-Run 29/run-Run 29.wandb b/ROAR_gym/wandb/run-20220505_014645-Run 29/run-Run 29.wandb
new file mode 100644
index 0000000..8a758f2
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_014645-Run 29/run-Run 29.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_014949-Run 29/files/config.yaml b/ROAR_gym/wandb/run-20220505_014949-Run 29/files/config.yaml
new file mode 100644
index 0000000..e5270cf
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014949-Run 29/files/config.yaml	
@@ -0,0 +1,294 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x00000273216B0BC8>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651740589
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 5
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000002726F067D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x0000027257033B08>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000002726EF0B318>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000002726F04A248>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740408.9643097
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 29
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_014949-Run 29/files/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0 b/ROAR_gym/wandb/run-20220505_014949-Run 29/files/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0
new file mode 120000
index 0000000..74b5ccc
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014949-Run 29/files/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 29/PPO_0/events.out.tfevents.1651740597.DESKTOP-014BV0C.20556.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_014949-Run 29/files/model.zip b/ROAR_gym/wandb/run-20220505_014949-Run 29/files/model.zip
new file mode 120000
index 0000000..8ff906c
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014949-Run 29/files/model.zip	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/models/Run 29/model.zip
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_014949-Run 29/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_014949-Run 29/files/wandb-summary.json
new file mode 100644
index 0000000..ceb01a2
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_014949-Run 29/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"_step": 1709, "_timestamp": 1651740741, "avg10_score": -251.3181818181818, "largest_steps": 48, "Episode reward": -60, "avg10_checkpoints": 51.81818181818182, "Checkpoint reached": 0, "highest_actual_score": -300.7846925364691, "_runtime": 331, "highest_speed": 59.258497957081815, "avg10_actual_score": -731.1340493098737, "Episode actual reward": -874.1115668388508}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_014949-Run 29/run-Run 29.wandb b/ROAR_gym/wandb/run-20220505_014949-Run 29/run-Run 29.wandb
new file mode 100644
index 0000000..6f05a71
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_014949-Run 29/run-Run 29.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/files/code/ROAR_gym/e2eModel.py b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/code/ROAR_gym/e2eModel.py
new file mode 100644
index 0000000..63c342a
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/code/ROAR_gym/e2eModel.py	
@@ -0,0 +1,350 @@
+"""
+IMPORTANT
+IF YOU HAVE NOT RUN THIS FILE AS 'ADMIN' (OR OPENED PYCHARM AS 'ADMIN')
+STOP AND RESTART WITH ADMIN PRIVILEGES
+
+TODO: Before Running this file make the following changes:
+1. Add the following line:
+    self._last_obs = np.nan_to_num(self._last_obs)
+
+to the following file:
+    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+
+2. Add this line after line 167 such that:
+with th.no_grad():
+    # Convert to pytorch tensor or to TensorDict
+    self._last_obs = np.nan_to_num(self._last_obs)
+    obs_tensor = obs_as_tensor(self._last_obs, self.device)
+    actions, values, log_probs = self.policy.forward(obs_tensor)
+
+3. Add:
+
+        data.pop('_last_obs')
+
+    in  line 652 of base_class.py for sb3
+    possible location of file: \envs\ROAR\Lib\site-packages\stable_baselines3\common\base_class.py
+
+4. Change for on_policy_algorithm.py, in function collect_rollouts add:
+
+        self.env.reset()
+
+    before the following while loop:
+
+        while n_steps < n_rollout_steps:
+"""
+
+# IMPORTS
+# imports for logs and warnings
+import warnings
+import logging
+
+from typing import Optional, Dict
+
+# imports for weights and biases integration
+import wandb
+from wandb.integration.sb3 import WandbCallback
+
+# imports for file path handling
+import os
+import sys
+from pathlib import Path
+
+# imports for reading and writing json config files
+import json
+
+# imports from the ROAR module
+from ROAR_Sim.configurations.configuration import Configuration as CarlaConfig
+from ROAR.configurations.configuration import Configuration as AgentConfig
+from ROAR.agent_module.agent import Agent
+from ROAR.agent_module.rl_e2e_ppo_agent import RLe2ePPOAgent
+from ROAR.agent_module.forward_only_agent import ForwardOnlyAgent   # testing stuff
+
+# imports for reinforcement learning
+import gym
+import torch as th
+from stable_baselines3.ppo.ppo import PPO
+from stable_baselines3.ppo.policies import CnnPolicy
+from stable_baselines3.common.callbacks import CheckpointCallback, EveryNTimesteps, CallbackList, BaseCallback
+from stable_baselines3.common.monitor import Monitor
+from stable_baselines3.common.vec_env import DummyVecEnv, VecVideoRecorder
+
+
+# imports for helper functions and torch cnn models
+from ppo_util import find_latest_model, CustomMaxPoolCNN, Atari_PPO_Adapted_CNN
+
+sys.path.append(Path(os.getcwd()).parent.as_posix())
+
+# imports from config files
+from configurations.ppo_configuration import PPO_params, misc_params, wandb_saves
+agent_config = AgentConfig.parse_file(Path("configurations/agent_configuration.json"))
+carla_config = CarlaConfig.parse_file(Path("configurations/carla_configuration.json"))
+
+# Setup for the loggers
+logging.getLogger("tensorflow").setLevel(logging.ERROR)
+logging.getLogger("numpy").setLevel(logging.ERROR)
+warnings.filterwarnings('ignore')
+try:
+    from ROAR_Gym.envs.roar_env import LoggingCallback
+except:
+    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+
+# os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+#  Parameters & Constants
+CUDA_VISIBLE_DEVICES = 1
+RUN_FPS = misc_params["run_fps"]
+MODEL_DIR = misc_params["model_directory"]
+WANDB_CONFIG_DIR = "configurations/wandb_configuration.json"
+
+
+def json_read_write(file, load_var=None, mode='r'):
+    """
+
+    Args:
+        file: address of json file to be loaded
+        load_var: variable to be written to, or read from
+        mode: 'r' to read from json, 'w' to write to json
+
+    Returns:
+        load_var: variable with data that has been read in mode 'r'
+                  original variable in case of 'w'
+
+    """
+    if mode == 'r':
+        with open(file, mode) as json_file:
+            load_var = json.load(json_file)  # Reading the file
+            print(f"{file} json config read successful")
+            json_file.close()
+            return load_var
+    elif mode == 'w':
+        assert load_var is not None, "load_var was None"
+        with open(file, mode) as json_file:
+            json.dump(load_var, json_file)  # Writing to the file
+            print(f"{file} json config write successful")
+            json_file.close()
+            return load_var
+    else:
+        assert mode == 'w' or 'r', f"unsupported mode type: {mode}"
+        return None
+
+# TODO track previously used run IDs
+def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_random_id=False):
+
+    wandb_config = json_read_write(
+        file=WANDB_CONFIG_DIR,
+        mode='r',
+    )
+
+    if load is True:
+        # Load run_id from the config file
+        run_id = wandb_config["run_id"]
+        assert run_id != "", "Run ID not set even though previous run exists"
+    else:
+        # Create wandb run id
+        if requested_run_id is not None:
+            run_id = requested_run_id
+        else:
+            assert use_random_id is True, "RUN ID NOT SET FOR NEW RUN"
+            run_id = wandb.util.generate_id()
+
+        # Store run_id to wandb_configuration file
+        wandb_config["run_id"] = run_id
+        wandb_config = json_read_write(
+            file=WANDB_CONFIG_DIR,
+            load_var=wandb_config,
+            mode='w',
+        )
+
+    # Create a wandb run variable
+    wandb.tensorboard.patch(
+        # tensorboardX=False,
+        pytorch=True,
+    )
+    run = wandb.init(
+        project=wandb_config["project_name"],
+        entity=wandb_config["entity"],  # Change to whoever wants to log the data
+        config=wandb_hp_config,
+        # sync_tensorboard=True,  # auto-upload sb3's tensorboard metrics
+        save_code=True,  # Allows us to check diff of code between runs
+        resume="allow",
+        # magic=True,
+        id=run_id,
+        name=run_id,
+        #monitor_gym=True,  # auto-upload the videos of agents playing the game,
+    )
+
+    return run
+
+
+class Tensorboard_Faster_Logger(BaseCallback):
+    """
+    Callback for saving a model (the check is done every ``check_freq`` steps)
+    based on the training reward (in practice, we recommend using ``EvalCallback``).
+
+    :param check_freq:
+    :param log_dir: Path to the folder where the model will be saved.
+      It must contains the file created by the ``Monitor`` wrapper.
+    :param verbose: Verbosity level.
+    """
+    def __init__(self, check_freq: int, verbose: int = 1):
+        super(Tensorboard_Faster_Logger, self).__init__(verbose)
+        self.check_freq = check_freq
+
+    # def _init_callback(self) -> None:
+
+    def _on_step(self) -> bool:
+        if self.n_calls % self.check_freq == 0:
+            self.logger.dump(self.num_timesteps)
+        return True
+
+
+def main(pass_num):
+    # Create the gym environment using the configs
+    env = gym.make(
+        id=misc_params["env_name"],
+        params={
+            "agent_config": agent_config,
+            "carla_config": carla_config,
+            "ego_agent_class": RLe2ePPOAgent,
+        }
+    )
+    #print(th.cuda.is_available())
+
+    # Setting the feature extract or based on the environment mode
+    if env.mode == 'baseline':
+        policy_kwargs = dict(
+            features_extractor_class=Atari_PPO_Adapted_CNN,
+            features_extractor_kwargs=dict(features_dim=256)
+        )
+    else:
+        policy_kwargs = dict(
+            features_extractor_class=CustomMaxPoolCNN,
+            features_extractor_kwargs=dict(features_dim=256)
+        )
+
+    # training kwargs for PPO init
+    training_kwargs = PPO_params
+
+    # wandb config for current run hyper-parameters
+    wandb_hp_config = {
+        "policy_type": "CnnPolicy",
+        "env_name": misc_params["env_name"],
+        "training_kwargs": training_kwargs,
+    }
+
+    # Try to find latest model path if we have trained previously
+    latest_model_path = find_latest_model(MODEL_DIR)
+    # FIXME wandb may continue old run if the run crashes before it is logged
+    if latest_model_path is None:
+        # Create new wandb run
+        run = wandb_run_init(
+            wandb_hp_config,
+            load=False,
+            requested_run_id=misc_params["run_name"],
+        )
+
+        # Create model with tensorboard log
+        model = PPO(
+            CnnPolicy,
+            env=env,
+            policy_kwargs=policy_kwargs,
+            tensorboard_log=f"runs/{run.name}",  # TODO add "tensorboard" to logdir name
+            **training_kwargs
+        )
+
+        print(f"Starting new run {run.id}")
+    else:
+        # Load wandb run <-- TODO: What has been stored?
+        run = wandb_run_init(
+            wandb_hp_config,
+            load=True,
+        )
+
+        # Load the model <-- TODO: redirect to new location.
+        model = PPO.load(
+            latest_model_path,
+            env=env,
+            policy_kwargs=policy_kwargs,
+            tensorboard_log=f"runs/{run.name}",  # TODO add "tensorboard" to logdir name
+            **training_kwargs,
+        )
+
+        print(f"Loading old run {run.id}")
+
+    print("Model Loaded Successfully")
+
+    # Defining Callback Functions
+
+    logging_callback = LoggingCallback(model=model)
+
+    faster_Logging_Callback = Tensorboard_Faster_Logger(check_freq=wandb_saves["model_save_freq"])
+
+    checkpoint_callback = CheckpointCallback(
+        save_freq=wandb_saves["model_save_freq"],
+        verbose=2,
+        save_path=(MODEL_DIR / "logs").as_posix()
+    )
+
+    event_callback = EveryNTimesteps(
+        n_steps=wandb_saves["model_save_freq"],
+        callback=checkpoint_callback
+    )
+
+    wandb_callback = WandbCallback( # metadata: path, etc.
+        verbose=2,
+        model_save_path=f"models/{run.id}",
+        gradient_save_freq=PPO_params["n_steps"],
+        model_save_freq=wandb_saves["model_save_freq"],
+    )
+
+    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+        wandb_callback,
+        checkpoint_callback,
+        event_callback,
+        logging_callback
+        # faster_Logging_Callback
+    ])
+
+    # Begin learning
+    model = model.learn(
+        total_timesteps=misc_params["total_timesteps"],
+        callback=callbacks,
+        reset_num_timesteps=False,
+        # tb_log_name=wandb_config["run_id"],
+    )
+
+    # Save Model
+    model.save(MODEL_DIR / f"roar_e2e_model_{pass_num}")  # TODO fix naming convention
+    print("Successful Save!")
+    # # Finish wandb run
+    # run.finish()
+
+if __name__ == '__main__':
+    logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
+                        datefmt="%H:%M:%S", level=logging.INFO)
+    logging.getLogger("Controller").setLevel(logging.ERROR)
+    logging.getLogger("SimplePathFollowingLocalPlanner").setLevel(logging.ERROR)
+    i=0
+    while True:
+        main(i)
+        i += 1
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/files/conda-environment.yaml b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/conda-environment.yaml
new file mode 100644
index 0000000..e69de29
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/config.yaml
new file mode 100644
index 0000000..a1cb791
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/config.yaml	
@@ -0,0 +1,297 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000001F02C6C8608>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651740984
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      2:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78DF6D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0.0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001EF78C02688>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78C6BCA8>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000001EF78DD3748>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740988.1926534
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 1
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/files/diff.patch b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/diff.patch
new file mode 100644
index 0000000..362e4ea
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/diff.patch	
@@ -0,0 +1,118 @@
+diff --git a/ROAR_gym/ROAR_Gym/__init__.py b/ROAR_gym/ROAR_Gym/__init__.py
+index 2989d64..a4d9062 100644
+--- a/ROAR_gym/ROAR_Gym/__init__.py
++++ b/ROAR_gym/ROAR_Gym/__init__.py
+@@ -20,7 +20,7 @@ register(
+     entry_point='ROAR_Gym.envs:ROAREnvE2E',
+ )
+ 
+-register(
+-    id='roar-multi-v0',
+-    entry_point='ROAR_Gym.envs:ROARMultiEnv',
+-)
+\ No newline at end of file
++# register(
++#     id='roar-multi-v0',
++#     entry_point='ROAR_Gym.envs:ROARMultiEnv',
++# )
+\ No newline at end of file
+diff --git a/ROAR_gym/ROAR_Gym/envs/__init__.py b/ROAR_gym/ROAR_Gym/envs/__init__.py
+index 21612d9..9f6ffa6 100644
+--- a/ROAR_gym/ROAR_Gym/envs/__init__.py
++++ b/ROAR_gym/ROAR_Gym/envs/__init__.py
+@@ -2,6 +2,6 @@ from ROAR_Gym.envs.roar_env import ROAREnv
+ from ROAR_Gym.envs.roar_pid_env import ROARPIDEnv
+ from ROAR_Gym.envs.roar_env_e2e import ROAREnvE2E
+ from ROAR_Gym.envs.e2eModel_roar_env import ROARppoEnvE2E
+-from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
++# from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
+ from ROAR_Gym.envs.line_detect import *
+ 
+diff --git a/ROAR_gym/configurations/ppo_configuration.py b/ROAR_gym/configurations/ppo_configuration.py
+index 31170af..a940a5d 100644
+--- a/ROAR_gym/configurations/ppo_configuration.py
++++ b/ROAR_gym/configurations/ppo_configuration.py
+@@ -10,8 +10,8 @@ sys.path.append(Path(os.getcwd()).parent.as_posix())
+ misc_params = {
+   "env_name": 'roar-e2e-ppo-v0',
+   "run_fps": 8,  # TODO Link to the environment RUN_FPS
+-  "model_directory": Path("./output/PPOe2e_Run_29"),
+-  "run_name": "Run 29",
++  "model_directory": Path("./output/PPOe2e_Run_1"),
++  "run_name": "Run 1",
+   "total_timesteps": int(1e6),
+ }
+ 
+diff --git a/ROAR_gym/configurations/wandb_configuration.json b/ROAR_gym/configurations/wandb_configuration.json
+index 44a45f0..7e9d392 100644
+--- a/ROAR_gym/configurations/wandb_configuration.json
++++ b/ROAR_gym/configurations/wandb_configuration.json
+@@ -1 +1 @@
+-{"run_id": "Run 29", "name": "", "project_name": "Baseline", "entity": "roar"}
+\ No newline at end of file
++{"run_id": "Run 1", "name": "", "project_name": "ROAR", "entity": "jingjingwei"}
+\ No newline at end of file
+diff --git a/ROAR_gym/e2eModel.py b/ROAR_gym/e2eModel.py
+index fbd222f..63c342a 100644
+--- a/ROAR_gym/e2eModel.py
++++ b/ROAR_gym/e2eModel.py
+@@ -8,7 +8,7 @@ TODO: Before Running this file make the following changes:
+     self._last_obs = np.nan_to_num(self._last_obs)
+ 
+ to the following file:
+-    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py
++    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+ 
+ 2. Add this line after line 167 such that:
+ with th.no_grad():
+@@ -86,7 +86,7 @@ warnings.filterwarnings('ignore')
+ try:
+     from ROAR_Gym.envs.roar_env import LoggingCallback
+ except:
+-    from ROAR_Gym.ROAR_Gym.envs.roar_env import LoggingCallback
++    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+ 
+ # os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+ #  Parameters & Constants
+@@ -156,7 +156,7 @@ def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_rando
+ 
+     # Create a wandb run variable
+     wandb.tensorboard.patch(
+-        tensorboardX=False,
++        # tensorboardX=False,
+         pytorch=True,
+     )
+     run = wandb.init(
+@@ -253,13 +253,13 @@ def main(pass_num):
+ 
+         print(f"Starting new run {run.id}")
+     else:
+-        # Load wandb run
++        # Load wandb run <-- TODO: What has been stored?
+         run = wandb_run_init(
+             wandb_hp_config,
+             load=True,
+         )
+ 
+-        # Load the model
++        # Load the model <-- TODO: redirect to new location.
+         model = PPO.load(
+             latest_model_path,
+             env=env,
+@@ -289,14 +289,14 @@ def main(pass_num):
+         callback=checkpoint_callback
+     )
+ 
+-    wandb_callback = WandbCallback(
++    wandb_callback = WandbCallback( # metadata: path, etc.
+         verbose=2,
+         model_save_path=f"models/{run.id}",
+         gradient_save_freq=PPO_params["n_steps"],
+         model_save_freq=wandb_saves["model_save_freq"],
+     )
+ 
+-    callbacks = CallbackList([
++    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+         wandb_callback,
+         checkpoint_callback,
+         event_callback,
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/files/events.out.tfevents.1651740990.DESKTOP-014BV0C.25620.0 b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/events.out.tfevents.1651740990.DESKTOP-014BV0C.25620.0
new file mode 120000
index 0000000..9e58217
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/events.out.tfevents.1651740990.DESKTOP-014BV0C.25620.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651740990.DESKTOP-014BV0C.25620.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/files/requirements.txt b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/requirements.txt
new file mode 100644
index 0000000..629591c
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/requirements.txt	
@@ -0,0 +1,150 @@
+absl-py==1.0.0
+aiosignal==1.2.0
+ale-py==0.7.5
+argon2-cffi-bindings==21.2.0
+argon2-cffi==21.3.0
+async-timeout==4.0.2
+attrs==21.4.0
+autorom.accept-rom-license==0.4.2
+autorom==0.4.2
+backcall==0.2.0
+beautifulsoup4==4.11.1
+bleach==5.0.0
+cachetools==5.0.0
+carla==0.9.10
+certifi==2019.11.28
+cffi==1.15.0
+charset-normalizer==2.0.12
+click==8.1.3
+cloudpickle==2.0.0
+colorama==0.4.4
+cycler==0.11.0
+debugpy==1.6.0
+decorator==4.4.2
+defusedxml==0.7.1
+deprecated==1.2.13
+distlib==0.3.4
+docker-pycreds==0.4.0
+entrypoints==0.4
+fastjsonschema==2.15.3
+filelock==3.6.0
+fonttools==4.33.3
+frozenlist==1.3.0
+gitdb==4.0.9
+gitpython==3.1.27
+google-auth-oauthlib==0.4.6
+google-auth==2.6.6
+grpcio==1.43.0
+gym==0.21.0
+idna==3.3
+imageio-ffmpeg==0.4.2
+imageio==2.8.0
+importlib-metadata==4.11.3
+importlib-resources==5.7.1
+ipykernel==6.13.0
+ipython-genutils==0.2.0
+ipython==7.33.0
+ipywidgets==7.7.0
+jedi==0.18.1
+jinja2==3.1.2
+joblib==1.1.0
+jsonschema==4.4.0
+jupyter-client==7.3.0
+jupyter-core==4.10.0
+jupyterlab-pygments==0.2.2
+jupyterlab-widgets==1.1.0
+kiwisolver==1.4.2
+markdown==3.3.6
+markupsafe==2.1.1
+matplotlib-inline==0.1.3
+matplotlib==3.5.2
+mistune==0.8.4
+moviepy==1.0.3
+mpmath==1.2.1
+msgpack==1.0.3
+nbclient==0.6.2
+nbconvert==6.5.0
+nbformat==5.4.0
+nest-asyncio==1.5.5
+networkx==2.6.3
+notebook==6.4.11
+numpy==1.19.0
+oauthlib==3.2.0
+open3d==0.10.0.0
+opencv-contrib-python==4.4.0.42
+opencv-python==4.4.0.42
+openvr==1.14.1501
+packaging==21.3
+pandas==1.0.5
+pandocfilters==1.5.0
+parso==0.8.3
+pathtools==0.1.2
+pickleshare==0.7.5
+pillow==8.1.2
+pip==22.0.4
+platformdirs==2.5.2
+plotly==4.14.3
+prettytable==2.0.0
+proglog==0.1.9
+prometheus-client==0.14.1
+promise==2.3
+prompt-toolkit==3.0.29
+protobuf==3.20.1
+psutil==5.9.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycparser==2.21
+pydantic==1.5.1
+pygame==1.9.6
+pyglet==1.5.23
+pygments==2.12.0
+pyparsing==3.0.8
+pyrealsense2==2.38.1.2225
+pyrsistent==0.18.1
+pyserial==3.4
+python-dateutil==2.8.2
+pytz==2022.1
+pywavelets==1.3.0
+pywin32==304
+pywinpty==2.0.5
+pyyaml==6.0
+pyzmq==22.3.0
+ray==1.12.0
+redis==4.2.2
+requests-oauthlib==1.3.1
+requests==2.27.1
+retrying==1.3.3
+rsa==4.8
+scikit-image==0.16.2
+scipy==1.5.2
+send2trash==1.8.0
+sentry-sdk==1.5.11
+setproctitle==1.2.3
+setuptools==62.1.0
+shortuuid==1.0.8
+six==1.16.0
+smmap==5.0.0
+soupsieve==2.3.2.post1
+stable-baselines3==1.5.0
+sympy==1.7.1
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.1
+tensorboard==2.9.0
+terminado==0.13.3
+tinycss2==1.1.1
+torch==1.11.0
+torchvision==0.12.0
+tornado==6.1
+tqdm==4.64.0
+traitlets==5.1.1
+typing-extensions==4.2.0
+urllib3==1.26.9
+virtualenv==20.14.1
+wandb==0.12.16
+wcwidth==0.2.5
+webencodings==0.5.1
+werkzeug==2.1.2
+wheel==0.37.1
+widgetsnbextension==3.6.0
+wrapt==1.14.1
+zipp==3.8.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch
new file mode 100644
index 0000000..dac9b17
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch	
@@ -0,0 +1,296 @@
+diff --git a/Bridges/__pycache__/__init__.cpython-37.pyc b/Bridges/__pycache__/__init__.cpython-37.pyc
+index 748c80a..893843a 100644
+Binary files a/Bridges/__pycache__/__init__.cpython-37.pyc and b/Bridges/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/Bridges/__pycache__/bridge.cpython-37.pyc b/Bridges/__pycache__/bridge.cpython-37.pyc
+index d31942c..6290ebe 100644
+Binary files a/Bridges/__pycache__/bridge.cpython-37.pyc and b/Bridges/__pycache__/bridge.cpython-37.pyc differ
+diff --git a/Bridges/__pycache__/carla_bridge.cpython-37.pyc b/Bridges/__pycache__/carla_bridge.cpython-37.pyc
+index 2f8c9c7..c364856 100644
+Binary files a/Bridges/__pycache__/carla_bridge.cpython-37.pyc and b/Bridges/__pycache__/carla_bridge.cpython-37.pyc differ
+diff --git a/ROAR/__pycache__/__init__.cpython-37.pyc b/ROAR/__pycache__/__init__.cpython-37.pyc
+index 455e188..c8c0623 100644
+Binary files a/ROAR/__pycache__/__init__.cpython-37.pyc and b/ROAR/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc
+index 84e3be8..1009acf 100644
+Binary files a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc
+index 0b1ba9f..9742dcc 100644
+Binary files a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc
+index 841d66d..55b89fb 100644
+Binary files a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc
+index 03e1014..92b14a2 100644
+Binary files a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc
+index cfa960a..42f4506 100644
+Binary files a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc
+index c0ee652..303da5c 100644
+Binary files a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc
+index 4204108..e70abce 100644
+Binary files a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc
+index 98a2b8a..3cd2956 100644
+Binary files a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc differ
+diff --git a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc
+index 9449546..7e2c553 100644
+Binary files a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc
+index 82c261f..9e685ff 100644
+Binary files a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/controller.cpython-37.pyc b/ROAR/control_module/__pycache__/controller.cpython-37.pyc
+index 6443e8f..90ac7c5 100644
+Binary files a/ROAR/control_module/__pycache__/controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/controller.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc
+index 391e7bc..867822a 100644
+Binary files a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc
+index 0e2ca63..a4696b6 100644
+Binary files a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc and b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc
+index c12f588..5c42b9d 100644
+Binary files a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc
+index 52c9a49..2f0fb36 100644
+Binary files a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc
+index f6e7a5f..5eef87c 100644
+Binary files a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc
+index a3b9d51..105e490 100644
+Binary files a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc
+index 98ce179..0fbbbef 100644
+Binary files a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc
+index d9da805..3bda57a 100644
+Binary files a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc
+index 12e72a4..fe8d5a1 100644
+Binary files a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc
+index aca849f..2a8eb3e 100644
+Binary files a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc
+index 62e6f0c..3e54513 100644
+Binary files a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc
+index dad5d0d..990dca0 100644
+Binary files a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc and b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc
+index 7bc0045..51a7efa 100644
+Binary files a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc
+index 174b209..4dba087 100644
+Binary files a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc
+index 19daef3..c32e87d 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc
+index 54bd8f0..d6d0e38 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc
+index 9b54d47..054e40e 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc
+index 7fe96e6..62f47a3 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc
+index f666feb..e09db3f 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc
+index e339030..8dece62 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc
+index 3cf685f..d0fbb37 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc
+index 0250514..77233df 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc
+index 00ab4de..2a15a16 100644
+Binary files a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc
+index 86f93dc..8dba6e8 100644
+Binary files a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc
+index d636bc0..466de9c 100644
+Binary files a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc
+index d7e8cad..b84d89b 100644
+Binary files a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc
+index 1c8adb5..448e375 100644
+Binary files a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc
+index 6e2c1e3..95f385a 100644
+Binary files a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc
+index 7341979..9b0a837 100644
+Binary files a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc
+index 1152170..6fa437a 100644
+Binary files a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc differ
+diff --git a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc
+index 717c785..a39046d 100644
+Binary files a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc
+index ad18fd4..c12bd72 100644
+Binary files a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc
+index 34f7870..b90f5ce 100644
+Binary files a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc
+index cab1782..b19abb6 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc
+index e5483e6..df1a284 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc
+index 67f0c8a..ce64669 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc
+index a98bf88..31473c6 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc
+index 15303f6..c8686a2 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc
+index a3db8ca..dbbb536 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc differ
+diff --git a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc
+index 683efc4..925c8f2 100644
+Binary files a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR_gym/ROAR_Gym/__init__.py b/ROAR_gym/ROAR_Gym/__init__.py
+index 2989d64..a4d9062 100644
+--- a/ROAR_gym/ROAR_Gym/__init__.py
++++ b/ROAR_gym/ROAR_Gym/__init__.py
+@@ -20,7 +20,7 @@ register(
+     entry_point='ROAR_Gym.envs:ROAREnvE2E',
+ )
+ 
+-register(
+-    id='roar-multi-v0',
+-    entry_point='ROAR_Gym.envs:ROARMultiEnv',
+-)
+\ No newline at end of file
++# register(
++#     id='roar-multi-v0',
++#     entry_point='ROAR_Gym.envs:ROARMultiEnv',
++# )
+\ No newline at end of file
+diff --git a/ROAR_gym/ROAR_Gym/envs/__init__.py b/ROAR_gym/ROAR_Gym/envs/__init__.py
+index 21612d9..9f6ffa6 100644
+--- a/ROAR_gym/ROAR_Gym/envs/__init__.py
++++ b/ROAR_gym/ROAR_Gym/envs/__init__.py
+@@ -2,6 +2,6 @@ from ROAR_Gym.envs.roar_env import ROAREnv
+ from ROAR_Gym.envs.roar_pid_env import ROARPIDEnv
+ from ROAR_Gym.envs.roar_env_e2e import ROAREnvE2E
+ from ROAR_Gym.envs.e2eModel_roar_env import ROARppoEnvE2E
+-from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
++# from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
+ from ROAR_Gym.envs.line_detect import *
+ 
+diff --git a/ROAR_gym/configurations/ppo_configuration.py b/ROAR_gym/configurations/ppo_configuration.py
+index 31170af..a940a5d 100644
+--- a/ROAR_gym/configurations/ppo_configuration.py
++++ b/ROAR_gym/configurations/ppo_configuration.py
+@@ -10,8 +10,8 @@ sys.path.append(Path(os.getcwd()).parent.as_posix())
+ misc_params = {
+   "env_name": 'roar-e2e-ppo-v0',
+   "run_fps": 8,  # TODO Link to the environment RUN_FPS
+-  "model_directory": Path("./output/PPOe2e_Run_29"),
+-  "run_name": "Run 29",
++  "model_directory": Path("./output/PPOe2e_Run_1"),
++  "run_name": "Run 1",
+   "total_timesteps": int(1e6),
+ }
+ 
+diff --git a/ROAR_gym/configurations/wandb_configuration.json b/ROAR_gym/configurations/wandb_configuration.json
+index 44a45f0..7e9d392 100644
+--- a/ROAR_gym/configurations/wandb_configuration.json
++++ b/ROAR_gym/configurations/wandb_configuration.json
+@@ -1 +1 @@
+-{"run_id": "Run 29", "name": "", "project_name": "Baseline", "entity": "roar"}
+\ No newline at end of file
++{"run_id": "Run 1", "name": "", "project_name": "ROAR", "entity": "jingjingwei"}
+\ No newline at end of file
+diff --git a/ROAR_gym/e2eModel.py b/ROAR_gym/e2eModel.py
+index fbd222f..63c342a 100644
+--- a/ROAR_gym/e2eModel.py
++++ b/ROAR_gym/e2eModel.py
+@@ -8,7 +8,7 @@ TODO: Before Running this file make the following changes:
+     self._last_obs = np.nan_to_num(self._last_obs)
+ 
+ to the following file:
+-    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py
++    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+ 
+ 2. Add this line after line 167 such that:
+ with th.no_grad():
+@@ -86,7 +86,7 @@ warnings.filterwarnings('ignore')
+ try:
+     from ROAR_Gym.envs.roar_env import LoggingCallback
+ except:
+-    from ROAR_Gym.ROAR_Gym.envs.roar_env import LoggingCallback
++    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+ 
+ # os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+ #  Parameters & Constants
+@@ -156,7 +156,7 @@ def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_rando
+ 
+     # Create a wandb run variable
+     wandb.tensorboard.patch(
+-        tensorboardX=False,
++        # tensorboardX=False,
+         pytorch=True,
+     )
+     run = wandb.init(
+@@ -253,13 +253,13 @@ def main(pass_num):
+ 
+         print(f"Starting new run {run.id}")
+     else:
+-        # Load wandb run
++        # Load wandb run <-- TODO: What has been stored?
+         run = wandb_run_init(
+             wandb_hp_config,
+             load=True,
+         )
+ 
+-        # Load the model
++        # Load the model <-- TODO: redirect to new location.
+         model = PPO.load(
+             latest_model_path,
+             env=env,
+@@ -289,14 +289,14 @@ def main(pass_num):
+         callback=checkpoint_callback
+     )
+ 
+-    wandb_callback = WandbCallback(
++    wandb_callback = WandbCallback( # metadata: path, etc.
+         verbose=2,
+         model_save_path=f"models/{run.id}",
+         gradient_save_freq=PPO_params["n_steps"],
+         model_save_freq=wandb_saves["model_save_freq"],
+     )
+ 
+-    callbacks = CallbackList([
++    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+         wandb_callback,
+         checkpoint_callback,
+         event_callback,
+diff --git a/readme.md b/readme.md
+index 5b12ca0..25639ef 100644
+--- a/readme.md
++++ b/readme.md
+@@ -23,7 +23,7 @@ ROAR/ROAR_Sim/configurations/npc_config.json
+ ### Some Concept
+ CARLA provides support for multi-agent through the following three core concepts.
+ - Actor: Actor is anything that participates in the simulation and can be moved around, for example, vehicles, pedestrians.
+-- Blueprint:Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
++- Blueprint: Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
+ - World: The world is the major ruler of the simulation. It represents the currently loaded map, and contains the setting of parameters of the current simulation environment and functions that create, control and destroy actors. CARLA provides carla.World as the default world setting. 
+ 
+ ### Result
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/files/wandb-metadata.json b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/wandb-metadata.json
new file mode 100644
index 0000000..6a983c6
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/wandb-metadata.json	
@@ -0,0 +1,24 @@
+{
+    "os": "Windows-10-10.0.19041-SP0",
+    "python": "3.7.12",
+    "heartbeatAt": "2022-05-05T08:56:27.258196",
+    "startedAt": "2022-05-05T08:56:24.117662",
+    "docker": null,
+    "gpu": "NVIDIA GeForce RTX 2080",
+    "gpu_count": 1,
+    "cpu_count": 12,
+    "cuda": null,
+    "args": [],
+    "state": "running",
+    "program": "C:/Users/Ma_Ya/ROAR/ROAR_gym/e2eModel.py",
+    "codePath": "ROAR_gym\\e2eModel.py",
+    "git": {
+        "remote": "git@github.com:Allison-1999/ROAR.git",
+        "commit": "a12966ac4c7da853bb30c5ca35a2c6962bff5c44"
+    },
+    "email": "jingjingwei@berkeley.edu",
+    "root": "C:/Users/Ma_Ya/ROAR",
+    "host": "DESKTOP-014BV0C",
+    "username": "Ma_Ya",
+    "executable": "C:\\Users\\Ma_Ya\\.conda\\envs\\ROAR\\python.exe"
+}
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/wandb-summary.json
new file mode 100644
index 0000000..b4fcdda
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_015624-Run 1/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"Episode reward": -292.5, "Episode actual reward": -1002.1661886011668, "Checkpoint reached": 30, "largest_steps": 45, "highest_speed": 56.79264337627791, "avg10_checkpoints": 54.54545454545455, "avg10_score": -245.9090909090909, "avg10_actual_score": -626.5154200092062, "highest_actual_score": -293.34273944828584, "_timestamp": 1651741103, "_runtime": 119, "_step": 340, "_wandb": {"runtime": 122}}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_015624-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_015624-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..981bcde
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_015624-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_020528-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_020528-Run 1/files/config.yaml
new file mode 100644
index 0000000..68e09b5
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_020528-Run 1/files/config.yaml	
@@ -0,0 +1,297 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000001F02C6C8608>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651741528
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      2:
+      - 1
+      - 41
+      - 55
+      3:
+      - 5
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78DF6D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001EF78C02688>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78C6BCA8>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000001EF78DD3748>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740988.1926534
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 1
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_020528-Run 1/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_020528-Run 1/files/wandb-summary.json
new file mode 100644
index 0000000..dd47d6a
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_020528-Run 1/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"largest_steps": 45, "highest_actual_score": -293.34273944828584, "Episode actual reward": -1002.1661886011668, "avg10_score": -245.9090909090909, "highest_speed": 56.79264337627791, "_runtime": 119, "_timestamp": 1651741103, "Episode reward": -292.5, "avg10_checkpoints": 54.54545454545455, "Checkpoint reached": 30, "avg10_actual_score": -626.5154200092062, "_step": 340, "_wandb": {"runtime": 128}}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_020528-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_020528-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..0402d78
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_020528-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_020642-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_020642-Run 1/files/config.yaml
new file mode 100644
index 0000000..60bcbc8
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_020642-Run 1/files/config.yaml	
@@ -0,0 +1,295 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000001F02C6C8608>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651741602
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 3
+      - 5
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78DF6D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001EF78C02688>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78C6BCA8>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000001EF78DD3748>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740988.1926534
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 1
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_020642-Run 1/files/events.out.tfevents.1651741606.DESKTOP-014BV0C.2176.0 b/ROAR_gym/wandb/run-20220505_020642-Run 1/files/events.out.tfevents.1651741606.DESKTOP-014BV0C.2176.0
new file mode 120000
index 0000000..5d937a3
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_020642-Run 1/files/events.out.tfevents.1651741606.DESKTOP-014BV0C.2176.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651741606.DESKTOP-014BV0C.2176.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_020642-Run 1/files/model.zip b/ROAR_gym/wandb/run-20220505_020642-Run 1/files/model.zip
new file mode 120000
index 0000000..4c20e1e
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_020642-Run 1/files/model.zip	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/models/Run 1/model.zip
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_020642-Run 1/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_020642-Run 1/files/wandb-summary.json
new file mode 100644
index 0000000..5f4cc97
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_020642-Run 1/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"largest_steps": 181, "Checkpoint reached": 0, "avg10_actual_score": -660.1548388722284, "_step": 8532, "_runtime": 1443, "_timestamp": 1651742908, "highest_speed": 61.63374496580007, "avg10_score": -451.3863636363636, "Episode reward": -12304, "avg10_checkpoints": 83.18181818181819, "highest_actual_score": -538.3096139261892, "Episode actual reward": -400.0000000000136, "parameters/log_std": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/features_extractor.network.0.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 2.0, 5.0, 8.0, 8.0, 15.0, 18.0, 42.0, 60.0, 91.0, 116.0, 155.0, 175.0, 277.0, 336.0, 407.0, 538.0, 605.0, 672.0, 852.0, 952.0, 1103.0, 1177.0, 1251.0, 1330.0, 1344.0, 1420.0, 1347.0, 1311.0, 1220.0, 1191.0, 1065.0, 984.0, 871.0, 756.0, 656.0, 516.0, 389.0, 309.0, 244.0, 220.0, 166.0, 104.0, 83.0, 63.0, 43.0, 29.0, 21.0, 10.0, 7.0, 0.0, 6.0, 0.0, 2.0, 0.0, 1.0], "bins": [-0.24734584987163544, -0.2401829957962036, -0.2330201417207718, -0.22585728764533997, -0.21869444847106934, -0.2115315943956375, -0.2043687403202057, -0.19720588624477386, -0.19004303216934204, -0.18288017809391022, -0.1757173240184784, -0.16855448484420776, -0.16139163076877594, -0.15422877669334412, -0.1470659226179123, -0.13990306854248047, -0.13274022936820984, -0.12557737529277802, -0.11841452866792679, -0.11125167459249496, -0.10408882796764374, -0.09692597389221191, -0.08976311981678009, -0.08260026574134827, -0.07543741166591644, -0.06827455759048462, -0.06111171096563339, -0.05394885689020157, -0.04678600654006004, -0.03962315618991852, -0.032460302114486694, -0.02529745176434517, -0.018134593963623047, -0.010971742682158947, -0.003808891400694847, 0.0033539608120918274, 0.010516811162233353, 0.017679661512374878, 0.0248425155878067, 0.03200536593794823, 0.039168208837509155, 0.04633105918765068, 0.053493909537792206, 0.06065676361322403, 0.06781961023807526, 0.07498246431350708, 0.0821453183889389, 0.08930817246437073, 0.09647102653980255, 0.10363388061523438, 0.1107967272400856, 0.11795958131551743, 0.12512242794036865, 0.13228528201580048, 0.1394481360912323, 0.14661099016666412, 0.15377384424209595, 0.16093669831752777, 0.1680995523929596, 0.17526239156723022, 0.18242524564266205, 0.18958809971809387, 0.1967509537935257, 0.20391380786895752, 0.21107664704322815]}, "parameters/features_extractor.network.0.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 32.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/features_extractor.network.2.weight": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 0.0, 3.0, 10.0, 11.0, 5.0, 15.0, 39.0, 30.0, 75.0, 70.0, 94.0, 136.0, 159.0, 207.0, 253.0, 327.0, 416.0, 485.0, 610.0, 666.0, 831.0, 882.0, 981.0, 1078.0, 1202.0, 1353.0, 1395.0, 1446.0, 1504.0, 1502.0, 1575.0, 1579.0, 1532.0, 1466.0, 1323.0, 1215.0, 1191.0, 1061.0, 971.0, 794.0, 761.0, 644.0, 567.0, 467.0, 386.0, 353.0, 268.0, 210.0, 163.0, 119.0, 95.0, 65.0, 55.0, 44.0, 23.0, 15.0, 14.0, 7.0, 6.0, 4.0, 7.0], "bins": [-0.2457638382911682, -0.23838646709918976, -0.2310090959072113, -0.22363172471523285, -0.2162543535232544, -0.20887698233127594, -0.20149961113929749, -0.19412222504615784, -0.18674486875534058, -0.17936749756336212, -0.17199012637138367, -0.1646127551794052, -0.15723538398742676, -0.1498580127954483, -0.14248064160346985, -0.1351032555103302, -0.12772588431835175, -0.12034851312637329, -0.11297114193439484, -0.10559377074241638, -0.09821639955043793, -0.09083902835845947, -0.08346164971590042, -0.07608427852392197, -0.06870689988136292, -0.06132952868938446, -0.053952157497406006, -0.04657478258013725, -0.0391974113881588, -0.031820040196180344, -0.02444266527891159, -0.017065294086933136, -0.009687945246696472, -0.002310573123395443, 0.005066798999905586, 0.01244417205452919, 0.019821543246507645, 0.0271989144384861, 0.03457628935575485, 0.04195366054773331, 0.049331024289131165, 0.05670839548110962, 0.06408576667308807, 0.07146313786506653, 0.07884050905704498, 0.08621788024902344, 0.09359525889158249, 0.10097263008356094, 0.10835000872612, 0.11572737991809845, 0.1231047511100769, 0.13048212230205536, 0.1378594934940338, 0.14523686468601227, 0.15261423587799072, 0.15999162197113037, 0.16736897826194763, 0.1747463494539261, 0.18212372064590454, 0.189501091837883, 0.19687846302986145, 0.2042558342218399, 0.21163320541381836, 0.219010591506958, 0.22638796269893646]}, "parameters/features_extractor.network.2.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/features_extractor.network.4.weight": {"_type": "histogram", "values": [1.0, 1.0, 2.0, 2.0, 6.0, 6.0, 11.0, 16.0, 28.0, 35.0, 58.0, 75.0, 113.0, 174.0, 203.0, 259.0, 308.0, 449.0, 542.0, 655.0, 770.0, 953.0, 1076.0, 1196.0, 1383.0, 1538.0, 1631.0, 1719.0, 1840.0, 1849.0, 1915.0, 1894.0, 1853.0, 1725.0, 1698.0, 1603.0, 1507.0, 1261.0, 1243.0, 1021.0, 841.0, 694.0, 583.0, 472.0, 397.0, 319.0, 262.0, 206.0, 135.0, 89.0, 87.0, 52.0, 45.0, 20.0, 13.0, 13.0, 5.0, 3.0, 3.0, 3.0, 1.0, 1.0, 0.0, 1.0], "bins": [-0.23557759821414948, -0.22792333364486694, -0.2202690839767456, -0.21261483430862427, -0.20496056973934174, -0.1973063051700592, -0.18965205550193787, -0.18199780583381653, -0.174343541264534, -0.16668927669525146, -0.15903502702713013, -0.1513807773590088, -0.14372651278972626, -0.13607224822044373, -0.1284179985523224, -0.12076374143362045, -0.11310948431491852, -0.10545522719621658, -0.09780097007751465, -0.09014671295881271, -0.08249245584011078, -0.07483819872140884, -0.06718394160270691, -0.059529684484004974, -0.05187542736530304, -0.044221170246601105, -0.03656691312789917, -0.028912656009197235, -0.0212583988904953, -0.013604141771793365, -0.005949884653091431, 0.0017043724656105042, 0.009358644485473633, 0.017012901604175568, 0.024667158722877502, 0.03232141584157944, 0.03997567296028137, 0.04762993007898331, 0.05528418719768524, 0.06293844431638718, 0.07059270143508911, 0.07824695855379105, 0.08590121567249298, 0.09355547279119492, 0.10120972990989685, 0.10886398702859879, 0.11651824414730072, 0.12417250126600266, 0.1318267583847046, 0.13948100805282593, 0.14713527262210846, 0.154789537191391, 0.16244378685951233, 0.17009803652763367, 0.1777523010969162, 0.18540656566619873, 0.19306081533432007, 0.2007150650024414, 0.20836932957172394, 0.21602359414100647, 0.2236778438091278, 0.23133209347724915, 0.23898635804653168, 0.2466406226158142, 0.25429487228393555]}, "parameters/features_extractor.network.4.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/features_extractor.network.7.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 2.0, 2.0, 2.0, 12.0, 17.0, 45.0, 74.0, 126.0, 189.0, 392.0, 559.0, 969.0, 1415.0, 2218.0, 3321.0, 4755.0, 6584.0, 9174.0, 12229.0, 15707.0, 19936.0, 24701.0, 29464.0, 34802.0, 39327.0, 43656.0, 47311.0, 49919.0, 51043.0, 51504.0, 50200.0, 47891.0, 43952.0, 40023.0, 35069.0, 30117.0, 25420.0, 20564.0, 16027.0, 12574.0, 9689.0, 6969.0, 4997.0, 3468.0, 2400.0, 1545.0, 997.0, 573.0, 373.0, 213.0, 143.0, 72.0, 44.0, 17.0, 11.0, 6.0, 4.0, 1.0, 0.0, 0.0, 1.0], "bins": [-0.13047969341278076, -0.12640973925590515, -0.12233978509902954, -0.11826983839273453, -0.11419988423585892, -0.1101299300789833, -0.1060599833726883, -0.10199002921581268, -0.09792007505893707, -0.09385012090206146, -0.08978016674518585, -0.08571022003889084, -0.08164026588201523, -0.07757031172513962, -0.0735003650188446, -0.069430410861969, -0.06536045670509338, -0.06129050254821777, -0.05722055211663246, -0.05315060168504715, -0.04908064752817154, -0.04501069337129593, -0.04094074293971062, -0.036870792508125305, -0.032800838351249695, -0.028730886057019234, -0.024660933762788773, -0.02059098146855831, -0.01652102917432785, -0.01245107688009739, -0.008381124585866928, -0.004311172291636467, -0.00024121999740600586, 0.0038287322968244553, 0.007898684591054916, 0.011968636885285378, 0.01603858917951584, 0.0201085414737463, 0.02417849376797676, 0.028248446062207222, 0.03231839835643768, 0.03638835251331329, 0.040458302944898605, 0.04452825337648392, 0.04859820753335953, 0.05266816169023514, 0.05673811212182045, 0.06080806255340576, 0.06487801671028137, 0.06894797086715698, 0.07301792502403259, 0.0770878717303276, 0.08115782588720322, 0.08522778004407883, 0.08929772675037384, 0.09336768090724945, 0.09743763506412506, 0.10150758922100067, 0.10557754337787628, 0.1096474900841713, 0.1137174442410469, 0.11778739839792252, 0.12185734510421753, 0.12592729926109314, 0.12999725341796875]}, "parameters/features_extractor.network.7.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 256.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/mlp_extractor.policy_net.0.weight": {"_type": "histogram", "values": [5.0, 4.0, 2.0, 4.0, 5.0, 10.0, 15.0, 16.0, 17.0, 26.0, 42.0, 59.0, 60.0, 82.0, 126.0, 149.0, 170.0, 194.0, 227.0, 254.0, 290.0, 372.0, 437.0, 484.0, 551.0, 548.0, 599.0, 694.0, 632.0, 684.0, 714.0, 699.0, 761.0, 702.0, 742.0, 661.0, 659.0, 597.0, 554.0, 508.0, 463.0, 411.0, 370.0, 324.0, 278.0, 231.0, 185.0, 174.0, 130.0, 121.0, 81.0, 71.0, 54.0, 39.0, 33.0, 21.0, 14.0, 7.0, 6.0, 5.0, 4.0, 4.0, 0.0, 3.0], "bins": [-0.31839415431022644, -0.3084770441055298, -0.2985599637031555, -0.28864285349845886, -0.2787257730960846, -0.26880866289138794, -0.25889158248901367, -0.24897447228431702, -0.23905739188194275, -0.2291402965784073, -0.21922320127487183, -0.20930610597133636, -0.1993890106678009, -0.18947191536426544, -0.17955482006072998, -0.16963770985603333, -0.15972061455249786, -0.1498035192489624, -0.13988642394542694, -0.12996932864189148, -0.12005223333835602, -0.11013513803482056, -0.1002180352807045, -0.09030093997716904, -0.08038383722305298, -0.07046674191951752, -0.060549646615982056, -0.050632547587156296, -0.040715452283620834, -0.030798356980085373, -0.020881257951259613, -0.010964162647724152, -0.0010470747947692871, 0.008870021440088749, 0.018787117674946785, 0.028704214841127396, 0.03862131014466286, 0.04853840544819832, 0.05845550447702408, 0.06837259978055954, 0.0782896876335144, 0.08820678293704987, 0.09812387824058533, 0.10804097354412079, 0.11795806884765625, 0.1278751641511917, 0.13779225945472717, 0.14770936965942383, 0.1576264649629593, 0.16754356026649475, 0.1774606555700302, 0.18737775087356567, 0.19729484617710114, 0.2072119414806366, 0.21712905168533325, 0.22704613208770752, 0.23696324229240417, 0.24688033759593964, 0.2567974328994751, 0.26671454310417175, 0.276631623506546, 0.2865487337112427, 0.29646581411361694, 0.3063829243183136, 0.31630000472068787]}, "parameters/mlp_extractor.policy_net.0.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/mlp_extractor.policy_net.2.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 1.0, 3.0, 2.0, 3.0, 8.0, 11.0, 8.0, 11.0, 20.0, 21.0, 34.0, 28.0, 36.0, 54.0, 50.0, 61.0, 95.0, 95.0, 95.0, 94.0, 106.0, 136.0, 145.0, 157.0, 175.0, 161.0, 157.0, 169.0, 169.0, 191.0, 163.0, 174.0, 143.0, 159.0, 145.0, 150.0, 104.0, 121.0, 109.0, 81.0, 74.0, 75.0, 47.0, 41.0, 43.0, 34.0, 21.0, 33.0, 20.0, 19.0, 9.0, 13.0, 7.0, 3.0, 4.0, 2.0, 2.0, 1.0, 0.0, 0.0, 2.0], "bins": [-0.6038561463356018, -0.5848402380943298, -0.5658243894577026, -0.5468084812164307, -0.5277926325798035, -0.5087767243385315, -0.4897608458995819, -0.4707449674606323, -0.45172908902168274, -0.43271321058273315, -0.41369733214378357, -0.394681453704834, -0.375665545463562, -0.3566496968269348, -0.33763378858566284, -0.31861791014671326, -0.29960203170776367, -0.2805861532688141, -0.2615702748298645, -0.24255438148975372, -0.22353850305080414, -0.20452262461185455, -0.18550673127174377, -0.1664908528327942, -0.1474749743938446, -0.12845909595489502, -0.10944321006536484, -0.09042732417583466, -0.07141144573688507, -0.052395567297935486, -0.033379681408405304, -0.014363795518875122, 0.004652082920074463, 0.023667965084314346, 0.04268384724855423, 0.06169972941279411, 0.080715611577034, 0.09973149001598358, 0.11874737590551376, 0.13776326179504395, 0.15677914023399353, 0.17579501867294312, 0.1948108971118927, 0.21382679045200348, 0.23284266889095306, 0.25185853242874146, 0.2708744406700134, 0.289890319108963, 0.3089061975479126, 0.3279220759868622, 0.34693795442581177, 0.36595383286476135, 0.38496971130371094, 0.4039856195449829, 0.4230014979839325, 0.4420173764228821, 0.46103325486183167, 0.48004913330078125, 0.49906501173973083, 0.5180808901786804, 0.5370967984199524, 0.5561126470565796, 0.5751285552978516, 0.5941444635391235, 0.6131603121757507]}, "parameters/mlp_extractor.policy_net.2.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/mlp_extractor.value_net.0.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 3.0, 6.0, 5.0, 10.0, 21.0, 13.0, 29.0, 35.0, 57.0, 82.0, 108.0, 162.0, 186.0, 210.0, 303.0, 353.0, 415.0, 488.0, 585.0, 651.0, 755.0, 769.0, 878.0, 881.0, 895.0, 932.0, 869.0, 838.0, 797.0, 741.0, 701.0, 601.0, 561.0, 512.0, 404.0, 332.0, 282.0, 241.0, 195.0, 126.0, 109.0, 77.0, 65.0, 35.0, 14.0, 14.0, 6.0, 8.0, 8.0, 4.0, 4.0, 0.0, 3.0, 1.0, 0.0, 1.0], "bins": [-0.40676596760749817, -0.39454707503318787, -0.3823281526565552, -0.3701092600822449, -0.3578903377056122, -0.3456714451313019, -0.3334525227546692, -0.3212336301803589, -0.3090147376060486, -0.2967958450317383, -0.2845769226551056, -0.2723580300807953, -0.2601391077041626, -0.2479202151298523, -0.2357013076543808, -0.2234824001789093, -0.2112634778022766, -0.19904457032680511, -0.18682566285133362, -0.17460677027702332, -0.16238784790039062, -0.15016895532608032, -0.13795004785060883, -0.12573114037513733, -0.11351224780082703, -0.10129334032535553, -0.08907443284988403, -0.07685553282499313, -0.06463662534952164, -0.05241771787405014, -0.04019881784915924, -0.027979910373687744, -0.015760958194732666, -0.0035420525819063187, 0.008676853030920029, 0.020895756781101227, 0.03311466425657272, 0.04533357173204422, 0.05755247175693512, 0.06977137923240662, 0.0819903016090393, 0.0942092090845108, 0.1064281165599823, 0.1186470165848732, 0.1308659315109253, 0.1430848240852356, 0.1553037315607071, 0.1675226390361786, 0.1797415316104889, 0.1919604390859604, 0.20417934656143188, 0.2163982391357422, 0.22861716151237488, 0.24083605408668518, 0.25305497646331787, 0.2652738690376282, 0.2774927616119385, 0.2897116541862488, 0.30193057656288147, 0.3141494691371918, 0.32636839151382446, 0.33858728408813477, 0.35080617666244507, 0.36302509903907776, 0.37524402141571045]}, "parameters/mlp_extractor.value_net.0.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/mlp_extractor.value_net.2.weight": {"_type": "histogram", "values": [2.0, 2.0, 1.0, 3.0, 3.0, 7.0, 5.0, 9.0, 19.0, 17.0, 16.0, 15.0, 24.0, 27.0, 26.0, 45.0, 49.0, 48.0, 62.0, 76.0, 97.0, 106.0, 113.0, 106.0, 117.0, 153.0, 140.0, 144.0, 162.0, 169.0, 163.0, 169.0, 155.0, 136.0, 165.0, 164.0, 152.0, 140.0, 128.0, 126.0, 108.0, 112.0, 82.0, 87.0, 81.0, 56.0, 47.0, 54.0, 46.0, 26.0, 32.0, 21.0, 22.0, 18.0, 13.0, 5.0, 7.0, 2.0, 2.0, 3.0, 1.0, 5.0, 3.0, 2.0], "bins": [-0.5733544826507568, -0.5554158687591553, -0.5374771952629089, -0.5195385217666626, -0.501599907875061, -0.4836612641811371, -0.46572262048721313, -0.4477839767932892, -0.42984533309936523, -0.4119066894054413, -0.39396804571151733, -0.3760294020175934, -0.35809075832366943, -0.3401521146297455, -0.32221347093582153, -0.3042748272418976, -0.28633618354797363, -0.2683975398540497, -0.25045889616012573, -0.23252025246620178, -0.21458160877227783, -0.19664296507835388, -0.17870432138442993, -0.16076567769050598, -0.14282703399658203, -0.12488839030265808, -0.10694974660873413, -0.08901110291481018, -0.07107245922088623, -0.05313381552696228, -0.03519517183303833, -0.01725652813911438, 0.0006821751594543457, 0.018620818853378296, 0.036559462547302246, 0.054498106241226196, 0.07243674993515015, 0.0903753936290741, 0.10831403732299805, 0.126252681016922, 0.14419132471084595, 0.1621299684047699, 0.18006861209869385, 0.1980072557926178, 0.21594589948654175, 0.2338845431804657, 0.25182318687438965, 0.2697618305683136, 0.28770047426223755, 0.3056391179561615, 0.32357776165008545, 0.3415164053440094, 0.35945504903793335, 0.3773936927318573, 0.39533233642578125, 0.4132709801197052, 0.43120962381362915, 0.4491482675075531, 0.46708691120147705, 0.485025554895401, 0.502964198589325, 0.5209028720855713, 0.5388414859771729, 0.5567800998687744, 0.5747187733650208]}, "parameters/mlp_extractor.value_net.2.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 64.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/action_net.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 3.0, 0.0, 1.0, 3.0, 2.0, 2.0, 3.0, 5.0, 7.0, 7.0, 7.0, 8.0, 9.0, 15.0, 15.0, 16.0, 14.0, 21.0, 21.0, 22.0, 25.0, 24.0, 29.0, 19.0, 26.0, 39.0, 33.0, 38.0, 28.0, 27.0, 31.0, 36.0, 24.0, 29.0, 21.0, 22.0, 20.0, 19.0, 16.0, 14.0, 10.0, 14.0, 6.0, 3.0, 6.0, 1.0, 5.0, 8.0, 1.0, 2.0, 1.0, 3.0, 2.0, 0.0, 0.0, 1.0, 2.0], "bins": [-0.004265394527465105, -0.00413862569257617, -0.004011856857687235, -0.0038850880227983, -0.0037583191879093647, -0.0036315503530204296, -0.0035047815181314945, -0.0033780126832425594, -0.0032512438483536243, -0.0031244750134646893, -0.002997706178575754, -0.002870937343686819, -0.002744168508797884, -0.002617399673908949, -0.002490630839020014, -0.0023638620041310787, -0.0022370931692421436, -0.0021103243343532085, -0.0019835554994642735, -0.0018567866645753384, -0.0017300178296864033, -0.0016032489947974682, -0.001476480159908533, -0.001349711325019598, -0.001222942490130663, -0.0010961736552417278, -0.0009694048203527927, -0.0008426359854638577, -0.0007158671505749226, -0.0005890983156859875, -0.0004623294807970524, -0.0003355606459081173, -0.0002087922766804695, -8.202344179153442e-05, 4.4745393097400665e-05, 0.00017151422798633575, 0.00029828306287527084, 0.00042505189776420593, 0.000551820732653141, 0.0006785895675420761, 0.0008053584024310112, 0.0009321272373199463, 0.0010588960722088814, 0.0011856649070978165, 0.0013124337419867516, 0.0014392025768756866, 0.0015659714117646217, 0.0016927402466535568, 0.001819509081542492, 0.001946277916431427, 0.002073046751320362, 0.002199815586209297, 0.0023265844210982323, 0.0024533532559871674, 0.0025801220908761024, 0.0027068909257650375, 0.0028336597606539726, 0.0029604285955429077, 0.003087197430431843, 0.003213966265320778, 0.003340735100209713, 0.003467503935098648, 0.003594272769987583, 0.0037210416048765182, 0.0038478104397654533]}, "parameters/action_net.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 12.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}, "parameters/value_net.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 3.0, 2.0, 3.0, 0.0, 0.0, 2.0, 2.0, 1.0, 2.0, 2.0, 0.0, 0.0, 4.0, 2.0, 3.0, 1.0, 2.0, 0.0, 1.0, 3.0, 2.0, 5.0, 1.0, 1.0, 3.0, 3.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.27861079573631287, -0.2690991461277008, -0.25958746671676636, -0.2500758171081543, -0.24056415259838104, -0.2310524880886078, -0.22154083847999573, -0.21202917397022247, -0.20251750946044922, -0.19300584495067596, -0.1834941953420639, -0.17398253083229065, -0.1644708663225174, -0.15495920181274414, -0.14544755220413208, -0.13593588769435883, -0.12642423808574677, -0.11691258102655411, -0.10740091651678085, -0.0978892594575882, -0.08837759494781494, -0.07886593788862228, -0.06935428082942963, -0.05984261631965637, -0.05033096671104431, -0.040819305926561356, -0.0313076451420784, -0.021795988082885742, -0.012284327298402786, -0.0027726665139198303, 0.006738990545272827, 0.01625065505504608, 0.025762319564819336, 0.03527398034930229, 0.04478564113378525, 0.054297298192977905, 0.06380896270275116, 0.07332061976194382, 0.08283227682113647, 0.09234394133090973, 0.10185560584068298, 0.11136726289987564, 0.1208789274096489, 0.13039058446884155, 0.1399022489786148, 0.14941391348838806, 0.15892556309700012, 0.16843722760677338, 0.17794887721538544, 0.1874605417251587, 0.19697219133377075, 0.206483855843544, 0.21599552035331726, 0.22550716996192932, 0.23501883447170258, 0.24453049898147583, 0.2540421485900879, 0.26355379819869995, 0.2730654776096344, 0.28257712721824646, 0.2920887768268585, 0.30160045623779297, 0.31111210584640503, 0.3206237554550171, 0.33013543486595154]}, "parameters/value_net.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_020642-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_020642-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..446186d
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_020642-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_024822-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_024822-Run 1/files/config.yaml
new file mode 100644
index 0000000..06e7c0e
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_024822-Run 1/files/config.yaml	
@@ -0,0 +1,294 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000001F02C6C8608>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651744102
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 5
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78DF6D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001EF78C02688>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78C6BCA8>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000001EF78DD3748>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740988.1926534
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 1
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_024822-Run 1/files/events.out.tfevents.1651744107.DESKTOP-014BV0C.20752.0 b/ROAR_gym/wandb/run-20220505_024822-Run 1/files/events.out.tfevents.1651744107.DESKTOP-014BV0C.20752.0
new file mode 120000
index 0000000..78de738
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_024822-Run 1/files/events.out.tfevents.1651744107.DESKTOP-014BV0C.20752.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744107.DESKTOP-014BV0C.20752.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_024822-Run 1/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_024822-Run 1/files/wandb-summary.json
new file mode 100644
index 0000000..b0b6558
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_024822-Run 1/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"highest_speed": 18.678128336129998, "parameters/mlp_extractor.policy_net.0.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.policy_net.0.weight": {"bins": [-0.31839415431022644, -0.3084770441055298, -0.2985599637031555, -0.28864285349845886, -0.2787257730960846, -0.26880866289138794, -0.25889158248901367, -0.24897447228431702, -0.23905739188194275, -0.2291402965784073, -0.21922320127487183, -0.20930610597133636, -0.1993890106678009, -0.18947191536426544, -0.17955482006072998, -0.16963770985603333, -0.15972061455249786, -0.1498035192489624, -0.13988642394542694, -0.12996932864189148, -0.12005223333835602, -0.11013513803482056, -0.1002180352807045, -0.09030093997716904, -0.08038383722305298, -0.07046674191951752, -0.060549646615982056, -0.050632547587156296, -0.040715452283620834, -0.030798356980085373, -0.020881257951259613, -0.010964162647724152, -0.0010470747947692871, 0.008870021440088749, 0.018787117674946785, 0.028704214841127396, 0.03862131014466286, 0.04853840544819832, 0.05845550447702408, 0.06837259978055954, 0.0782896876335144, 0.08820678293704987, 0.09812387824058533, 0.10804097354412079, 0.11795806884765625, 0.1278751641511917, 0.13779225945472717, 0.14770936965942383, 0.1576264649629593, 0.16754356026649475, 0.1774606555700302, 0.18737775087356567, 0.19729484617710114, 0.2072119414806366, 0.21712905168533325, 0.22704613208770752, 0.23696324229240417, 0.24688033759593964, 0.2567974328994751, 0.26671454310417175, 0.276631623506546, 0.2865487337112427, 0.29646581411361694, 0.3063829243183136, 0.31630000472068787], "values": [5, 4, 2, 4, 5, 10, 15, 16, 17, 26, 42, 59, 60, 82, 126, 149, 170, 194, 227, 254, 290, 372, 437, 484, 551, 548, 599, 694, 632, 684, 714, 699, 761, 702, 742, 661, 659, 597, 554, 508, 463, 411, 370, 324, 278, 231, 185, 174, 130, 121, 81, 71, 54, 39, 33, 21, 14, 7, 6, 5, 4, 4, 0, 3], "_type": "histogram"}, "Checkpoint reached": 75, "avg10_score": -370.5, "avg10_checkpoints": 60.0, "parameters/value_net.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "Episode actual reward": -459.72853874351745, "_step": 8918, "avg10_actual_score": -432.7595613364078, "parameters/features_extractor.network.4.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "_runtime": 1621, "largest_steps": 102, "parameters/features_extractor.network.2.weight": {"_type": "histogram", "bins": [-0.2457638382911682, -0.23838646709918976, -0.2310090959072113, -0.22363172471523285, -0.2162543535232544, -0.20887698233127594, -0.20149961113929749, -0.19412222504615784, -0.18674486875534058, -0.17936749756336212, -0.17199012637138367, -0.1646127551794052, -0.15723538398742676, -0.1498580127954483, -0.14248064160346985, -0.1351032555103302, -0.12772588431835175, -0.12034851312637329, -0.11297114193439484, -0.10559377074241638, -0.09821639955043793, -0.09083902835845947, -0.08346164971590042, -0.07608427852392197, -0.06870689988136292, -0.06132952868938446, -0.053952157497406006, -0.04657478258013725, -0.0391974113881588, -0.031820040196180344, -0.02444266527891159, -0.017065294086933136, -0.009687945246696472, -0.002310573123395443, 0.005066798999905586, 0.01244417205452919, 0.019821543246507645, 0.0271989144384861, 0.03457628935575485, 0.04195366054773331, 0.049331024289131165, 0.05670839548110962, 0.06408576667308807, 0.07146313786506653, 0.07884050905704498, 0.08621788024902344, 0.09359525889158249, 0.10097263008356094, 0.10835000872612, 0.11572737991809845, 0.1231047511100769, 0.13048212230205536, 0.1378594934940338, 0.14523686468601227, 0.15261423587799072, 0.15999162197113037, 0.16736897826194763, 0.1747463494539261, 0.18212372064590454, 0.189501091837883, 0.19687846302986145, 0.2042558342218399, 0.21163320541381836, 0.219010591506958, 0.22638796269893646], "values": [1, 1, 1, 0, 3, 10, 11, 5, 15, 39, 30, 75, 70, 94, 136, 159, 207, 253, 327, 416, 485, 610, 666, 831, 882, 981, 1078, 1202, 1353, 1395, 1446, 1504, 1502, 1575, 1579, 1532, 1466, 1323, 1215, 1191, 1061, 971, 794, 761, 644, 567, 467, 386, 353, 268, 210, 163, 119, 95, 65, 55, 44, 23, 15, 14, 7, 6, 4, 7]}, "parameters/mlp_extractor.value_net.0.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.policy_net.2.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/action_net.weight": {"_type": "histogram", "bins": [-0.004265394527465105, -0.00413862569257617, -0.004011856857687235, -0.0038850880227983, -0.0037583191879093647, -0.0036315503530204296, -0.0035047815181314945, -0.0033780126832425594, -0.0032512438483536243, -0.0031244750134646893, -0.002997706178575754, -0.002870937343686819, -0.002744168508797884, -0.002617399673908949, -0.002490630839020014, -0.0023638620041310787, -0.0022370931692421436, -0.0021103243343532085, -0.0019835554994642735, -0.0018567866645753384, -0.0017300178296864033, -0.0016032489947974682, -0.001476480159908533, -0.001349711325019598, -0.001222942490130663, -0.0010961736552417278, -0.0009694048203527927, -0.0008426359854638577, -0.0007158671505749226, -0.0005890983156859875, -0.0004623294807970524, -0.0003355606459081173, -0.0002087922766804695, -8.202344179153442e-05, 4.4745393097400665e-05, 0.00017151422798633575, 0.00029828306287527084, 0.00042505189776420593, 0.000551820732653141, 0.0006785895675420761, 0.0008053584024310112, 0.0009321272373199463, 0.0010588960722088814, 0.0011856649070978165, 0.0013124337419867516, 0.0014392025768756866, 0.0015659714117646217, 0.0016927402466535568, 0.001819509081542492, 0.001946277916431427, 0.002073046751320362, 0.002199815586209297, 0.0023265844210982323, 0.0024533532559871674, 0.0025801220908761024, 0.0027068909257650375, 0.0028336597606539726, 0.0029604285955429077, 0.003087197430431843, 0.003213966265320778, 0.003340735100209713, 0.003467503935098648, 0.003594272769987583, 0.0037210416048765182, 0.0038478104397654533], "values": [1, 0, 0, 1, 0, 0, 0, 3, 0, 1, 3, 2, 2, 3, 5, 7, 7, 7, 8, 9, 15, 15, 16, 14, 21, 21, 22, 25, 24, 29, 19, 26, 39, 33, 38, 28, 27, 31, 36, 24, 29, 21, 22, 20, 19, 16, 14, 10, 14, 6, 3, 6, 1, 5, 8, 1, 2, 1, 3, 2, 0, 0, 1, 2]}, "parameters/action_net.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "parameters/mlp_extractor.value_net.2.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/features_extractor.network.4.weight": {"bins": [-0.23557759821414948, -0.22792333364486694, -0.2202690839767456, -0.21261483430862427, -0.20496056973934174, -0.1973063051700592, -0.18965205550193787, -0.18199780583381653, -0.174343541264534, -0.16668927669525146, -0.15903502702713013, -0.1513807773590088, -0.14372651278972626, -0.13607224822044373, -0.1284179985523224, -0.12076374143362045, -0.11310948431491852, -0.10545522719621658, -0.09780097007751465, -0.09014671295881271, -0.08249245584011078, -0.07483819872140884, -0.06718394160270691, -0.059529684484004974, -0.05187542736530304, -0.044221170246601105, -0.03656691312789917, -0.028912656009197235, -0.0212583988904953, -0.013604141771793365, -0.005949884653091431, 0.0017043724656105042, 0.009358644485473633, 0.017012901604175568, 0.024667158722877502, 0.03232141584157944, 0.03997567296028137, 0.04762993007898331, 0.05528418719768524, 0.06293844431638718, 0.07059270143508911, 0.07824695855379105, 0.08590121567249298, 0.09355547279119492, 0.10120972990989685, 0.10886398702859879, 0.11651824414730072, 0.12417250126600266, 0.1318267583847046, 0.13948100805282593, 0.14713527262210846, 0.154789537191391, 0.16244378685951233, 0.17009803652763367, 0.1777523010969162, 0.18540656566619873, 0.19306081533432007, 0.2007150650024414, 0.20836932957172394, 0.21602359414100647, 0.2236778438091278, 0.23133209347724915, 0.23898635804653168, 0.2466406226158142, 0.25429487228393555], "values": [1, 1, 2, 2, 6, 6, 11, 16, 28, 35, 58, 75, 113, 174, 203, 259, 308, 449, 542, 655, 770, 953, 1076, 1196, 1383, 1538, 1631, 1719, 1840, 1849, 1915, 1894, 1853, 1725, 1698, 1603, 1507, 1261, 1243, 1021, 841, 694, 583, 472, 397, 319, 262, 206, 135, 89, 87, 52, 45, 20, 13, 13, 5, 3, 3, 3, 1, 1, 0, 1], "_type": "histogram"}, "parameters/log_std": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/value_net.weight": {"_type": "histogram", "bins": [-0.27861079573631287, -0.2690991461277008, -0.25958746671676636, -0.2500758171081543, -0.24056415259838104, -0.2310524880886078, -0.22154083847999573, -0.21202917397022247, -0.20251750946044922, -0.19300584495067596, -0.1834941953420639, -0.17398253083229065, -0.1644708663225174, -0.15495920181274414, -0.14544755220413208, -0.13593588769435883, -0.12642423808574677, -0.11691258102655411, -0.10740091651678085, -0.0978892594575882, -0.08837759494781494, -0.07886593788862228, -0.06935428082942963, -0.05984261631965637, -0.05033096671104431, -0.040819305926561356, -0.0313076451420784, -0.021795988082885742, -0.012284327298402786, -0.0027726665139198303, 0.006738990545272827, 0.01625065505504608, 0.025762319564819336, 0.03527398034930229, 0.04478564113378525, 0.054297298192977905, 0.06380896270275116, 0.07332061976194382, 0.08283227682113647, 0.09234394133090973, 0.10185560584068298, 0.11136726289987564, 0.1208789274096489, 0.13039058446884155, 0.1399022489786148, 0.14941391348838806, 0.15892556309700012, 0.16843722760677338, 0.17794887721538544, 0.1874605417251587, 0.19697219133377075, 0.206483855843544, 0.21599552035331726, 0.22550716996192932, 0.23501883447170258, 0.24453049898147583, 0.2540421485900879, 0.26355379819869995, 0.2730654776096344, 0.28257712721824646, 0.2920887768268585, 0.30160045623779297, 0.31111210584640503, 0.3206237554550171, 0.33013543486595154], "values": [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 3, 2, 3, 0, 0, 2, 2, 1, 2, 2, 0, 0, 4, 2, 3, 1, 2, 0, 1, 3, 2, 5, 1, 1, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1]}, "parameters/features_extractor.network.0.weight": {"bins": [-0.24734584987163544, -0.2401829957962036, -0.2330201417207718, -0.22585728764533997, -0.21869444847106934, -0.2115315943956375, -0.2043687403202057, -0.19720588624477386, -0.19004303216934204, -0.18288017809391022, -0.1757173240184784, -0.16855448484420776, -0.16139163076877594, -0.15422877669334412, -0.1470659226179123, -0.13990306854248047, -0.13274022936820984, -0.12557737529277802, -0.11841452866792679, -0.11125167459249496, -0.10408882796764374, -0.09692597389221191, -0.08976311981678009, -0.08260026574134827, -0.07543741166591644, -0.06827455759048462, -0.06111171096563339, -0.05394885689020157, -0.04678600654006004, -0.03962315618991852, -0.032460302114486694, -0.02529745176434517, -0.018134593963623047, -0.010971742682158947, -0.003808891400694847, 0.0033539608120918274, 0.010516811162233353, 0.017679661512374878, 0.0248425155878067, 0.03200536593794823, 0.039168208837509155, 0.04633105918765068, 0.053493909537792206, 0.06065676361322403, 0.06781961023807526, 0.07498246431350708, 0.0821453183889389, 0.08930817246437073, 0.09647102653980255, 0.10363388061523438, 0.1107967272400856, 0.11795958131551743, 0.12512242794036865, 0.13228528201580048, 0.1394481360912323, 0.14661099016666412, 0.15377384424209595, 0.16093669831752777, 0.1680995523929596, 0.17526239156723022, 0.18242524564266205, 0.18958809971809387, 0.1967509537935257, 0.20391380786895752, 0.21107664704322815], "values": [1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 5, 8, 8, 15, 18, 42, 60, 91, 116, 155, 175, 277, 336, 407, 538, 605, 672, 852, 952, 1103, 1177, 1251, 1330, 1344, 1420, 1347, 1311, 1220, 1191, 1065, 984, 871, 756, 656, 516, 389, 309, 244, 220, 166, 104, 83, 63, 43, 29, 21, 10, 7, 0, 6, 0, 2, 0, 1], "_type": "histogram"}, "parameters/mlp_extractor.value_net.0.weight": {"_type": "histogram", "bins": [-0.40676596760749817, -0.39454707503318787, -0.3823281526565552, -0.3701092600822449, -0.3578903377056122, -0.3456714451313019, -0.3334525227546692, -0.3212336301803589, -0.3090147376060486, -0.2967958450317383, -0.2845769226551056, -0.2723580300807953, -0.2601391077041626, -0.2479202151298523, -0.2357013076543808, -0.2234824001789093, -0.2112634778022766, -0.19904457032680511, -0.18682566285133362, -0.17460677027702332, -0.16238784790039062, -0.15016895532608032, -0.13795004785060883, -0.12573114037513733, -0.11351224780082703, -0.10129334032535553, -0.08907443284988403, -0.07685553282499313, -0.06463662534952164, -0.05241771787405014, -0.04019881784915924, -0.027979910373687744, -0.015760958194732666, -0.0035420525819063187, 0.008676853030920029, 0.020895756781101227, 0.03311466425657272, 0.04533357173204422, 0.05755247175693512, 0.06977137923240662, 0.0819903016090393, 0.0942092090845108, 0.1064281165599823, 0.1186470165848732, 0.1308659315109253, 0.1430848240852356, 0.1553037315607071, 0.1675226390361786, 0.1797415316104889, 0.1919604390859604, 0.20417934656143188, 0.2163982391357422, 0.22861716151237488, 0.24083605408668518, 0.25305497646331787, 0.2652738690376282, 0.2774927616119385, 0.2897116541862488, 0.30193057656288147, 0.3141494691371918, 0.32636839151382446, 0.33858728408813477, 0.35080617666244507, 0.36302509903907776, 0.37524402141571045], "values": [1, 0, 0, 0, 0, 0, 1, 1, 3, 6, 5, 10, 21, 13, 29, 35, 57, 82, 108, 162, 186, 210, 303, 353, 415, 488, 585, 651, 755, 769, 878, 881, 895, 932, 869, 838, 797, 741, 701, 601, 561, 512, 404, 332, 282, 241, 195, 126, 109, 77, 65, 35, 14, 14, 6, 8, 8, 4, 4, 0, 3, 1, 0, 1]}, "parameters/features_extractor.network.7.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "highest_actual_score": -433.5384207924757, "parameters/features_extractor.network.0.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/features_extractor.network.7.weight": {"values": [1, 0, 0, 2, 2, 2, 12, 17, 45, 74, 126, 189, 392, 559, 969, 1415, 2218, 3321, 4755, 6584, 9174, 12229, 15707, 19936, 24701, 29464, 34802, 39327, 43656, 47311, 49919, 51043, 51504, 50200, 47891, 43952, 40023, 35069, 30117, 25420, 20564, 16027, 12574, 9689, 6969, 4997, 3468, 2400, 1545, 997, 573, 373, 213, 143, 72, 44, 17, 11, 6, 4, 1, 0, 0, 1], "_type": "histogram", "bins": [-0.13047969341278076, -0.12640973925590515, -0.12233978509902954, -0.11826983839273453, -0.11419988423585892, -0.1101299300789833, -0.1060599833726883, -0.10199002921581268, -0.09792007505893707, -0.09385012090206146, -0.08978016674518585, -0.08571022003889084, -0.08164026588201523, -0.07757031172513962, -0.0735003650188446, -0.069430410861969, -0.06536045670509338, -0.06129050254821777, -0.05722055211663246, -0.05315060168504715, -0.04908064752817154, -0.04501069337129593, -0.04094074293971062, -0.036870792508125305, -0.032800838351249695, -0.028730886057019234, -0.024660933762788773, -0.02059098146855831, -0.01652102917432785, -0.01245107688009739, -0.008381124585866928, -0.004311172291636467, -0.00024121999740600586, 0.0038287322968244553, 0.007898684591054916, 0.011968636885285378, 0.01603858917951584, 0.0201085414737463, 0.02417849376797676, 0.028248446062207222, 0.03231839835643768, 0.03638835251331329, 0.040458302944898605, 0.04452825337648392, 0.04859820753335953, 0.05266816169023514, 0.05673811212182045, 0.06080806255340576, 0.06487801671028137, 0.06894797086715698, 0.07301792502403259, 0.0770878717303276, 0.08115782588720322, 0.08522778004407883, 0.08929772675037384, 0.09336768090724945, 0.09743763506412506, 0.10150758922100067, 0.10557754337787628, 0.1096474900841713, 0.1137174442410469, 0.11778739839792252, 0.12185734510421753, 0.12592729926109314, 0.12999725341796875]}, "parameters/features_extractor.network.2.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "_timestamp": 1651744217, "Episode reward": -577.25, "parameters/mlp_extractor.value_net.2.weight": {"_type": "histogram", "values": [2, 2, 1, 3, 3, 7, 5, 9, 19, 17, 16, 15, 24, 27, 26, 45, 49, 48, 62, 76, 97, 106, 113, 106, 117, 153, 140, 144, 162, 169, 163, 169, 155, 136, 165, 164, 152, 140, 128, 126, 108, 112, 82, 87, 81, 56, 47, 54, 46, 26, 32, 21, 22, 18, 13, 5, 7, 2, 2, 3, 1, 5, 3, 2], "bins": [-0.5733544826507568, -0.5554158687591553, -0.5374771952629089, -0.5195385217666626, -0.501599907875061, -0.4836612641811371, -0.46572262048721313, -0.4477839767932892, -0.42984533309936523, -0.4119066894054413, -0.39396804571151733, -0.3760294020175934, -0.35809075832366943, -0.3401521146297455, -0.32221347093582153, -0.3042748272418976, -0.28633618354797363, -0.2683975398540497, -0.25045889616012573, -0.23252025246620178, -0.21458160877227783, -0.19664296507835388, -0.17870432138442993, -0.16076567769050598, -0.14282703399658203, -0.12488839030265808, -0.10694974660873413, -0.08901110291481018, -0.07107245922088623, -0.05313381552696228, -0.03519517183303833, -0.01725652813911438, 0.0006821751594543457, 0.018620818853378296, 0.036559462547302246, 0.054498106241226196, 0.07243674993515015, 0.0903753936290741, 0.10831403732299805, 0.126252681016922, 0.14419132471084595, 0.1621299684047699, 0.18006861209869385, 0.1980072557926178, 0.21594589948654175, 0.2338845431804657, 0.25182318687438965, 0.2697618305683136, 0.28770047426223755, 0.3056391179561615, 0.32357776165008545, 0.3415164053440094, 0.35945504903793335, 0.3773936927318573, 0.39533233642578125, 0.4132709801197052, 0.43120962381362915, 0.4491482675075531, 0.46708691120147705, 0.485025554895401, 0.502964198589325, 0.5209028720855713, 0.5388414859771729, 0.5567800998687744, 0.5747187733650208]}, "parameters/mlp_extractor.policy_net.2.weight": {"values": [1, 0, 0, 1, 3, 2, 3, 8, 11, 8, 11, 20, 21, 34, 28, 36, 54, 50, 61, 95, 95, 95, 94, 106, 136, 145, 157, 175, 161, 157, 169, 169, 191, 163, 174, 143, 159, 145, 150, 104, 121, 109, 81, 74, 75, 47, 41, 43, 34, 21, 33, 20, 19, 9, 13, 7, 3, 4, 2, 2, 1, 0, 0, 2], "_type": "histogram", "bins": [-0.6038561463356018, -0.5848402380943298, -0.5658243894577026, -0.5468084812164307, -0.5277926325798035, -0.5087767243385315, -0.4897608458995819, -0.4707449674606323, -0.45172908902168274, -0.43271321058273315, -0.41369733214378357, -0.394681453704834, -0.375665545463562, -0.3566496968269348, -0.33763378858566284, -0.31861791014671326, -0.29960203170776367, -0.2805861532688141, -0.2615702748298645, -0.24255438148975372, -0.22353850305080414, -0.20452262461185455, -0.18550673127174377, -0.1664908528327942, -0.1474749743938446, -0.12845909595489502, -0.10944321006536484, -0.09042732417583466, -0.07141144573688507, -0.052395567297935486, -0.033379681408405304, -0.014363795518875122, 0.004652082920074463, 0.023667965084314346, 0.04268384724855423, 0.06169972941279411, 0.080715611577034, 0.09973149001598358, 0.11874737590551376, 0.13776326179504395, 0.15677914023399353, 0.17579501867294312, 0.1948108971118927, 0.21382679045200348, 0.23284266889095306, 0.25185853242874146, 0.2708744406700134, 0.289890319108963, 0.3089061975479126, 0.3279220759868622, 0.34693795442581177, 0.36595383286476135, 0.38496971130371094, 0.4039856195449829, 0.4230014979839325, 0.4420173764228821, 0.46103325486183167, 0.48004913330078125, 0.49906501173973083, 0.5180808901786804, 0.5370967984199524, 0.5561126470565796, 0.5751285552978516, 0.5941444635391235, 0.6131603121757507]}}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_024822-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_024822-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..7338b11
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_024822-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_025053-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_025053-Run 1/files/config.yaml
new file mode 100644
index 0000000..5f15bfb
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025053-Run 1/files/config.yaml	
@@ -0,0 +1,295 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000001F02C6C8608>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651744253
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 3
+      - 5
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78DF6D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001EF78C02688>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78C6BCA8>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000001EF78DD3748>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740988.1926534
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 1
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_025053-Run 1/files/events.out.tfevents.1651744260.DESKTOP-014BV0C.20952.0 b/ROAR_gym/wandb/run-20220505_025053-Run 1/files/events.out.tfevents.1651744260.DESKTOP-014BV0C.20952.0
new file mode 120000
index 0000000..adb97f8
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025053-Run 1/files/events.out.tfevents.1651744260.DESKTOP-014BV0C.20952.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744260.DESKTOP-014BV0C.20952.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_025053-Run 1/files/model.zip b/ROAR_gym/wandb/run-20220505_025053-Run 1/files/model.zip
new file mode 120000
index 0000000..4c20e1e
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025053-Run 1/files/model.zip	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/models/Run 1/model.zip
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_025053-Run 1/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_025053-Run 1/files/wandb-summary.json
new file mode 100644
index 0000000..7c3ec76
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025053-Run 1/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"parameters/mlp_extractor.value_net.0.weight": {"_type": "histogram", "bins": [-0.40676596760749817, -0.39454707503318787, -0.3823281526565552, -0.3701092600822449, -0.3578903377056122, -0.3456714451313019, -0.3334525227546692, -0.3212336301803589, -0.3090147376060486, -0.2967958450317383, -0.2845769226551056, -0.2723580300807953, -0.2601391077041626, -0.2479202151298523, -0.2357013076543808, -0.2234824001789093, -0.2112634778022766, -0.19904457032680511, -0.18682566285133362, -0.17460677027702332, -0.16238784790039062, -0.15016895532608032, -0.13795004785060883, -0.12573114037513733, -0.11351224780082703, -0.10129334032535553, -0.08907443284988403, -0.07685553282499313, -0.06463662534952164, -0.05241771787405014, -0.04019881784915924, -0.027979910373687744, -0.015760958194732666, -0.0035420525819063187, 0.008676853030920029, 0.020895756781101227, 0.03311466425657272, 0.04533357173204422, 0.05755247175693512, 0.06977137923240662, 0.0819903016090393, 0.0942092090845108, 0.1064281165599823, 0.1186470165848732, 0.1308659315109253, 0.1430848240852356, 0.1553037315607071, 0.1675226390361786, 0.1797415316104889, 0.1919604390859604, 0.20417934656143188, 0.2163982391357422, 0.22861716151237488, 0.24083605408668518, 0.25305497646331787, 0.2652738690376282, 0.2774927616119385, 0.2897116541862488, 0.30193057656288147, 0.3141494691371918, 0.32636839151382446, 0.33858728408813477, 0.35080617666244507, 0.36302509903907776, 0.37524402141571045], "values": [1, 0, 0, 0, 0, 0, 1, 1, 3, 6, 5, 10, 21, 13, 29, 35, 57, 82, 108, 162, 186, 210, 303, 353, 415, 488, 585, 651, 755, 769, 878, 881, 895, 932, 869, 838, 797, 741, 701, 601, 561, 512, 404, 332, 282, 241, 195, 126, 109, 77, 65, 35, 14, 14, 6, 8, 8, 4, 4, 0, 3, 1, 0, 1]}, "parameters/action_net.weight": {"bins": [-0.004265394527465105, -0.00413862569257617, -0.004011856857687235, -0.0038850880227983, -0.0037583191879093647, -0.0036315503530204296, -0.0035047815181314945, -0.0033780126832425594, -0.0032512438483536243, -0.0031244750134646893, -0.002997706178575754, -0.002870937343686819, -0.002744168508797884, -0.002617399673908949, -0.002490630839020014, -0.0023638620041310787, -0.0022370931692421436, -0.0021103243343532085, -0.0019835554994642735, -0.0018567866645753384, -0.0017300178296864033, -0.0016032489947974682, -0.001476480159908533, -0.001349711325019598, -0.001222942490130663, -0.0010961736552417278, -0.0009694048203527927, -0.0008426359854638577, -0.0007158671505749226, -0.0005890983156859875, -0.0004623294807970524, -0.0003355606459081173, -0.0002087922766804695, -8.202344179153442e-05, 4.4745393097400665e-05, 0.00017151422798633575, 0.00029828306287527084, 0.00042505189776420593, 0.000551820732653141, 0.0006785895675420761, 0.0008053584024310112, 0.0009321272373199463, 0.0010588960722088814, 0.0011856649070978165, 0.0013124337419867516, 0.0014392025768756866, 0.0015659714117646217, 0.0016927402466535568, 0.001819509081542492, 0.001946277916431427, 0.002073046751320362, 0.002199815586209297, 0.0023265844210982323, 0.0024533532559871674, 0.0025801220908761024, 0.0027068909257650375, 0.0028336597606539726, 0.0029604285955429077, 0.003087197430431843, 0.003213966265320778, 0.003340735100209713, 0.003467503935098648, 0.003594272769987583, 0.0037210416048765182, 0.0038478104397654533], "values": [1, 0, 0, 1, 0, 0, 0, 3, 0, 1, 3, 2, 2, 3, 5, 7, 7, 7, 8, 9, 15, 15, 16, 14, 21, 21, 22, 25, 24, 29, 19, 26, 39, 33, 38, 28, 27, 31, 36, 24, 29, 21, 22, 20, 19, 16, 14, 10, 14, 6, 3, 6, 1, 5, 8, 1, 2, 1, 3, 2, 0, 0, 1, 2], "_type": "histogram"}, "parameters/mlp_extractor.policy_net.0.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "_runtime": 1987, "parameters/mlp_extractor.value_net.2.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "parameters/features_extractor.network.2.bias": {"_type": "histogram", "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "avg10_actual_score": -982.8568679259507, "parameters/mlp_extractor.policy_net.2.weight": {"values": [1, 0, 0, 1, 3, 2, 3, 8, 11, 8, 11, 20, 21, 34, 28, 36, 54, 50, 61, 95, 95, 95, 94, 106, 136, 145, 157, 175, 161, 157, 169, 169, 191, 163, 174, 143, 159, 145, 150, 104, 121, 109, 81, 74, 75, 47, 41, 43, 34, 21, 33, 20, 19, 9, 13, 7, 3, 4, 2, 2, 1, 0, 0, 2], "_type": "histogram", "bins": [-0.6038561463356018, -0.5848402380943298, -0.5658243894577026, -0.5468084812164307, -0.5277926325798035, -0.5087767243385315, -0.4897608458995819, -0.4707449674606323, -0.45172908902168274, -0.43271321058273315, -0.41369733214378357, -0.394681453704834, -0.375665545463562, -0.3566496968269348, -0.33763378858566284, -0.31861791014671326, -0.29960203170776367, -0.2805861532688141, -0.2615702748298645, -0.24255438148975372, -0.22353850305080414, -0.20452262461185455, -0.18550673127174377, -0.1664908528327942, -0.1474749743938446, -0.12845909595489502, -0.10944321006536484, -0.09042732417583466, -0.07141144573688507, -0.052395567297935486, -0.033379681408405304, -0.014363795518875122, 0.004652082920074463, 0.023667965084314346, 0.04268384724855423, 0.06169972941279411, 0.080715611577034, 0.09973149001598358, 0.11874737590551376, 0.13776326179504395, 0.15677914023399353, 0.17579501867294312, 0.1948108971118927, 0.21382679045200348, 0.23284266889095306, 0.25185853242874146, 0.2708744406700134, 0.289890319108963, 0.3089061975479126, 0.3279220759868622, 0.34693795442581177, 0.36595383286476135, 0.38496971130371094, 0.4039856195449829, 0.4230014979839325, 0.4420173764228821, 0.46103325486183167, 0.48004913330078125, 0.49906501173973083, 0.5180808901786804, 0.5370967984199524, 0.5561126470565796, 0.5751285552978516, 0.5941444635391235, 0.6131603121757507]}, "parameters/log_std": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/features_extractor.network.7.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "Episode actual reward": -705.0847807204715, "parameters/mlp_extractor.policy_net.2.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/value_net.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/features_extractor.network.0.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "avg10_score": -294.9318181818182, "largest_steps": 73, "parameters/value_net.weight": {"_type": "histogram", "bins": [-0.27861079573631287, -0.2690991461277008, -0.25958746671676636, -0.2500758171081543, -0.24056415259838104, -0.2310524880886078, -0.22154083847999573, -0.21202917397022247, -0.20251750946044922, -0.19300584495067596, -0.1834941953420639, -0.17398253083229065, -0.1644708663225174, -0.15495920181274414, -0.14544755220413208, -0.13593588769435883, -0.12642423808574677, -0.11691258102655411, -0.10740091651678085, -0.0978892594575882, -0.08837759494781494, -0.07886593788862228, -0.06935428082942963, -0.05984261631965637, -0.05033096671104431, -0.040819305926561356, -0.0313076451420784, -0.021795988082885742, -0.012284327298402786, -0.0027726665139198303, 0.006738990545272827, 0.01625065505504608, 0.025762319564819336, 0.03527398034930229, 0.04478564113378525, 0.054297298192977905, 0.06380896270275116, 0.07332061976194382, 0.08283227682113647, 0.09234394133090973, 0.10185560584068298, 0.11136726289987564, 0.1208789274096489, 0.13039058446884155, 0.1399022489786148, 0.14941391348838806, 0.15892556309700012, 0.16843722760677338, 0.17794887721538544, 0.1874605417251587, 0.19697219133377075, 0.206483855843544, 0.21599552035331726, 0.22550716996192932, 0.23501883447170258, 0.24453049898147583, 0.2540421485900879, 0.26355379819869995, 0.2730654776096344, 0.28257712721824646, 0.2920887768268585, 0.30160045623779297, 0.31111210584640503, 0.3206237554550171, 0.33013543486595154], "values": [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 3, 2, 3, 0, 0, 2, 2, 1, 2, 2, 0, 0, 4, 2, 3, 1, 2, 0, 1, 3, 2, 5, 1, 1, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1]}, "parameters/features_extractor.network.4.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "parameters/mlp_extractor.value_net.2.weight": {"values": [2, 2, 1, 3, 3, 7, 5, 9, 19, 17, 16, 15, 24, 27, 26, 45, 49, 48, 62, 76, 97, 106, 113, 106, 117, 153, 140, 144, 162, 169, 163, 169, 155, 136, 165, 164, 152, 140, 128, 126, 108, 112, 82, 87, 81, 56, 47, 54, 46, 26, 32, 21, 22, 18, 13, 5, 7, 2, 2, 3, 1, 5, 3, 2], "_type": "histogram", "bins": [-0.5733544826507568, -0.5554158687591553, -0.5374771952629089, -0.5195385217666626, -0.501599907875061, -0.4836612641811371, -0.46572262048721313, -0.4477839767932892, -0.42984533309936523, -0.4119066894054413, -0.39396804571151733, -0.3760294020175934, -0.35809075832366943, -0.3401521146297455, -0.32221347093582153, -0.3042748272418976, -0.28633618354797363, -0.2683975398540497, -0.25045889616012573, -0.23252025246620178, -0.21458160877227783, -0.19664296507835388, -0.17870432138442993, -0.16076567769050598, -0.14282703399658203, -0.12488839030265808, -0.10694974660873413, -0.08901110291481018, -0.07107245922088623, -0.05313381552696228, -0.03519517183303833, -0.01725652813911438, 0.0006821751594543457, 0.018620818853378296, 0.036559462547302246, 0.054498106241226196, 0.07243674993515015, 0.0903753936290741, 0.10831403732299805, 0.126252681016922, 0.14419132471084595, 0.1621299684047699, 0.18006861209869385, 0.1980072557926178, 0.21594589948654175, 0.2338845431804657, 0.25182318687438965, 0.2697618305683136, 0.28770047426223755, 0.3056391179561615, 0.32357776165008545, 0.3415164053440094, 0.35945504903793335, 0.3773936927318573, 0.39533233642578125, 0.4132709801197052, 0.43120962381362915, 0.4491482675075531, 0.46708691120147705, 0.485025554895401, 0.502964198589325, 0.5209028720855713, 0.5388414859771729, 0.5567800998687744, 0.5747187733650208]}, "Checkpoint reached": 0, "parameters/features_extractor.network.2.weight": {"bins": [-0.2457638382911682, -0.23838646709918976, -0.2310090959072113, -0.22363172471523285, -0.2162543535232544, -0.20887698233127594, -0.20149961113929749, -0.19412222504615784, -0.18674486875534058, -0.17936749756336212, -0.17199012637138367, -0.1646127551794052, -0.15723538398742676, -0.1498580127954483, -0.14248064160346985, -0.1351032555103302, -0.12772588431835175, -0.12034851312637329, -0.11297114193439484, -0.10559377074241638, -0.09821639955043793, -0.09083902835845947, -0.08346164971590042, -0.07608427852392197, -0.06870689988136292, -0.06132952868938446, -0.053952157497406006, -0.04657478258013725, -0.0391974113881588, -0.031820040196180344, -0.02444266527891159, -0.017065294086933136, -0.009687945246696472, -0.002310573123395443, 0.005066798999905586, 0.01244417205452919, 0.019821543246507645, 0.0271989144384861, 0.03457628935575485, 0.04195366054773331, 0.049331024289131165, 0.05670839548110962, 0.06408576667308807, 0.07146313786506653, 0.07884050905704498, 0.08621788024902344, 0.09359525889158249, 0.10097263008356094, 0.10835000872612, 0.11572737991809845, 0.1231047511100769, 0.13048212230205536, 0.1378594934940338, 0.14523686468601227, 0.15261423587799072, 0.15999162197113037, 0.16736897826194763, 0.1747463494539261, 0.18212372064590454, 0.189501091837883, 0.19687846302986145, 0.2042558342218399, 0.21163320541381836, 0.219010591506958, 0.22638796269893646], "values": [1, 1, 1, 0, 3, 10, 11, 5, 15, 39, 30, 75, 70, 94, 136, 159, 207, 253, 327, 416, 485, 610, 666, 831, 882, 981, 1078, 1202, 1353, 1395, 1446, 1504, 1502, 1575, 1579, 1532, 1466, 1323, 1215, 1191, 1061, 971, 794, 761, 644, 567, 467, 386, 353, 268, 210, 163, 119, 95, 65, 55, 44, 23, 15, 14, 7, 6, 4, 7], "_type": "histogram"}, "parameters/features_extractor.network.0.weight": {"_type": "histogram", "bins": [-0.24734584987163544, -0.2401829957962036, -0.2330201417207718, -0.22585728764533997, -0.21869444847106934, -0.2115315943956375, -0.2043687403202057, -0.19720588624477386, -0.19004303216934204, -0.18288017809391022, -0.1757173240184784, -0.16855448484420776, -0.16139163076877594, -0.15422877669334412, -0.1470659226179123, -0.13990306854248047, -0.13274022936820984, -0.12557737529277802, -0.11841452866792679, -0.11125167459249496, -0.10408882796764374, -0.09692597389221191, -0.08976311981678009, -0.08260026574134827, -0.07543741166591644, -0.06827455759048462, -0.06111171096563339, -0.05394885689020157, -0.04678600654006004, -0.03962315618991852, -0.032460302114486694, -0.02529745176434517, -0.018134593963623047, -0.010971742682158947, -0.003808891400694847, 0.0033539608120918274, 0.010516811162233353, 0.017679661512374878, 0.0248425155878067, 0.03200536593794823, 0.039168208837509155, 0.04633105918765068, 0.053493909537792206, 0.06065676361322403, 0.06781961023807526, 0.07498246431350708, 0.0821453183889389, 0.08930817246437073, 0.09647102653980255, 0.10363388061523438, 0.1107967272400856, 0.11795958131551743, 0.12512242794036865, 0.13228528201580048, 0.1394481360912323, 0.14661099016666412, 0.15377384424209595, 0.16093669831752777, 0.1680995523929596, 0.17526239156723022, 0.18242524564266205, 0.18958809971809387, 0.1967509537935257, 0.20391380786895752, 0.21107664704322815], "values": [1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 5, 8, 8, 15, 18, 42, 60, 91, 116, 155, 175, 277, 336, 407, 538, 605, 672, 852, 952, 1103, 1177, 1251, 1330, 1344, 1420, 1347, 1311, 1220, 1191, 1065, 984, 871, 756, 656, 516, 389, 309, 244, 220, 166, 104, 83, 63, 43, 29, 21, 10, 7, 0, 6, 0, 2, 0, 1]}, "_timestamp": 1651744641, "_step": 9532, "parameters/features_extractor.network.7.weight": {"bins": [-0.13047969341278076, -0.12640973925590515, -0.12233978509902954, -0.11826983839273453, -0.11419988423585892, -0.1101299300789833, -0.1060599833726883, -0.10199002921581268, -0.09792007505893707, -0.09385012090206146, -0.08978016674518585, -0.08571022003889084, -0.08164026588201523, -0.07757031172513962, -0.0735003650188446, -0.069430410861969, -0.06536045670509338, -0.06129050254821777, -0.05722055211663246, -0.05315060168504715, -0.04908064752817154, -0.04501069337129593, -0.04094074293971062, -0.036870792508125305, -0.032800838351249695, -0.028730886057019234, -0.024660933762788773, -0.02059098146855831, -0.01652102917432785, -0.01245107688009739, -0.008381124585866928, -0.004311172291636467, -0.00024121999740600586, 0.0038287322968244553, 0.007898684591054916, 0.011968636885285378, 0.01603858917951584, 0.0201085414737463, 0.02417849376797676, 0.028248446062207222, 0.03231839835643768, 0.03638835251331329, 0.040458302944898605, 0.04452825337648392, 0.04859820753335953, 0.05266816169023514, 0.05673811212182045, 0.06080806255340576, 0.06487801671028137, 0.06894797086715698, 0.07301792502403259, 0.0770878717303276, 0.08115782588720322, 0.08522778004407883, 0.08929772675037384, 0.09336768090724945, 0.09743763506412506, 0.10150758922100067, 0.10557754337787628, 0.1096474900841713, 0.1137174442410469, 0.11778739839792252, 0.12185734510421753, 0.12592729926109314, 0.12999725341796875], "values": [1, 0, 0, 2, 2, 2, 12, 17, 45, 74, 126, 189, 392, 559, 969, 1415, 2218, 3321, 4755, 6584, 9174, 12229, 15707, 19936, 24701, 29464, 34802, 39327, 43656, 47311, 49919, 51043, 51504, 50200, 47891, 43952, 40023, 35069, 30117, 25420, 20564, 16027, 12574, 9689, 6969, 4997, 3468, 2400, 1545, 997, 573, 373, 213, 143, 72, 44, 17, 11, 6, 4, 1, 0, 0, 1], "_type": "histogram"}, "parameters/mlp_extractor.policy_net.0.weight": {"bins": [-0.31839415431022644, -0.3084770441055298, -0.2985599637031555, -0.28864285349845886, -0.2787257730960846, -0.26880866289138794, -0.25889158248901367, -0.24897447228431702, -0.23905739188194275, -0.2291402965784073, -0.21922320127487183, -0.20930610597133636, -0.1993890106678009, -0.18947191536426544, -0.17955482006072998, -0.16963770985603333, -0.15972061455249786, -0.1498035192489624, -0.13988642394542694, -0.12996932864189148, -0.12005223333835602, -0.11013513803482056, -0.1002180352807045, -0.09030093997716904, -0.08038383722305298, -0.07046674191951752, -0.060549646615982056, -0.050632547587156296, -0.040715452283620834, -0.030798356980085373, -0.020881257951259613, -0.010964162647724152, -0.0010470747947692871, 0.008870021440088749, 0.018787117674946785, 0.028704214841127396, 0.03862131014466286, 0.04853840544819832, 0.05845550447702408, 0.06837259978055954, 0.0782896876335144, 0.08820678293704987, 0.09812387824058533, 0.10804097354412079, 0.11795806884765625, 0.1278751641511917, 0.13779225945472717, 0.14770936965942383, 0.1576264649629593, 0.16754356026649475, 0.1774606555700302, 0.18737775087356567, 0.19729484617710114, 0.2072119414806366, 0.21712905168533325, 0.22704613208770752, 0.23696324229240417, 0.24688033759593964, 0.2567974328994751, 0.26671454310417175, 0.276631623506546, 0.2865487337112427, 0.29646581411361694, 0.3063829243183136, 0.31630000472068787], "_type": "histogram", "values": [5, 4, 2, 4, 5, 10, 15, 16, 17, 26, 42, 59, 60, 82, 126, 149, 170, 194, 227, 254, 290, 372, 437, 484, 551, 548, 599, 694, 632, 684, 714, 699, 761, 702, 742, 661, 659, 597, 554, 508, 463, 411, 370, 324, 278, 231, 185, 174, 130, 121, 81, 71, 54, 39, 33, 21, 14, 7, 6, 5, 4, 4, 0, 3]}, "Episode reward": -40, "parameters/features_extractor.network.4.weight": {"values": [1, 1, 2, 2, 6, 6, 11, 16, 28, 35, 58, 75, 113, 174, 203, 259, 308, 449, 542, 655, 770, 953, 1076, 1196, 1383, 1538, 1631, 1719, 1840, 1849, 1915, 1894, 1853, 1725, 1698, 1603, 1507, 1261, 1243, 1021, 841, 694, 583, 472, 397, 319, 262, 206, 135, 89, 87, 52, 45, 20, 13, 13, 5, 3, 3, 3, 1, 1, 0, 1], "_type": "histogram", "bins": [-0.23557759821414948, -0.22792333364486694, -0.2202690839767456, -0.21261483430862427, -0.20496056973934174, -0.1973063051700592, -0.18965205550193787, -0.18199780583381653, -0.174343541264534, -0.16668927669525146, -0.15903502702713013, -0.1513807773590088, -0.14372651278972626, -0.13607224822044373, -0.1284179985523224, -0.12076374143362045, -0.11310948431491852, -0.10545522719621658, -0.09780097007751465, -0.09014671295881271, -0.08249245584011078, -0.07483819872140884, -0.06718394160270691, -0.059529684484004974, -0.05187542736530304, -0.044221170246601105, -0.03656691312789917, -0.028912656009197235, -0.0212583988904953, -0.013604141771793365, -0.005949884653091431, 0.0017043724656105042, 0.009358644485473633, 0.017012901604175568, 0.024667158722877502, 0.03232141584157944, 0.03997567296028137, 0.04762993007898331, 0.05528418719768524, 0.06293844431638718, 0.07059270143508911, 0.07824695855379105, 0.08590121567249298, 0.09355547279119492, 0.10120972990989685, 0.10886398702859879, 0.11651824414730072, 0.12417250126600266, 0.1318267583847046, 0.13948100805282593, 0.14713527262210846, 0.154789537191391, 0.16244378685951233, 0.17009803652763367, 0.1777523010969162, 0.18540656566619873, 0.19306081533432007, 0.2007150650024414, 0.20836932957172394, 0.21602359414100647, 0.2236778438091278, 0.23133209347724915, 0.23898635804653168, 0.2466406226158142, 0.25429487228393555]}, "parameters/mlp_extractor.value_net.0.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "highest_actual_score": -349.7763223439291, "avg10_checkpoints": 61.36363636363637, "parameters/action_net.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "highest_speed": 61.532234343718436}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_025053-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_025053-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..c319c84
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_025053-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_025733-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_025733-Run 1/files/config.yaml
new file mode 100644
index 0000000..331230a
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025733-Run 1/files/config.yaml	
@@ -0,0 +1,298 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000001F02C6C8608>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651744653
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      2:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 5
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78DF6D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001EF78C02688>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78C6BCA8>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000001EF78DD3748>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740988.1926534
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 1
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_025733-Run 1/files/events.out.tfevents.1651744657.DESKTOP-014BV0C.11480.0 b/ROAR_gym/wandb/run-20220505_025733-Run 1/files/events.out.tfevents.1651744657.DESKTOP-014BV0C.11480.0
new file mode 120000
index 0000000..a75c4d9
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025733-Run 1/files/events.out.tfevents.1651744657.DESKTOP-014BV0C.11480.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744657.DESKTOP-014BV0C.11480.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_025733-Run 1/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_025733-Run 1/files/wandb-summary.json
new file mode 100644
index 0000000..795df18
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025733-Run 1/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"parameters/mlp_extractor.value_net.2.weight": {"_type": "histogram", "bins": [-0.5733544826507568, -0.5554158687591553, -0.5374771952629089, -0.5195385217666626, -0.501599907875061, -0.4836612641811371, -0.46572262048721313, -0.4477839767932892, -0.42984533309936523, -0.4119066894054413, -0.39396804571151733, -0.3760294020175934, -0.35809075832366943, -0.3401521146297455, -0.32221347093582153, -0.3042748272418976, -0.28633618354797363, -0.2683975398540497, -0.25045889616012573, -0.23252025246620178, -0.21458160877227783, -0.19664296507835388, -0.17870432138442993, -0.16076567769050598, -0.14282703399658203, -0.12488839030265808, -0.10694974660873413, -0.08901110291481018, -0.07107245922088623, -0.05313381552696228, -0.03519517183303833, -0.01725652813911438, 0.0006821751594543457, 0.018620818853378296, 0.036559462547302246, 0.054498106241226196, 0.07243674993515015, 0.0903753936290741, 0.10831403732299805, 0.126252681016922, 0.14419132471084595, 0.1621299684047699, 0.18006861209869385, 0.1980072557926178, 0.21594589948654175, 0.2338845431804657, 0.25182318687438965, 0.2697618305683136, 0.28770047426223755, 0.3056391179561615, 0.32357776165008545, 0.3415164053440094, 0.35945504903793335, 0.3773936927318573, 0.39533233642578125, 0.4132709801197052, 0.43120962381362915, 0.4491482675075531, 0.46708691120147705, 0.485025554895401, 0.502964198589325, 0.5209028720855713, 0.5388414859771729, 0.5567800998687744, 0.5747187733650208], "values": [2, 2, 1, 3, 3, 7, 5, 9, 19, 17, 16, 15, 24, 27, 26, 45, 49, 48, 62, 76, 97, 106, 113, 106, 117, 153, 140, 144, 162, 169, 163, 169, 155, 136, 165, 164, 152, 140, 128, 126, 108, 112, 82, 87, 81, 56, 47, 54, 46, 26, 32, 21, 22, 18, 13, 5, 7, 2, 2, 3, 1, 5, 3, 2]}, "parameters/features_extractor.network.7.weight": {"bins": [-0.13047969341278076, -0.12640973925590515, -0.12233978509902954, -0.11826983839273453, -0.11419988423585892, -0.1101299300789833, -0.1060599833726883, -0.10199002921581268, -0.09792007505893707, -0.09385012090206146, -0.08978016674518585, -0.08571022003889084, -0.08164026588201523, -0.07757031172513962, -0.0735003650188446, -0.069430410861969, -0.06536045670509338, -0.06129050254821777, -0.05722055211663246, -0.05315060168504715, -0.04908064752817154, -0.04501069337129593, -0.04094074293971062, -0.036870792508125305, -0.032800838351249695, -0.028730886057019234, -0.024660933762788773, -0.02059098146855831, -0.01652102917432785, -0.01245107688009739, -0.008381124585866928, -0.004311172291636467, -0.00024121999740600586, 0.0038287322968244553, 0.007898684591054916, 0.011968636885285378, 0.01603858917951584, 0.0201085414737463, 0.02417849376797676, 0.028248446062207222, 0.03231839835643768, 0.03638835251331329, 0.040458302944898605, 0.04452825337648392, 0.04859820753335953, 0.05266816169023514, 0.05673811212182045, 0.06080806255340576, 0.06487801671028137, 0.06894797086715698, 0.07301792502403259, 0.0770878717303276, 0.08115782588720322, 0.08522778004407883, 0.08929772675037384, 0.09336768090724945, 0.09743763506412506, 0.10150758922100067, 0.10557754337787628, 0.1096474900841713, 0.1137174442410469, 0.11778739839792252, 0.12185734510421753, 0.12592729926109314, 0.12999725341796875], "_type": "histogram", "values": [1, 0, 0, 2, 2, 2, 12, 17, 45, 74, 126, 189, 392, 559, 969, 1415, 2218, 3321, 4755, 6584, 9174, 12229, 15707, 19936, 24701, 29464, 34802, 39327, 43656, 47311, 49919, 51043, 51504, 50200, 47891, 43952, 40023, 35069, 30117, 25420, 20564, 16027, 12574, 9689, 6969, 4997, 3468, 2400, 1545, 997, 573, 373, 213, 143, 72, 44, 17, 11, 6, 4, 1, 0, 0, 1]}, "parameters/action_net.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/features_extractor.network.2.weight": {"values": [1, 1, 1, 0, 3, 10, 11, 5, 15, 39, 30, 75, 70, 94, 136, 159, 207, 253, 327, 416, 485, 610, 666, 831, 882, 981, 1078, 1202, 1353, 1395, 1446, 1504, 1502, 1575, 1579, 1532, 1466, 1323, 1215, 1191, 1061, 971, 794, 761, 644, 567, 467, 386, 353, 268, 210, 163, 119, 95, 65, 55, 44, 23, 15, 14, 7, 6, 4, 7], "_type": "histogram", "bins": [-0.2457638382911682, -0.23838646709918976, -0.2310090959072113, -0.22363172471523285, -0.2162543535232544, -0.20887698233127594, -0.20149961113929749, -0.19412222504615784, -0.18674486875534058, -0.17936749756336212, -0.17199012637138367, -0.1646127551794052, -0.15723538398742676, -0.1498580127954483, -0.14248064160346985, -0.1351032555103302, -0.12772588431835175, -0.12034851312637329, -0.11297114193439484, -0.10559377074241638, -0.09821639955043793, -0.09083902835845947, -0.08346164971590042, -0.07608427852392197, -0.06870689988136292, -0.06132952868938446, -0.053952157497406006, -0.04657478258013725, -0.0391974113881588, -0.031820040196180344, -0.02444266527891159, -0.017065294086933136, -0.009687945246696472, -0.002310573123395443, 0.005066798999905586, 0.01244417205452919, 0.019821543246507645, 0.0271989144384861, 0.03457628935575485, 0.04195366054773331, 0.049331024289131165, 0.05670839548110962, 0.06408576667308807, 0.07146313786506653, 0.07884050905704498, 0.08621788024902344, 0.09359525889158249, 0.10097263008356094, 0.10835000872612, 0.11572737991809845, 0.1231047511100769, 0.13048212230205536, 0.1378594934940338, 0.14523686468601227, 0.15261423587799072, 0.15999162197113037, 0.16736897826194763, 0.1747463494539261, 0.18212372064590454, 0.189501091837883, 0.19687846302986145, 0.2042558342218399, 0.21163320541381836, 0.219010591506958, 0.22638796269893646]}, "parameters/action_net.weight": {"bins": [-0.004265394527465105, -0.00413862569257617, -0.004011856857687235, -0.0038850880227983, -0.0037583191879093647, -0.0036315503530204296, -0.0035047815181314945, -0.0033780126832425594, -0.0032512438483536243, -0.0031244750134646893, -0.002997706178575754, -0.002870937343686819, -0.002744168508797884, -0.002617399673908949, -0.002490630839020014, -0.0023638620041310787, -0.0022370931692421436, -0.0021103243343532085, -0.0019835554994642735, -0.0018567866645753384, -0.0017300178296864033, -0.0016032489947974682, -0.001476480159908533, -0.001349711325019598, -0.001222942490130663, -0.0010961736552417278, -0.0009694048203527927, -0.0008426359854638577, -0.0007158671505749226, -0.0005890983156859875, -0.0004623294807970524, -0.0003355606459081173, -0.0002087922766804695, -8.202344179153442e-05, 4.4745393097400665e-05, 0.00017151422798633575, 0.00029828306287527084, 0.00042505189776420593, 0.000551820732653141, 0.0006785895675420761, 0.0008053584024310112, 0.0009321272373199463, 0.0010588960722088814, 0.0011856649070978165, 0.0013124337419867516, 0.0014392025768756866, 0.0015659714117646217, 0.0016927402466535568, 0.001819509081542492, 0.001946277916431427, 0.002073046751320362, 0.002199815586209297, 0.0023265844210982323, 0.0024533532559871674, 0.0025801220908761024, 0.0027068909257650375, 0.0028336597606539726, 0.0029604285955429077, 0.003087197430431843, 0.003213966265320778, 0.003340735100209713, 0.003467503935098648, 0.003594272769987583, 0.0037210416048765182, 0.0038478104397654533], "values": [1, 0, 0, 1, 0, 0, 0, 3, 0, 1, 3, 2, 2, 3, 5, 7, 7, 7, 8, 9, 15, 15, 16, 14, 21, 21, 22, 25, 24, 29, 19, 26, 39, 33, 38, 28, 27, 31, 36, 24, 29, 21, 22, 20, 19, 16, 14, 10, 14, 6, 3, 6, 1, 5, 8, 1, 2, 1, 3, 2, 0, 0, 1, 2], "_type": "histogram"}, "avg10_score": -299, "parameters/features_extractor.network.4.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "highest_speed": 61.53223434371843, "parameters/features_extractor.network.0.weight": {"_type": "histogram", "bins": [-0.24734584987163544, -0.2401829957962036, -0.2330201417207718, -0.22585728764533997, -0.21869444847106934, -0.2115315943956375, -0.2043687403202057, -0.19720588624477386, -0.19004303216934204, -0.18288017809391022, -0.1757173240184784, -0.16855448484420776, -0.16139163076877594, -0.15422877669334412, -0.1470659226179123, -0.13990306854248047, -0.13274022936820984, -0.12557737529277802, -0.11841452866792679, -0.11125167459249496, -0.10408882796764374, -0.09692597389221191, -0.08976311981678009, -0.08260026574134827, -0.07543741166591644, -0.06827455759048462, -0.06111171096563339, -0.05394885689020157, -0.04678600654006004, -0.03962315618991852, -0.032460302114486694, -0.02529745176434517, -0.018134593963623047, -0.010971742682158947, -0.003808891400694847, 0.0033539608120918274, 0.010516811162233353, 0.017679661512374878, 0.0248425155878067, 0.03200536593794823, 0.039168208837509155, 0.04633105918765068, 0.053493909537792206, 0.06065676361322403, 0.06781961023807526, 0.07498246431350708, 0.0821453183889389, 0.08930817246437073, 0.09647102653980255, 0.10363388061523438, 0.1107967272400856, 0.11795958131551743, 0.12512242794036865, 0.13228528201580048, 0.1394481360912323, 0.14661099016666412, 0.15377384424209595, 0.16093669831752777, 0.1680995523929596, 0.17526239156723022, 0.18242524564266205, 0.18958809971809387, 0.1967509537935257, 0.20391380786895752, 0.21107664704322815], "values": [1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 5, 8, 8, 15, 18, 42, 60, 91, 116, 155, 175, 277, 336, 407, 538, 605, 672, 852, 952, 1103, 1177, 1251, 1330, 1344, 1420, 1347, 1311, 1220, 1191, 1065, 984, 871, 756, 656, 516, 389, 309, 244, 220, 166, 104, 83, 63, 43, 29, 21, 10, 7, 0, 6, 0, 2, 0, 1]}, "parameters/mlp_extractor.value_net.2.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "parameters/value_net.weight": {"bins": [-0.27861079573631287, -0.2690991461277008, -0.25958746671676636, -0.2500758171081543, -0.24056415259838104, -0.2310524880886078, -0.22154083847999573, -0.21202917397022247, -0.20251750946044922, -0.19300584495067596, -0.1834941953420639, -0.17398253083229065, -0.1644708663225174, -0.15495920181274414, -0.14544755220413208, -0.13593588769435883, -0.12642423808574677, -0.11691258102655411, -0.10740091651678085, -0.0978892594575882, -0.08837759494781494, -0.07886593788862228, -0.06935428082942963, -0.05984261631965637, -0.05033096671104431, -0.040819305926561356, -0.0313076451420784, -0.021795988082885742, -0.012284327298402786, -0.0027726665139198303, 0.006738990545272827, 0.01625065505504608, 0.025762319564819336, 0.03527398034930229, 0.04478564113378525, 0.054297298192977905, 0.06380896270275116, 0.07332061976194382, 0.08283227682113647, 0.09234394133090973, 0.10185560584068298, 0.11136726289987564, 0.1208789274096489, 0.13039058446884155, 0.1399022489786148, 0.14941391348838806, 0.15892556309700012, 0.16843722760677338, 0.17794887721538544, 0.1874605417251587, 0.19697219133377075, 0.206483855843544, 0.21599552035331726, 0.22550716996192932, 0.23501883447170258, 0.24453049898147583, 0.2540421485900879, 0.26355379819869995, 0.2730654776096344, 0.28257712721824646, 0.2920887768268585, 0.30160045623779297, 0.31111210584640503, 0.3206237554550171, 0.33013543486595154], "values": [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 3, 2, 3, 0, 0, 2, 2, 1, 2, 2, 0, 0, 4, 2, 3, 1, 2, 0, 1, 3, 2, 5, 1, 1, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], "_type": "histogram"}, "parameters/mlp_extractor.policy_net.0.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "largest_steps": 73, "parameters/mlp_extractor.value_net.0.weight": {"_type": "histogram", "bins": [-0.40676596760749817, -0.39454707503318787, -0.3823281526565552, -0.3701092600822449, -0.3578903377056122, -0.3456714451313019, -0.3334525227546692, -0.3212336301803589, -0.3090147376060486, -0.2967958450317383, -0.2845769226551056, -0.2723580300807953, -0.2601391077041626, -0.2479202151298523, -0.2357013076543808, -0.2234824001789093, -0.2112634778022766, -0.19904457032680511, -0.18682566285133362, -0.17460677027702332, -0.16238784790039062, -0.15016895532608032, -0.13795004785060883, -0.12573114037513733, -0.11351224780082703, -0.10129334032535553, -0.08907443284988403, -0.07685553282499313, -0.06463662534952164, -0.05241771787405014, -0.04019881784915924, -0.027979910373687744, -0.015760958194732666, -0.0035420525819063187, 0.008676853030920029, 0.020895756781101227, 0.03311466425657272, 0.04533357173204422, 0.05755247175693512, 0.06977137923240662, 0.0819903016090393, 0.0942092090845108, 0.1064281165599823, 0.1186470165848732, 0.1308659315109253, 0.1430848240852356, 0.1553037315607071, 0.1675226390361786, 0.1797415316104889, 0.1919604390859604, 0.20417934656143188, 0.2163982391357422, 0.22861716151237488, 0.24083605408668518, 0.25305497646331787, 0.2652738690376282, 0.2774927616119385, 0.2897116541862488, 0.30193057656288147, 0.3141494691371918, 0.32636839151382446, 0.33858728408813477, 0.35080617666244507, 0.36302509903907776, 0.37524402141571045], "values": [1, 0, 0, 0, 0, 0, 1, 1, 3, 6, 5, 10, 21, 13, 29, 35, 57, 82, 108, 162, 186, 210, 303, 353, 415, 488, 585, 651, 755, 769, 878, 881, 895, 932, 869, 838, 797, 741, 701, 601, 561, 512, 404, 332, 282, 241, 195, 126, 109, 77, 65, 35, 14, 14, 6, 8, 8, 4, 4, 0, 3, 1, 0, 1]}, "parameters/features_extractor.network.7.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "Episode actual reward": -837.9900792994057, "avg10_checkpoints": 65.45454545454545, "parameters/log_std": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.policy_net.0.weight": {"_type": "histogram", "bins": [-0.31839415431022644, -0.3084770441055298, -0.2985599637031555, -0.28864285349845886, -0.2787257730960846, -0.26880866289138794, -0.25889158248901367, -0.24897447228431702, -0.23905739188194275, -0.2291402965784073, -0.21922320127487183, -0.20930610597133636, -0.1993890106678009, -0.18947191536426544, -0.17955482006072998, -0.16963770985603333, -0.15972061455249786, -0.1498035192489624, -0.13988642394542694, -0.12996932864189148, -0.12005223333835602, -0.11013513803482056, -0.1002180352807045, -0.09030093997716904, -0.08038383722305298, -0.07046674191951752, -0.060549646615982056, -0.050632547587156296, -0.040715452283620834, -0.030798356980085373, -0.020881257951259613, -0.010964162647724152, -0.0010470747947692871, 0.008870021440088749, 0.018787117674946785, 0.028704214841127396, 0.03862131014466286, 0.04853840544819832, 0.05845550447702408, 0.06837259978055954, 0.0782896876335144, 0.08820678293704987, 0.09812387824058533, 0.10804097354412079, 0.11795806884765625, 0.1278751641511917, 0.13779225945472717, 0.14770936965942383, 0.1576264649629593, 0.16754356026649475, 0.1774606555700302, 0.18737775087356567, 0.19729484617710114, 0.2072119414806366, 0.21712905168533325, 0.22704613208770752, 0.23696324229240417, 0.24688033759593964, 0.2567974328994751, 0.26671454310417175, 0.276631623506546, 0.2865487337112427, 0.29646581411361694, 0.3063829243183136, 0.31630000472068787], "values": [5, 4, 2, 4, 5, 10, 15, 16, 17, 26, 42, 59, 60, 82, 126, 149, 170, 194, 227, 254, 290, 372, 437, 484, 551, 548, 599, 694, 632, 684, 714, 699, 761, 702, 742, 661, 659, 597, 554, 508, 463, 411, 370, 324, 278, 231, 185, 174, 130, 121, 81, 71, 54, 39, 33, 21, 14, 7, 6, 5, 4, 4, 0, 3]}, "parameters/value_net.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/features_extractor.network.2.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.policy_net.2.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "parameters/features_extractor.network.0.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "_runtime": 1968, "avg10_actual_score": -979.0024530779892, "parameters/mlp_extractor.value_net.0.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "Checkpoint reached": 0, "parameters/mlp_extractor.policy_net.2.weight": {"_type": "histogram", "bins": [-0.6038561463356018, -0.5848402380943298, -0.5658243894577026, -0.5468084812164307, -0.5277926325798035, -0.5087767243385315, -0.4897608458995819, -0.4707449674606323, -0.45172908902168274, -0.43271321058273315, -0.41369733214378357, -0.394681453704834, -0.375665545463562, -0.3566496968269348, -0.33763378858566284, -0.31861791014671326, -0.29960203170776367, -0.2805861532688141, -0.2615702748298645, -0.24255438148975372, -0.22353850305080414, -0.20452262461185455, -0.18550673127174377, -0.1664908528327942, -0.1474749743938446, -0.12845909595489502, -0.10944321006536484, -0.09042732417583466, -0.07141144573688507, -0.052395567297935486, -0.033379681408405304, -0.014363795518875122, 0.004652082920074463, 0.023667965084314346, 0.04268384724855423, 0.06169972941279411, 0.080715611577034, 0.09973149001598358, 0.11874737590551376, 0.13776326179504395, 0.15677914023399353, 0.17579501867294312, 0.1948108971118927, 0.21382679045200348, 0.23284266889095306, 0.25185853242874146, 0.2708744406700134, 0.289890319108963, 0.3089061975479126, 0.3279220759868622, 0.34693795442581177, 0.36595383286476135, 0.38496971130371094, 0.4039856195449829, 0.4230014979839325, 0.4420173764228821, 0.46103325486183167, 0.48004913330078125, 0.49906501173973083, 0.5180808901786804, 0.5370967984199524, 0.5561126470565796, 0.5751285552978516, 0.5941444635391235, 0.6131603121757507], "values": [1, 0, 0, 1, 3, 2, 3, 8, 11, 8, 11, 20, 21, 34, 28, 36, 54, 50, 61, 95, 95, 95, 94, 106, 136, 145, 157, 175, 161, 157, 169, 169, 191, 163, 174, 143, 159, 145, 150, 104, 121, 109, 81, 74, 75, 47, 41, 43, 34, 21, 33, 20, 19, 9, 13, 7, 3, 4, 2, 2, 1, 0, 0, 2]}, "highest_actual_score": -349.7763223439291, "parameters/features_extractor.network.4.weight": {"_type": "histogram", "bins": [-0.23557759821414948, -0.22792333364486694, -0.2202690839767456, -0.21261483430862427, -0.20496056973934174, -0.1973063051700592, -0.18965205550193787, -0.18199780583381653, -0.174343541264534, -0.16668927669525146, -0.15903502702713013, -0.1513807773590088, -0.14372651278972626, -0.13607224822044373, -0.1284179985523224, -0.12076374143362045, -0.11310948431491852, -0.10545522719621658, -0.09780097007751465, -0.09014671295881271, -0.08249245584011078, -0.07483819872140884, -0.06718394160270691, -0.059529684484004974, -0.05187542736530304, -0.044221170246601105, -0.03656691312789917, -0.028912656009197235, -0.0212583988904953, -0.013604141771793365, -0.005949884653091431, 0.0017043724656105042, 0.009358644485473633, 0.017012901604175568, 0.024667158722877502, 0.03232141584157944, 0.03997567296028137, 0.04762993007898331, 0.05528418719768524, 0.06293844431638718, 0.07059270143508911, 0.07824695855379105, 0.08590121567249298, 0.09355547279119492, 0.10120972990989685, 0.10886398702859879, 0.11651824414730072, 0.12417250126600266, 0.1318267583847046, 0.13948100805282593, 0.14713527262210846, 0.154789537191391, 0.16244378685951233, 0.17009803652763367, 0.1777523010969162, 0.18540656566619873, 0.19306081533432007, 0.2007150650024414, 0.20836932957172394, 0.21602359414100647, 0.2236778438091278, 0.23133209347724915, 0.23898635804653168, 0.2466406226158142, 0.25429487228393555], "values": [1, 1, 2, 2, 6, 6, 11, 16, 28, 35, 58, 75, 113, 174, 203, 259, 308, 449, 542, 655, 770, 953, 1076, 1196, 1383, 1538, 1631, 1719, 1840, 1849, 1915, 1894, 1853, 1725, 1698, 1603, 1507, 1261, 1243, 1021, 841, 694, 583, 472, 397, 319, 262, 206, 135, 89, 87, 52, 45, 20, 13, 13, 5, 3, 3, 3, 1, 1, 0, 1]}, "Episode reward": -36, "_step": 9500, "_timestamp": 1651744622, "_wandb": {"runtime": 2}}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_025733-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_025733-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..2937e19
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_025733-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_025803-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_025803-Run 1/files/config.yaml
new file mode 100644
index 0000000..ef41303
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025803-Run 1/files/config.yaml	
@@ -0,0 +1,295 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000001F02C6C8608>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651744683
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 3
+      - 5
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78DF6D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001EF78C02688>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78C6BCA8>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000001EF78DD3748>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740988.1926534
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 1
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_025803-Run 1/files/events.out.tfevents.1651744687.DESKTOP-014BV0C.1360.0 b/ROAR_gym/wandb/run-20220505_025803-Run 1/files/events.out.tfevents.1651744687.DESKTOP-014BV0C.1360.0
new file mode 120000
index 0000000..ce1d932
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025803-Run 1/files/events.out.tfevents.1651744687.DESKTOP-014BV0C.1360.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651744687.DESKTOP-014BV0C.1360.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_025803-Run 1/files/model.zip b/ROAR_gym/wandb/run-20220505_025803-Run 1/files/model.zip
new file mode 120000
index 0000000..4c20e1e
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025803-Run 1/files/model.zip	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/models/Run 1/model.zip
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_025803-Run 1/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_025803-Run 1/files/wandb-summary.json
new file mode 100644
index 0000000..b09cb73
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_025803-Run 1/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"parameters/features_extractor.network.0.bias": {"_type": "histogram", "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/features_extractor.network.4.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.policy_net.0.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "avg10_checkpoints": 72.27272727272727, "avg10_score": -439.3863636363636, "parameters/mlp_extractor.value_net.2.weight": {"_type": "histogram", "values": [2, 2, 1, 3, 3, 7, 5, 9, 19, 17, 16, 15, 24, 27, 26, 45, 49, 48, 62, 76, 97, 106, 113, 106, 117, 153, 140, 144, 162, 169, 163, 169, 155, 136, 165, 164, 152, 140, 128, 126, 108, 112, 82, 87, 81, 56, 47, 54, 46, 26, 32, 21, 22, 18, 13, 5, 7, 2, 2, 3, 1, 5, 3, 2], "bins": [-0.5733544826507568, -0.5554158687591553, -0.5374771952629089, -0.5195385217666626, -0.501599907875061, -0.4836612641811371, -0.46572262048721313, -0.4477839767932892, -0.42984533309936523, -0.4119066894054413, -0.39396804571151733, -0.3760294020175934, -0.35809075832366943, -0.3401521146297455, -0.32221347093582153, -0.3042748272418976, -0.28633618354797363, -0.2683975398540497, -0.25045889616012573, -0.23252025246620178, -0.21458160877227783, -0.19664296507835388, -0.17870432138442993, -0.16076567769050598, -0.14282703399658203, -0.12488839030265808, -0.10694974660873413, -0.08901110291481018, -0.07107245922088623, -0.05313381552696228, -0.03519517183303833, -0.01725652813911438, 0.0006821751594543457, 0.018620818853378296, 0.036559462547302246, 0.054498106241226196, 0.07243674993515015, 0.0903753936290741, 0.10831403732299805, 0.126252681016922, 0.14419132471084595, 0.1621299684047699, 0.18006861209869385, 0.1980072557926178, 0.21594589948654175, 0.2338845431804657, 0.25182318687438965, 0.2697618305683136, 0.28770047426223755, 0.3056391179561615, 0.32357776165008545, 0.3415164053440094, 0.35945504903793335, 0.3773936927318573, 0.39533233642578125, 0.4132709801197052, 0.43120962381362915, 0.4491482675075531, 0.46708691120147705, 0.485025554895401, 0.502964198589325, 0.5209028720855713, 0.5388414859771729, 0.5567800998687744, 0.5747187733650208]}, "parameters/features_extractor.network.4.weight": {"values": [1, 1, 2, 2, 6, 6, 11, 16, 28, 35, 58, 75, 113, 174, 203, 259, 308, 449, 542, 655, 770, 953, 1076, 1196, 1383, 1538, 1631, 1719, 1840, 1849, 1915, 1894, 1853, 1725, 1698, 1603, 1507, 1261, 1243, 1021, 841, 694, 583, 472, 397, 319, 262, 206, 135, 89, 87, 52, 45, 20, 13, 13, 5, 3, 3, 3, 1, 1, 0, 1], "_type": "histogram", "bins": [-0.23557759821414948, -0.22792333364486694, -0.2202690839767456, -0.21261483430862427, -0.20496056973934174, -0.1973063051700592, -0.18965205550193787, -0.18199780583381653, -0.174343541264534, -0.16668927669525146, -0.15903502702713013, -0.1513807773590088, -0.14372651278972626, -0.13607224822044373, -0.1284179985523224, -0.12076374143362045, -0.11310948431491852, -0.10545522719621658, -0.09780097007751465, -0.09014671295881271, -0.08249245584011078, -0.07483819872140884, -0.06718394160270691, -0.059529684484004974, -0.05187542736530304, -0.044221170246601105, -0.03656691312789917, -0.028912656009197235, -0.0212583988904953, -0.013604141771793365, -0.005949884653091431, 0.0017043724656105042, 0.009358644485473633, 0.017012901604175568, 0.024667158722877502, 0.03232141584157944, 0.03997567296028137, 0.04762993007898331, 0.05528418719768524, 0.06293844431638718, 0.07059270143508911, 0.07824695855379105, 0.08590121567249298, 0.09355547279119492, 0.10120972990989685, 0.10886398702859879, 0.11651824414730072, 0.12417250126600266, 0.1318267583847046, 0.13948100805282593, 0.14713527262210846, 0.154789537191391, 0.16244378685951233, 0.17009803652763367, 0.1777523010969162, 0.18540656566619873, 0.19306081533432007, 0.2007150650024414, 0.20836932957172394, 0.21602359414100647, 0.2236778438091278, 0.23133209347724915, 0.23898635804653168, 0.2466406226158142, 0.25429487228393555]}, "parameters/features_extractor.network.0.weight": {"values": [1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 5, 8, 8, 15, 18, 42, 60, 91, 116, 155, 175, 277, 336, 407, 538, 605, 672, 852, 952, 1103, 1177, 1251, 1330, 1344, 1420, 1347, 1311, 1220, 1191, 1065, 984, 871, 756, 656, 516, 389, 309, 244, 220, 166, 104, 83, 63, 43, 29, 21, 10, 7, 0, 6, 0, 2, 0, 1], "_type": "histogram", "bins": [-0.24734584987163544, -0.2401829957962036, -0.2330201417207718, -0.22585728764533997, -0.21869444847106934, -0.2115315943956375, -0.2043687403202057, -0.19720588624477386, -0.19004303216934204, -0.18288017809391022, -0.1757173240184784, -0.16855448484420776, -0.16139163076877594, -0.15422877669334412, -0.1470659226179123, -0.13990306854248047, -0.13274022936820984, -0.12557737529277802, -0.11841452866792679, -0.11125167459249496, -0.10408882796764374, -0.09692597389221191, -0.08976311981678009, -0.08260026574134827, -0.07543741166591644, -0.06827455759048462, -0.06111171096563339, -0.05394885689020157, -0.04678600654006004, -0.03962315618991852, -0.032460302114486694, -0.02529745176434517, -0.018134593963623047, -0.010971742682158947, -0.003808891400694847, 0.0033539608120918274, 0.010516811162233353, 0.017679661512374878, 0.0248425155878067, 0.03200536593794823, 0.039168208837509155, 0.04633105918765068, 0.053493909537792206, 0.06065676361322403, 0.06781961023807526, 0.07498246431350708, 0.0821453183889389, 0.08930817246437073, 0.09647102653980255, 0.10363388061523438, 0.1107967272400856, 0.11795958131551743, 0.12512242794036865, 0.13228528201580048, 0.1394481360912323, 0.14661099016666412, 0.15377384424209595, 0.16093669831752777, 0.1680995523929596, 0.17526239156723022, 0.18242524564266205, 0.18958809971809387, 0.1967509537935257, 0.20391380786895752, 0.21107664704322815]}, "Episode actual reward": -699.7443555459904, "highest_actual_score": -508.7256826901824, "_step": 10319, "parameters/log_std": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.value_net.2.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.policy_net.2.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.value_net.0.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/features_extractor.network.2.weight": {"_type": "histogram", "bins": [-0.2457638382911682, -0.23838646709918976, -0.2310090959072113, -0.22363172471523285, -0.2162543535232544, -0.20887698233127594, -0.20149961113929749, -0.19412222504615784, -0.18674486875534058, -0.17936749756336212, -0.17199012637138367, -0.1646127551794052, -0.15723538398742676, -0.1498580127954483, -0.14248064160346985, -0.1351032555103302, -0.12772588431835175, -0.12034851312637329, -0.11297114193439484, -0.10559377074241638, -0.09821639955043793, -0.09083902835845947, -0.08346164971590042, -0.07608427852392197, -0.06870689988136292, -0.06132952868938446, -0.053952157497406006, -0.04657478258013725, -0.0391974113881588, -0.031820040196180344, -0.02444266527891159, -0.017065294086933136, -0.009687945246696472, -0.002310573123395443, 0.005066798999905586, 0.01244417205452919, 0.019821543246507645, 0.0271989144384861, 0.03457628935575485, 0.04195366054773331, 0.049331024289131165, 0.05670839548110962, 0.06408576667308807, 0.07146313786506653, 0.07884050905704498, 0.08621788024902344, 0.09359525889158249, 0.10097263008356094, 0.10835000872612, 0.11572737991809845, 0.1231047511100769, 0.13048212230205536, 0.1378594934940338, 0.14523686468601227, 0.15261423587799072, 0.15999162197113037, 0.16736897826194763, 0.1747463494539261, 0.18212372064590454, 0.189501091837883, 0.19687846302986145, 0.2042558342218399, 0.21163320541381836, 0.219010591506958, 0.22638796269893646], "values": [1, 1, 1, 0, 3, 10, 11, 5, 15, 39, 30, 75, 70, 94, 136, 159, 207, 253, 327, 416, 485, 610, 666, 831, 882, 981, 1078, 1202, 1353, 1395, 1446, 1504, 1502, 1575, 1579, 1532, 1466, 1323, 1215, 1191, 1061, 971, 794, 761, 644, 567, 467, 386, 353, 268, 210, 163, 119, 95, 65, 55, 44, 23, 15, 14, 7, 6, 4, 7]}, "parameters/value_net.weight": {"bins": [-0.27861079573631287, -0.2690991461277008, -0.25958746671676636, -0.2500758171081543, -0.24056415259838104, -0.2310524880886078, -0.22154083847999573, -0.21202917397022247, -0.20251750946044922, -0.19300584495067596, -0.1834941953420639, -0.17398253083229065, -0.1644708663225174, -0.15495920181274414, -0.14544755220413208, -0.13593588769435883, -0.12642423808574677, -0.11691258102655411, -0.10740091651678085, -0.0978892594575882, -0.08837759494781494, -0.07886593788862228, -0.06935428082942963, -0.05984261631965637, -0.05033096671104431, -0.040819305926561356, -0.0313076451420784, -0.021795988082885742, -0.012284327298402786, -0.0027726665139198303, 0.006738990545272827, 0.01625065505504608, 0.025762319564819336, 0.03527398034930229, 0.04478564113378525, 0.054297298192977905, 0.06380896270275116, 0.07332061976194382, 0.08283227682113647, 0.09234394133090973, 0.10185560584068298, 0.11136726289987564, 0.1208789274096489, 0.13039058446884155, 0.1399022489786148, 0.14941391348838806, 0.15892556309700012, 0.16843722760677338, 0.17794887721538544, 0.1874605417251587, 0.19697219133377075, 0.206483855843544, 0.21599552035331726, 0.22550716996192932, 0.23501883447170258, 0.24453049898147583, 0.2540421485900879, 0.26355379819869995, 0.2730654776096344, 0.28257712721824646, 0.2920887768268585, 0.30160045623779297, 0.31111210584640503, 0.3206237554550171, 0.33013543486595154], "values": [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 3, 2, 3, 0, 0, 2, 2, 1, 2, 2, 0, 0, 4, 2, 3, 1, 2, 0, 1, 3, 2, 5, 1, 1, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], "_type": "histogram"}, "parameters/mlp_extractor.value_net.0.weight": {"_type": "histogram", "bins": [-0.40676596760749817, -0.39454707503318787, -0.3823281526565552, -0.3701092600822449, -0.3578903377056122, -0.3456714451313019, -0.3334525227546692, -0.3212336301803589, -0.3090147376060486, -0.2967958450317383, -0.2845769226551056, -0.2723580300807953, -0.2601391077041626, -0.2479202151298523, -0.2357013076543808, -0.2234824001789093, -0.2112634778022766, -0.19904457032680511, -0.18682566285133362, -0.17460677027702332, -0.16238784790039062, -0.15016895532608032, -0.13795004785060883, -0.12573114037513733, -0.11351224780082703, -0.10129334032535553, -0.08907443284988403, -0.07685553282499313, -0.06463662534952164, -0.05241771787405014, -0.04019881784915924, -0.027979910373687744, -0.015760958194732666, -0.0035420525819063187, 0.008676853030920029, 0.020895756781101227, 0.03311466425657272, 0.04533357173204422, 0.05755247175693512, 0.06977137923240662, 0.0819903016090393, 0.0942092090845108, 0.1064281165599823, 0.1186470165848732, 0.1308659315109253, 0.1430848240852356, 0.1553037315607071, 0.1675226390361786, 0.1797415316104889, 0.1919604390859604, 0.20417934656143188, 0.2163982391357422, 0.22861716151237488, 0.24083605408668518, 0.25305497646331787, 0.2652738690376282, 0.2774927616119385, 0.2897116541862488, 0.30193057656288147, 0.3141494691371918, 0.32636839151382446, 0.33858728408813477, 0.35080617666244507, 0.36302509903907776, 0.37524402141571045], "values": [1, 0, 0, 0, 0, 0, 1, 1, 3, 6, 5, 10, 21, 13, 29, 35, 57, 82, 108, 162, 186, 210, 303, 353, 415, 488, 585, 651, 755, 769, 878, 881, 895, 932, 869, 838, 797, 741, 701, 601, 561, 512, 404, 332, 282, 241, 195, 126, 109, 77, 65, 35, 14, 14, 6, 8, 8, 4, 4, 0, 3, 1, 0, 1]}, "parameters/features_extractor.network.7.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/action_net.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/value_net.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "avg10_actual_score": -639.3947141828313, "parameters/mlp_extractor.policy_net.0.weight": {"values": [5, 4, 2, 4, 5, 10, 15, 16, 17, 26, 42, 59, 60, 82, 126, 149, 170, 194, 227, 254, 290, 372, 437, 484, 551, 548, 599, 694, 632, 684, 714, 699, 761, 702, 742, 661, 659, 597, 554, 508, 463, 411, 370, 324, 278, 231, 185, 174, 130, 121, 81, 71, 54, 39, 33, 21, 14, 7, 6, 5, 4, 4, 0, 3], "bins": [-0.31839415431022644, -0.3084770441055298, -0.2985599637031555, -0.28864285349845886, -0.2787257730960846, -0.26880866289138794, -0.25889158248901367, -0.24897447228431702, -0.23905739188194275, -0.2291402965784073, -0.21922320127487183, -0.20930610597133636, -0.1993890106678009, -0.18947191536426544, -0.17955482006072998, -0.16963770985603333, -0.15972061455249786, -0.1498035192489624, -0.13988642394542694, -0.12996932864189148, -0.12005223333835602, -0.11013513803482056, -0.1002180352807045, -0.09030093997716904, -0.08038383722305298, -0.07046674191951752, -0.060549646615982056, -0.050632547587156296, -0.040715452283620834, -0.030798356980085373, -0.020881257951259613, -0.010964162647724152, -0.0010470747947692871, 0.008870021440088749, 0.018787117674946785, 0.028704214841127396, 0.03862131014466286, 0.04853840544819832, 0.05845550447702408, 0.06837259978055954, 0.0782896876335144, 0.08820678293704987, 0.09812387824058533, 0.10804097354412079, 0.11795806884765625, 0.1278751641511917, 0.13779225945472717, 0.14770936965942383, 0.1576264649629593, 0.16754356026649475, 0.1774606555700302, 0.18737775087356567, 0.19729484617710114, 0.2072119414806366, 0.21712905168533325, 0.22704613208770752, 0.23696324229240417, 0.24688033759593964, 0.2567974328994751, 0.26671454310417175, 0.276631623506546, 0.2865487337112427, 0.29646581411361694, 0.3063829243183136, 0.31630000472068787], "_type": "histogram"}, "Checkpoint reached": 0, "parameters/features_extractor.network.7.weight": {"_type": "histogram", "bins": [-0.13047969341278076, -0.12640973925590515, -0.12233978509902954, -0.11826983839273453, -0.11419988423585892, -0.1101299300789833, -0.1060599833726883, -0.10199002921581268, -0.09792007505893707, -0.09385012090206146, -0.08978016674518585, -0.08571022003889084, -0.08164026588201523, -0.07757031172513962, -0.0735003650188446, -0.069430410861969, -0.06536045670509338, -0.06129050254821777, -0.05722055211663246, -0.05315060168504715, -0.04908064752817154, -0.04501069337129593, -0.04094074293971062, -0.036870792508125305, -0.032800838351249695, -0.028730886057019234, -0.024660933762788773, -0.02059098146855831, -0.01652102917432785, -0.01245107688009739, -0.008381124585866928, -0.004311172291636467, -0.00024121999740600586, 0.0038287322968244553, 0.007898684591054916, 0.011968636885285378, 0.01603858917951584, 0.0201085414737463, 0.02417849376797676, 0.028248446062207222, 0.03231839835643768, 0.03638835251331329, 0.040458302944898605, 0.04452825337648392, 0.04859820753335953, 0.05266816169023514, 0.05673811212182045, 0.06080806255340576, 0.06487801671028137, 0.06894797086715698, 0.07301792502403259, 0.0770878717303276, 0.08115782588720322, 0.08522778004407883, 0.08929772675037384, 0.09336768090724945, 0.09743763506412506, 0.10150758922100067, 0.10557754337787628, 0.1096474900841713, 0.1137174442410469, 0.11778739839792252, 0.12185734510421753, 0.12592729926109314, 0.12999725341796875], "values": [1, 0, 0, 2, 2, 2, 12, 17, 45, 74, 126, 189, 392, 559, 969, 1415, 2218, 3321, 4755, 6584, 9174, 12229, 15707, 19936, 24701, 29464, 34802, 39327, 43656, 47311, 49919, 51043, 51504, 50200, 47891, 43952, 40023, 35069, 30117, 25420, 20564, 16027, 12574, 9689, 6969, 4997, 3468, 2400, 1545, 997, 573, 373, 213, 143, 72, 44, 17, 11, 6, 4, 1, 0, 0, 1]}, "parameters/features_extractor.network.2.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "highest_speed": 55.19055704724551, "largest_steps": 102, "Episode reward": -32, "parameters/mlp_extractor.policy_net.2.weight": {"values": [1, 0, 0, 1, 3, 2, 3, 8, 11, 8, 11, 20, 21, 34, 28, 36, 54, 50, 61, 95, 95, 95, 94, 106, 136, 145, 157, 175, 161, 157, 169, 169, 191, 163, 174, 143, 159, 145, 150, 104, 121, 109, 81, 74, 75, 47, 41, 43, 34, 21, 33, 20, 19, 9, 13, 7, 3, 4, 2, 2, 1, 0, 0, 2], "_type": "histogram", "bins": [-0.6038561463356018, -0.5848402380943298, -0.5658243894577026, -0.5468084812164307, -0.5277926325798035, -0.5087767243385315, -0.4897608458995819, -0.4707449674606323, -0.45172908902168274, -0.43271321058273315, -0.41369733214378357, -0.394681453704834, -0.375665545463562, -0.3566496968269348, -0.33763378858566284, -0.31861791014671326, -0.29960203170776367, -0.2805861532688141, -0.2615702748298645, -0.24255438148975372, -0.22353850305080414, -0.20452262461185455, -0.18550673127174377, -0.1664908528327942, -0.1474749743938446, -0.12845909595489502, -0.10944321006536484, -0.09042732417583466, -0.07141144573688507, -0.052395567297935486, -0.033379681408405304, -0.014363795518875122, 0.004652082920074463, 0.023667965084314346, 0.04268384724855423, 0.06169972941279411, 0.080715611577034, 0.09973149001598358, 0.11874737590551376, 0.13776326179504395, 0.15677914023399353, 0.17579501867294312, 0.1948108971118927, 0.21382679045200348, 0.23284266889095306, 0.25185853242874146, 0.2708744406700134, 0.289890319108963, 0.3089061975479126, 0.3279220759868622, 0.34693795442581177, 0.36595383286476135, 0.38496971130371094, 0.4039856195449829, 0.4230014979839325, 0.4420173764228821, 0.46103325486183167, 0.48004913330078125, 0.49906501173973083, 0.5180808901786804, 0.5370967984199524, 0.5561126470565796, 0.5751285552978516, 0.5941444635391235, 0.6131603121757507]}, "_timestamp": 1651744802, "parameters/action_net.weight": {"_type": "histogram", "values": [1, 0, 0, 1, 0, 0, 0, 3, 0, 1, 3, 2, 2, 3, 5, 7, 7, 7, 8, 9, 15, 15, 16, 14, 21, 21, 22, 25, 24, 29, 19, 26, 39, 33, 38, 28, 27, 31, 36, 24, 29, 21, 22, 20, 19, 16, 14, 10, 14, 6, 3, 6, 1, 5, 8, 1, 2, 1, 3, 2, 0, 0, 1, 2], "bins": [-0.004265394527465105, -0.00413862569257617, -0.004011856857687235, -0.0038850880227983, -0.0037583191879093647, -0.0036315503530204296, -0.0035047815181314945, -0.0033780126832425594, -0.0032512438483536243, -0.0031244750134646893, -0.002997706178575754, -0.002870937343686819, -0.002744168508797884, -0.002617399673908949, -0.002490630839020014, -0.0023638620041310787, -0.0022370931692421436, -0.0021103243343532085, -0.0019835554994642735, -0.0018567866645753384, -0.0017300178296864033, -0.0016032489947974682, -0.001476480159908533, -0.001349711325019598, -0.001222942490130663, -0.0010961736552417278, -0.0009694048203527927, -0.0008426359854638577, -0.0007158671505749226, -0.0005890983156859875, -0.0004623294807970524, -0.0003355606459081173, -0.0002087922766804695, -8.202344179153442e-05, 4.4745393097400665e-05, 0.00017151422798633575, 0.00029828306287527084, 0.00042505189776420593, 0.000551820732653141, 0.0006785895675420761, 0.0008053584024310112, 0.0009321272373199463, 0.0010588960722088814, 0.0011856649070978165, 0.0013124337419867516, 0.0014392025768756866, 0.0015659714117646217, 0.0016927402466535568, 0.001819509081542492, 0.001946277916431427, 0.002073046751320362, 0.002199815586209297, 0.0023265844210982323, 0.0024533532559871674, 0.0025801220908761024, 0.0027068909257650375, 0.0028336597606539726, 0.0029604285955429077, 0.003087197430431843, 0.003213966265320778, 0.003340735100209713, 0.003467503935098648, 0.003594272769987583, 0.0037210416048765182, 0.0038478104397654533]}, "_runtime": 2094}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_025803-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_025803-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..3231d5b
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_025803-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_132729-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_132729-Run 1/files/config.yaml
new file mode 100644
index 0000000..d6e8d44
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_132729-Run 1/files/config.yaml	
@@ -0,0 +1,291 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000001F02C6C8608>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 0
+_total_timesteps:
+  desc: null
+  value: 1000000
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651782450
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 13
+      - 14
+      - 16
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78DF6D38>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001EF78C02688>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001EF78C6BCA8>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 0
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000001EF78DD3748>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651740988.1926534
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 1
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_132729-Run 1/files/events.out.tfevents.1651782454.DESKTOP-014BV0C.12320.0 b/ROAR_gym/wandb/run-20220505_132729-Run 1/files/events.out.tfevents.1651782454.DESKTOP-014BV0C.12320.0
new file mode 120000
index 0000000..19f8f81
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_132729-Run 1/files/events.out.tfevents.1651782454.DESKTOP-014BV0C.12320.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 1/PPO_0/events.out.tfevents.1651782454.DESKTOP-014BV0C.12320.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_132729-Run 1/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_132729-Run 1/files/wandb-summary.json
new file mode 100644
index 0000000..532c730
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_132729-Run 1/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"parameters/action_net.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/features_extractor.network.2.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "parameters/features_extractor.network.4.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/log_std": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.policy_net.0.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "highest_speed": 0, "Episode reward": -184.5, "parameters/features_extractor.network.7.bias": {"values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.policy_net.0.weight": {"_type": "histogram", "values": [5, 4, 2, 4, 5, 10, 15, 16, 17, 26, 42, 59, 60, 82, 126, 149, 170, 194, 227, 254, 290, 372, 437, 484, 551, 548, 599, 694, 632, 684, 714, 699, 761, 702, 742, 661, 659, 597, 554, 508, 463, 411, 370, 324, 278, 231, 185, 174, 130, 121, 81, 71, 54, 39, 33, 21, 14, 7, 6, 5, 4, 4, 0, 3], "bins": [-0.31839415431022644, -0.3084770441055298, -0.2985599637031555, -0.28864285349845886, -0.2787257730960846, -0.26880866289138794, -0.25889158248901367, -0.24897447228431702, -0.23905739188194275, -0.2291402965784073, -0.21922320127487183, -0.20930610597133636, -0.1993890106678009, -0.18947191536426544, -0.17955482006072998, -0.16963770985603333, -0.15972061455249786, -0.1498035192489624, -0.13988642394542694, -0.12996932864189148, -0.12005223333835602, -0.11013513803482056, -0.1002180352807045, -0.09030093997716904, -0.08038383722305298, -0.07046674191951752, -0.060549646615982056, -0.050632547587156296, -0.040715452283620834, -0.030798356980085373, -0.020881257951259613, -0.010964162647724152, -0.0010470747947692871, 0.008870021440088749, 0.018787117674946785, 0.028704214841127396, 0.03862131014466286, 0.04853840544819832, 0.05845550447702408, 0.06837259978055954, 0.0782896876335144, 0.08820678293704987, 0.09812387824058533, 0.10804097354412079, 0.11795806884765625, 0.1278751641511917, 0.13779225945472717, 0.14770936965942383, 0.1576264649629593, 0.16754356026649475, 0.1774606555700302, 0.18737775087356567, 0.19729484617710114, 0.2072119414806366, 0.21712905168533325, 0.22704613208770752, 0.23696324229240417, 0.24688033759593964, 0.2567974328994751, 0.26671454310417175, 0.276631623506546, 0.2865487337112427, 0.29646581411361694, 0.3063829243183136, 0.31630000472068787]}, "Checkpoint reached": 30, "parameters/action_net.weight": {"_type": "histogram", "bins": [-0.004265394527465105, -0.00413862569257617, -0.004011856857687235, -0.0038850880227983, -0.0037583191879093647, -0.0036315503530204296, -0.0035047815181314945, -0.0033780126832425594, -0.0032512438483536243, -0.0031244750134646893, -0.002997706178575754, -0.002870937343686819, -0.002744168508797884, -0.002617399673908949, -0.002490630839020014, -0.0023638620041310787, -0.0022370931692421436, -0.0021103243343532085, -0.0019835554994642735, -0.0018567866645753384, -0.0017300178296864033, -0.0016032489947974682, -0.001476480159908533, -0.001349711325019598, -0.001222942490130663, -0.0010961736552417278, -0.0009694048203527927, -0.0008426359854638577, -0.0007158671505749226, -0.0005890983156859875, -0.0004623294807970524, -0.0003355606459081173, -0.0002087922766804695, -8.202344179153442e-05, 4.4745393097400665e-05, 0.00017151422798633575, 0.00029828306287527084, 0.00042505189776420593, 0.000551820732653141, 0.0006785895675420761, 0.0008053584024310112, 0.0009321272373199463, 0.0010588960722088814, 0.0011856649070978165, 0.0013124337419867516, 0.0014392025768756866, 0.0015659714117646217, 0.0016927402466535568, 0.001819509081542492, 0.001946277916431427, 0.002073046751320362, 0.002199815586209297, 0.0023265844210982323, 0.0024533532559871674, 0.0025801220908761024, 0.0027068909257650375, 0.0028336597606539726, 0.0029604285955429077, 0.003087197430431843, 0.003213966265320778, 0.003340735100209713, 0.003467503935098648, 0.003594272769987583, 0.0037210416048765182, 0.0038478104397654533], "values": [1, 0, 0, 1, 0, 0, 0, 3, 0, 1, 3, 2, 2, 3, 5, 7, 7, 7, 8, 9, 15, 15, 16, 14, 21, 21, 22, 25, 24, 29, 19, 26, 39, 33, 38, 28, 27, 31, 36, 24, 29, 21, 22, 20, 19, 16, 14, 10, 14, 6, 3, 6, 1, 5, 8, 1, 2, 1, 3, 2, 0, 0, 1, 2]}, "parameters/mlp_extractor.value_net.2.weight": {"values": [2, 2, 1, 3, 3, 7, 5, 9, 19, 17, 16, 15, 24, 27, 26, 45, 49, 48, 62, 76, 97, 106, 113, 106, 117, 153, 140, 144, 162, 169, 163, 169, 155, 136, 165, 164, 152, 140, 128, 126, 108, 112, 82, 87, 81, 56, 47, 54, 46, 26, 32, 21, 22, 18, 13, 5, 7, 2, 2, 3, 1, 5, 3, 2], "_type": "histogram", "bins": [-0.5733544826507568, -0.5554158687591553, -0.5374771952629089, -0.5195385217666626, -0.501599907875061, -0.4836612641811371, -0.46572262048721313, -0.4477839767932892, -0.42984533309936523, -0.4119066894054413, -0.39396804571151733, -0.3760294020175934, -0.35809075832366943, -0.3401521146297455, -0.32221347093582153, -0.3042748272418976, -0.28633618354797363, -0.2683975398540497, -0.25045889616012573, -0.23252025246620178, -0.21458160877227783, -0.19664296507835388, -0.17870432138442993, -0.16076567769050598, -0.14282703399658203, -0.12488839030265808, -0.10694974660873413, -0.08901110291481018, -0.07107245922088623, -0.05313381552696228, -0.03519517183303833, -0.01725652813911438, 0.0006821751594543457, 0.018620818853378296, 0.036559462547302246, 0.054498106241226196, 0.07243674993515015, 0.0903753936290741, 0.10831403732299805, 0.126252681016922, 0.14419132471084595, 0.1621299684047699, 0.18006861209869385, 0.1980072557926178, 0.21594589948654175, 0.2338845431804657, 0.25182318687438965, 0.2697618305683136, 0.28770047426223755, 0.3056391179561615, 0.32357776165008545, 0.3415164053440094, 0.35945504903793335, 0.3773936927318573, 0.39533233642578125, 0.4132709801197052, 0.43120962381362915, 0.4491482675075531, 0.46708691120147705, 0.485025554895401, 0.502964198589325, 0.5209028720855713, 0.5388414859771729, 0.5567800998687744, 0.5747187733650208]}, "largest_steps": 102, "_timestamp": 1651782474, "parameters/mlp_extractor.value_net.2.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "_runtime": 2092, "parameters/features_extractor.network.4.weight": {"_type": "histogram", "values": [1, 1, 2, 2, 6, 6, 11, 16, 28, 35, 58, 75, 113, 174, 203, 259, 308, 449, 542, 655, 770, 953, 1076, 1196, 1383, 1538, 1631, 1719, 1840, 1849, 1915, 1894, 1853, 1725, 1698, 1603, 1507, 1261, 1243, 1021, 841, 694, 583, 472, 397, 319, 262, 206, 135, 89, 87, 52, 45, 20, 13, 13, 5, 3, 3, 3, 1, 1, 0, 1], "bins": [-0.23557759821414948, -0.22792333364486694, -0.2202690839767456, -0.21261483430862427, -0.20496056973934174, -0.1973063051700592, -0.18965205550193787, -0.18199780583381653, -0.174343541264534, -0.16668927669525146, -0.15903502702713013, -0.1513807773590088, -0.14372651278972626, -0.13607224822044373, -0.1284179985523224, -0.12076374143362045, -0.11310948431491852, -0.10545522719621658, -0.09780097007751465, -0.09014671295881271, -0.08249245584011078, -0.07483819872140884, -0.06718394160270691, -0.059529684484004974, -0.05187542736530304, -0.044221170246601105, -0.03656691312789917, -0.028912656009197235, -0.0212583988904953, -0.013604141771793365, -0.005949884653091431, 0.0017043724656105042, 0.009358644485473633, 0.017012901604175568, 0.024667158722877502, 0.03232141584157944, 0.03997567296028137, 0.04762993007898331, 0.05528418719768524, 0.06293844431638718, 0.07059270143508911, 0.07824695855379105, 0.08590121567249298, 0.09355547279119492, 0.10120972990989685, 0.10886398702859879, 0.11651824414730072, 0.12417250126600266, 0.1318267583847046, 0.13948100805282593, 0.14713527262210846, 0.154789537191391, 0.16244378685951233, 0.17009803652763367, 0.1777523010969162, 0.18540656566619873, 0.19306081533432007, 0.2007150650024414, 0.20836932957172394, 0.21602359414100647, 0.2236778438091278, 0.23133209347724915, 0.23898635804653168, 0.2466406226158142, 0.25429487228393555]}, "parameters/mlp_extractor.value_net.0.weight": {"values": [1, 0, 0, 0, 0, 0, 1, 1, 3, 6, 5, 10, 21, 13, 29, 35, 57, 82, 108, 162, 186, 210, 303, 353, 415, 488, 585, 651, 755, 769, 878, 881, 895, 932, 869, 838, 797, 741, 701, 601, 561, 512, 404, 332, 282, 241, 195, 126, 109, 77, 65, 35, 14, 14, 6, 8, 8, 4, 4, 0, 3, 1, 0, 1], "_type": "histogram", "bins": [-0.40676596760749817, -0.39454707503318787, -0.3823281526565552, -0.3701092600822449, -0.3578903377056122, -0.3456714451313019, -0.3334525227546692, -0.3212336301803589, -0.3090147376060486, -0.2967958450317383, -0.2845769226551056, -0.2723580300807953, -0.2601391077041626, -0.2479202151298523, -0.2357013076543808, -0.2234824001789093, -0.2112634778022766, -0.19904457032680511, -0.18682566285133362, -0.17460677027702332, -0.16238784790039062, -0.15016895532608032, -0.13795004785060883, -0.12573114037513733, -0.11351224780082703, -0.10129334032535553, -0.08907443284988403, -0.07685553282499313, -0.06463662534952164, -0.05241771787405014, -0.04019881784915924, -0.027979910373687744, -0.015760958194732666, -0.0035420525819063187, 0.008676853030920029, 0.020895756781101227, 0.03311466425657272, 0.04533357173204422, 0.05755247175693512, 0.06977137923240662, 0.0819903016090393, 0.0942092090845108, 0.1064281165599823, 0.1186470165848732, 0.1308659315109253, 0.1430848240852356, 0.1553037315607071, 0.1675226390361786, 0.1797415316104889, 0.1919604390859604, 0.20417934656143188, 0.2163982391357422, 0.22861716151237488, 0.24083605408668518, 0.25305497646331787, 0.2652738690376282, 0.2774927616119385, 0.2897116541862488, 0.30193057656288147, 0.3141494691371918, 0.32636839151382446, 0.33858728408813477, 0.35080617666244507, 0.36302509903907776, 0.37524402141571045]}, "avg10_score": -189.0, "parameters/value_net.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/value_net.weight": {"bins": [-0.27861079573631287, -0.2690991461277008, -0.25958746671676636, -0.2500758171081543, -0.24056415259838104, -0.2310524880886078, -0.22154083847999573, -0.21202917397022247, -0.20251750946044922, -0.19300584495067596, -0.1834941953420639, -0.17398253083229065, -0.1644708663225174, -0.15495920181274414, -0.14544755220413208, -0.13593588769435883, -0.12642423808574677, -0.11691258102655411, -0.10740091651678085, -0.0978892594575882, -0.08837759494781494, -0.07886593788862228, -0.06935428082942963, -0.05984261631965637, -0.05033096671104431, -0.040819305926561356, -0.0313076451420784, -0.021795988082885742, -0.012284327298402786, -0.0027726665139198303, 0.006738990545272827, 0.01625065505504608, 0.025762319564819336, 0.03527398034930229, 0.04478564113378525, 0.054297298192977905, 0.06380896270275116, 0.07332061976194382, 0.08283227682113647, 0.09234394133090973, 0.10185560584068298, 0.11136726289987564, 0.1208789274096489, 0.13039058446884155, 0.1399022489786148, 0.14941391348838806, 0.15892556309700012, 0.16843722760677338, 0.17794887721538544, 0.1874605417251587, 0.19697219133377075, 0.206483855843544, 0.21599552035331726, 0.22550716996192932, 0.23501883447170258, 0.24453049898147583, 0.2540421485900879, 0.26355379819869995, 0.2730654776096344, 0.28257712721824646, 0.2920887768268585, 0.30160045623779297, 0.31111210584640503, 0.3206237554550171, 0.33013543486595154], "values": [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 3, 2, 3, 0, 0, 2, 2, 1, 2, 2, 0, 0, 4, 2, 3, 1, 2, 0, 1, 3, 2, 5, 1, 1, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], "_type": "histogram"}, "parameters/features_extractor.network.2.weight": {"_type": "histogram", "bins": [-0.2457638382911682, -0.23838646709918976, -0.2310090959072113, -0.22363172471523285, -0.2162543535232544, -0.20887698233127594, -0.20149961113929749, -0.19412222504615784, -0.18674486875534058, -0.17936749756336212, -0.17199012637138367, -0.1646127551794052, -0.15723538398742676, -0.1498580127954483, -0.14248064160346985, -0.1351032555103302, -0.12772588431835175, -0.12034851312637329, -0.11297114193439484, -0.10559377074241638, -0.09821639955043793, -0.09083902835845947, -0.08346164971590042, -0.07608427852392197, -0.06870689988136292, -0.06132952868938446, -0.053952157497406006, -0.04657478258013725, -0.0391974113881588, -0.031820040196180344, -0.02444266527891159, -0.017065294086933136, -0.009687945246696472, -0.002310573123395443, 0.005066798999905586, 0.01244417205452919, 0.019821543246507645, 0.0271989144384861, 0.03457628935575485, 0.04195366054773331, 0.049331024289131165, 0.05670839548110962, 0.06408576667308807, 0.07146313786506653, 0.07884050905704498, 0.08621788024902344, 0.09359525889158249, 0.10097263008356094, 0.10835000872612, 0.11572737991809845, 0.1231047511100769, 0.13048212230205536, 0.1378594934940338, 0.14523686468601227, 0.15261423587799072, 0.15999162197113037, 0.16736897826194763, 0.1747463494539261, 0.18212372064590454, 0.189501091837883, 0.19687846302986145, 0.2042558342218399, 0.21163320541381836, 0.219010591506958, 0.22638796269893646], "values": [1, 1, 1, 0, 3, 10, 11, 5, 15, 39, 30, 75, 70, 94, 136, 159, 207, 253, 327, 416, 485, 610, 666, 831, 882, 981, 1078, 1202, 1353, 1395, 1446, 1504, 1502, 1575, 1579, 1532, 1466, 1323, 1215, 1191, 1061, 971, 794, 761, 644, 567, 467, 386, 353, 268, 210, 163, 119, 95, 65, 55, 44, 23, 15, 14, 7, 6, 4, 7]}, "avg10_checkpoints": 60.0, "_step": 10292, "highest_actual_score": -1000.0, "parameters/mlp_extractor.policy_net.2.bias": {"bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "_type": "histogram"}, "parameters/features_extractor.network.0.weight": {"_type": "histogram", "bins": [-0.24734584987163544, -0.2401829957962036, -0.2330201417207718, -0.22585728764533997, -0.21869444847106934, -0.2115315943956375, -0.2043687403202057, -0.19720588624477386, -0.19004303216934204, -0.18288017809391022, -0.1757173240184784, -0.16855448484420776, -0.16139163076877594, -0.15422877669334412, -0.1470659226179123, -0.13990306854248047, -0.13274022936820984, -0.12557737529277802, -0.11841452866792679, -0.11125167459249496, -0.10408882796764374, -0.09692597389221191, -0.08976311981678009, -0.08260026574134827, -0.07543741166591644, -0.06827455759048462, -0.06111171096563339, -0.05394885689020157, -0.04678600654006004, -0.03962315618991852, -0.032460302114486694, -0.02529745176434517, -0.018134593963623047, -0.010971742682158947, -0.003808891400694847, 0.0033539608120918274, 0.010516811162233353, 0.017679661512374878, 0.0248425155878067, 0.03200536593794823, 0.039168208837509155, 0.04633105918765068, 0.053493909537792206, 0.06065676361322403, 0.06781961023807526, 0.07498246431350708, 0.0821453183889389, 0.08930817246437073, 0.09647102653980255, 0.10363388061523438, 0.1107967272400856, 0.11795958131551743, 0.12512242794036865, 0.13228528201580048, 0.1394481360912323, 0.14661099016666412, 0.15377384424209595, 0.16093669831752777, 0.1680995523929596, 0.17526239156723022, 0.18242524564266205, 0.18958809971809387, 0.1967509537935257, 0.20391380786895752, 0.21107664704322815], "values": [1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 5, 8, 8, 15, 18, 42, 60, 91, 116, 155, 175, 277, 336, 407, 538, 605, 672, 852, 952, 1103, 1177, 1251, 1330, 1344, 1420, 1347, 1311, 1220, 1191, 1065, 984, 871, 756, 656, 516, 389, 309, 244, 220, 166, 104, 83, 63, 43, 29, 21, 10, 7, 0, 6, 0, 2, 0, 1]}, "parameters/mlp_extractor.policy_net.2.weight": {"_type": "histogram", "bins": [-0.6038561463356018, -0.5848402380943298, -0.5658243894577026, -0.5468084812164307, -0.5277926325798035, -0.5087767243385315, -0.4897608458995819, -0.4707449674606323, -0.45172908902168274, -0.43271321058273315, -0.41369733214378357, -0.394681453704834, -0.375665545463562, -0.3566496968269348, -0.33763378858566284, -0.31861791014671326, -0.29960203170776367, -0.2805861532688141, -0.2615702748298645, -0.24255438148975372, -0.22353850305080414, -0.20452262461185455, -0.18550673127174377, -0.1664908528327942, -0.1474749743938446, -0.12845909595489502, -0.10944321006536484, -0.09042732417583466, -0.07141144573688507, -0.052395567297935486, -0.033379681408405304, -0.014363795518875122, 0.004652082920074463, 0.023667965084314346, 0.04268384724855423, 0.06169972941279411, 0.080715611577034, 0.09973149001598358, 0.11874737590551376, 0.13776326179504395, 0.15677914023399353, 0.17579501867294312, 0.1948108971118927, 0.21382679045200348, 0.23284266889095306, 0.25185853242874146, 0.2708744406700134, 0.289890319108963, 0.3089061975479126, 0.3279220759868622, 0.34693795442581177, 0.36595383286476135, 0.38496971130371094, 0.4039856195449829, 0.4230014979839325, 0.4420173764228821, 0.46103325486183167, 0.48004913330078125, 0.49906501173973083, 0.5180808901786804, 0.5370967984199524, 0.5561126470565796, 0.5751285552978516, 0.5941444635391235, 0.6131603121757507], "values": [1, 0, 0, 1, 3, 2, 3, 8, 11, 8, 11, 20, 21, 34, 28, 36, 54, 50, 61, 95, 95, 95, 94, 106, 136, 145, 157, 175, 161, 157, 169, 169, 191, 163, 174, 143, 159, 145, 150, 104, 121, 109, 81, 74, 75, 47, 41, 43, 34, 21, 33, 20, 19, 9, 13, 7, 3, 4, 2, 2, 1, 0, 0, 2]}, "parameters/features_extractor.network.7.weight": {"bins": [-0.13047969341278076, -0.12640973925590515, -0.12233978509902954, -0.11826983839273453, -0.11419988423585892, -0.1101299300789833, -0.1060599833726883, -0.10199002921581268, -0.09792007505893707, -0.09385012090206146, -0.08978016674518585, -0.08571022003889084, -0.08164026588201523, -0.07757031172513962, -0.0735003650188446, -0.069430410861969, -0.06536045670509338, -0.06129050254821777, -0.05722055211663246, -0.05315060168504715, -0.04908064752817154, -0.04501069337129593, -0.04094074293971062, -0.036870792508125305, -0.032800838351249695, -0.028730886057019234, -0.024660933762788773, -0.02059098146855831, -0.01652102917432785, -0.01245107688009739, -0.008381124585866928, -0.004311172291636467, -0.00024121999740600586, 0.0038287322968244553, 0.007898684591054916, 0.011968636885285378, 0.01603858917951584, 0.0201085414737463, 0.02417849376797676, 0.028248446062207222, 0.03231839835643768, 0.03638835251331329, 0.040458302944898605, 0.04452825337648392, 0.04859820753335953, 0.05266816169023514, 0.05673811212182045, 0.06080806255340576, 0.06487801671028137, 0.06894797086715698, 0.07301792502403259, 0.0770878717303276, 0.08115782588720322, 0.08522778004407883, 0.08929772675037384, 0.09336768090724945, 0.09743763506412506, 0.10150758922100067, 0.10557754337787628, 0.1096474900841713, 0.1137174442410469, 0.11778739839792252, 0.12185734510421753, 0.12592729926109314, 0.12999725341796875], "_type": "histogram", "values": [1, 0, 0, 2, 2, 2, 12, 17, 45, 74, 126, 189, 392, 559, 969, 1415, 2218, 3321, 4755, 6584, 9174, 12229, 15707, 19936, 24701, 29464, 34802, 39327, 43656, 47311, 49919, 51043, 51504, 50200, 47891, 43952, 40023, 35069, 30117, 25420, 20564, 16027, 12574, 9689, 6969, 4997, 3468, 2400, 1545, 997, 573, 373, 213, 143, 72, 44, 17, 11, 6, 4, 1, 0, 0, 1]}, "parameters/features_extractor.network.0.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.value_net.0.bias": {"_type": "histogram", "bins": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "avg10_actual_score": -117.76921039623782, "Episode actual reward": -291.9170925207551}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_132729-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_132729-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..96a04c2
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_132729-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_133236-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_133236-Run 1/files/config.yaml
new file mode 100644
index 0000000..9baded6
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_133236-Run 1/files/config.yaml	
@@ -0,0 +1,44 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651782756
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 13
+      - 14
+      - 16
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+policy_type:
+  desc: null
+  value: CnnPolicy
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
diff --git a/ROAR_gym/wandb/run-20220505_133236-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_133236-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..9738b65
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_133236-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_133421-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_133421-Run 1/files/config.yaml
new file mode 100644
index 0000000..059ef03
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_133421-Run 1/files/config.yaml	
@@ -0,0 +1,44 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651782861
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 13
+      - 14
+      - 16
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+policy_type:
+  desc: null
+  value: CnnPolicy
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
diff --git a/ROAR_gym/wandb/run-20220505_133421-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_133421-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..34760e7
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_133421-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_133854-Run 1/files/config.yaml b/ROAR_gym/wandb/run-20220505_133854-Run 1/files/config.yaml
new file mode 100644
index 0000000..7d16ce8
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_133854-Run 1/files/config.yaml	
@@ -0,0 +1,44 @@
+wandb_version: 1
+
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651783134
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 13
+      - 14
+      - 16
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+policy_type:
+  desc: null
+  value: CnnPolicy
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
diff --git a/ROAR_gym/wandb/run-20220505_133854-Run 1/run-Run 1.wandb b/ROAR_gym/wandb/run-20220505_133854-Run 1/run-Run 1.wandb
new file mode 100644
index 0000000..eff6b1d
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_133854-Run 1/run-Run 1.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/code/ROAR_gym/e2eModel.py b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/code/ROAR_gym/e2eModel.py
new file mode 100644
index 0000000..63c342a
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/code/ROAR_gym/e2eModel.py	
@@ -0,0 +1,350 @@
+"""
+IMPORTANT
+IF YOU HAVE NOT RUN THIS FILE AS 'ADMIN' (OR OPENED PYCHARM AS 'ADMIN')
+STOP AND RESTART WITH ADMIN PRIVILEGES
+
+TODO: Before Running this file make the following changes:
+1. Add the following line:
+    self._last_obs = np.nan_to_num(self._last_obs)
+
+to the following file:
+    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+
+2. Add this line after line 167 such that:
+with th.no_grad():
+    # Convert to pytorch tensor or to TensorDict
+    self._last_obs = np.nan_to_num(self._last_obs)
+    obs_tensor = obs_as_tensor(self._last_obs, self.device)
+    actions, values, log_probs = self.policy.forward(obs_tensor)
+
+3. Add:
+
+        data.pop('_last_obs')
+
+    in  line 652 of base_class.py for sb3
+    possible location of file: \envs\ROAR\Lib\site-packages\stable_baselines3\common\base_class.py
+
+4. Change for on_policy_algorithm.py, in function collect_rollouts add:
+
+        self.env.reset()
+
+    before the following while loop:
+
+        while n_steps < n_rollout_steps:
+"""
+
+# IMPORTS
+# imports for logs and warnings
+import warnings
+import logging
+
+from typing import Optional, Dict
+
+# imports for weights and biases integration
+import wandb
+from wandb.integration.sb3 import WandbCallback
+
+# imports for file path handling
+import os
+import sys
+from pathlib import Path
+
+# imports for reading and writing json config files
+import json
+
+# imports from the ROAR module
+from ROAR_Sim.configurations.configuration import Configuration as CarlaConfig
+from ROAR.configurations.configuration import Configuration as AgentConfig
+from ROAR.agent_module.agent import Agent
+from ROAR.agent_module.rl_e2e_ppo_agent import RLe2ePPOAgent
+from ROAR.agent_module.forward_only_agent import ForwardOnlyAgent   # testing stuff
+
+# imports for reinforcement learning
+import gym
+import torch as th
+from stable_baselines3.ppo.ppo import PPO
+from stable_baselines3.ppo.policies import CnnPolicy
+from stable_baselines3.common.callbacks import CheckpointCallback, EveryNTimesteps, CallbackList, BaseCallback
+from stable_baselines3.common.monitor import Monitor
+from stable_baselines3.common.vec_env import DummyVecEnv, VecVideoRecorder
+
+
+# imports for helper functions and torch cnn models
+from ppo_util import find_latest_model, CustomMaxPoolCNN, Atari_PPO_Adapted_CNN
+
+sys.path.append(Path(os.getcwd()).parent.as_posix())
+
+# imports from config files
+from configurations.ppo_configuration import PPO_params, misc_params, wandb_saves
+agent_config = AgentConfig.parse_file(Path("configurations/agent_configuration.json"))
+carla_config = CarlaConfig.parse_file(Path("configurations/carla_configuration.json"))
+
+# Setup for the loggers
+logging.getLogger("tensorflow").setLevel(logging.ERROR)
+logging.getLogger("numpy").setLevel(logging.ERROR)
+warnings.filterwarnings('ignore')
+try:
+    from ROAR_Gym.envs.roar_env import LoggingCallback
+except:
+    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+
+# os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+#  Parameters & Constants
+CUDA_VISIBLE_DEVICES = 1
+RUN_FPS = misc_params["run_fps"]
+MODEL_DIR = misc_params["model_directory"]
+WANDB_CONFIG_DIR = "configurations/wandb_configuration.json"
+
+
+def json_read_write(file, load_var=None, mode='r'):
+    """
+
+    Args:
+        file: address of json file to be loaded
+        load_var: variable to be written to, or read from
+        mode: 'r' to read from json, 'w' to write to json
+
+    Returns:
+        load_var: variable with data that has been read in mode 'r'
+                  original variable in case of 'w'
+
+    """
+    if mode == 'r':
+        with open(file, mode) as json_file:
+            load_var = json.load(json_file)  # Reading the file
+            print(f"{file} json config read successful")
+            json_file.close()
+            return load_var
+    elif mode == 'w':
+        assert load_var is not None, "load_var was None"
+        with open(file, mode) as json_file:
+            json.dump(load_var, json_file)  # Writing to the file
+            print(f"{file} json config write successful")
+            json_file.close()
+            return load_var
+    else:
+        assert mode == 'w' or 'r', f"unsupported mode type: {mode}"
+        return None
+
+# TODO track previously used run IDs
+def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_random_id=False):
+
+    wandb_config = json_read_write(
+        file=WANDB_CONFIG_DIR,
+        mode='r',
+    )
+
+    if load is True:
+        # Load run_id from the config file
+        run_id = wandb_config["run_id"]
+        assert run_id != "", "Run ID not set even though previous run exists"
+    else:
+        # Create wandb run id
+        if requested_run_id is not None:
+            run_id = requested_run_id
+        else:
+            assert use_random_id is True, "RUN ID NOT SET FOR NEW RUN"
+            run_id = wandb.util.generate_id()
+
+        # Store run_id to wandb_configuration file
+        wandb_config["run_id"] = run_id
+        wandb_config = json_read_write(
+            file=WANDB_CONFIG_DIR,
+            load_var=wandb_config,
+            mode='w',
+        )
+
+    # Create a wandb run variable
+    wandb.tensorboard.patch(
+        # tensorboardX=False,
+        pytorch=True,
+    )
+    run = wandb.init(
+        project=wandb_config["project_name"],
+        entity=wandb_config["entity"],  # Change to whoever wants to log the data
+        config=wandb_hp_config,
+        # sync_tensorboard=True,  # auto-upload sb3's tensorboard metrics
+        save_code=True,  # Allows us to check diff of code between runs
+        resume="allow",
+        # magic=True,
+        id=run_id,
+        name=run_id,
+        #monitor_gym=True,  # auto-upload the videos of agents playing the game,
+    )
+
+    return run
+
+
+class Tensorboard_Faster_Logger(BaseCallback):
+    """
+    Callback for saving a model (the check is done every ``check_freq`` steps)
+    based on the training reward (in practice, we recommend using ``EvalCallback``).
+
+    :param check_freq:
+    :param log_dir: Path to the folder where the model will be saved.
+      It must contains the file created by the ``Monitor`` wrapper.
+    :param verbose: Verbosity level.
+    """
+    def __init__(self, check_freq: int, verbose: int = 1):
+        super(Tensorboard_Faster_Logger, self).__init__(verbose)
+        self.check_freq = check_freq
+
+    # def _init_callback(self) -> None:
+
+    def _on_step(self) -> bool:
+        if self.n_calls % self.check_freq == 0:
+            self.logger.dump(self.num_timesteps)
+        return True
+
+
+def main(pass_num):
+    # Create the gym environment using the configs
+    env = gym.make(
+        id=misc_params["env_name"],
+        params={
+            "agent_config": agent_config,
+            "carla_config": carla_config,
+            "ego_agent_class": RLe2ePPOAgent,
+        }
+    )
+    #print(th.cuda.is_available())
+
+    # Setting the feature extract or based on the environment mode
+    if env.mode == 'baseline':
+        policy_kwargs = dict(
+            features_extractor_class=Atari_PPO_Adapted_CNN,
+            features_extractor_kwargs=dict(features_dim=256)
+        )
+    else:
+        policy_kwargs = dict(
+            features_extractor_class=CustomMaxPoolCNN,
+            features_extractor_kwargs=dict(features_dim=256)
+        )
+
+    # training kwargs for PPO init
+    training_kwargs = PPO_params
+
+    # wandb config for current run hyper-parameters
+    wandb_hp_config = {
+        "policy_type": "CnnPolicy",
+        "env_name": misc_params["env_name"],
+        "training_kwargs": training_kwargs,
+    }
+
+    # Try to find latest model path if we have trained previously
+    latest_model_path = find_latest_model(MODEL_DIR)
+    # FIXME wandb may continue old run if the run crashes before it is logged
+    if latest_model_path is None:
+        # Create new wandb run
+        run = wandb_run_init(
+            wandb_hp_config,
+            load=False,
+            requested_run_id=misc_params["run_name"],
+        )
+
+        # Create model with tensorboard log
+        model = PPO(
+            CnnPolicy,
+            env=env,
+            policy_kwargs=policy_kwargs,
+            tensorboard_log=f"runs/{run.name}",  # TODO add "tensorboard" to logdir name
+            **training_kwargs
+        )
+
+        print(f"Starting new run {run.id}")
+    else:
+        # Load wandb run <-- TODO: What has been stored?
+        run = wandb_run_init(
+            wandb_hp_config,
+            load=True,
+        )
+
+        # Load the model <-- TODO: redirect to new location.
+        model = PPO.load(
+            latest_model_path,
+            env=env,
+            policy_kwargs=policy_kwargs,
+            tensorboard_log=f"runs/{run.name}",  # TODO add "tensorboard" to logdir name
+            **training_kwargs,
+        )
+
+        print(f"Loading old run {run.id}")
+
+    print("Model Loaded Successfully")
+
+    # Defining Callback Functions
+
+    logging_callback = LoggingCallback(model=model)
+
+    faster_Logging_Callback = Tensorboard_Faster_Logger(check_freq=wandb_saves["model_save_freq"])
+
+    checkpoint_callback = CheckpointCallback(
+        save_freq=wandb_saves["model_save_freq"],
+        verbose=2,
+        save_path=(MODEL_DIR / "logs").as_posix()
+    )
+
+    event_callback = EveryNTimesteps(
+        n_steps=wandb_saves["model_save_freq"],
+        callback=checkpoint_callback
+    )
+
+    wandb_callback = WandbCallback( # metadata: path, etc.
+        verbose=2,
+        model_save_path=f"models/{run.id}",
+        gradient_save_freq=PPO_params["n_steps"],
+        model_save_freq=wandb_saves["model_save_freq"],
+    )
+
+    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+        wandb_callback,
+        checkpoint_callback,
+        event_callback,
+        logging_callback
+        # faster_Logging_Callback
+    ])
+
+    # Begin learning
+    model = model.learn(
+        total_timesteps=misc_params["total_timesteps"],
+        callback=callbacks,
+        reset_num_timesteps=False,
+        # tb_log_name=wandb_config["run_id"],
+    )
+
+    # Save Model
+    model.save(MODEL_DIR / f"roar_e2e_model_{pass_num}")  # TODO fix naming convention
+    print("Successful Save!")
+    # # Finish wandb run
+    # run.finish()
+
+if __name__ == '__main__':
+    logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
+                        datefmt="%H:%M:%S", level=logging.INFO)
+    logging.getLogger("Controller").setLevel(logging.ERROR)
+    logging.getLogger("SimplePathFollowingLocalPlanner").setLevel(logging.ERROR)
+    i=0
+    while True:
+        main(i)
+        i += 1
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/conda-environment.yaml b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/conda-environment.yaml
new file mode 100644
index 0000000..e69de29
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/config.yaml b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/config.yaml
new file mode 100644
index 0000000..884081c
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/config.yaml	
@@ -0,0 +1,340 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000002C81B763C88>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 9178
+_total_timesteps:
+  desc: null
+  value: 1009178
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651783274
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 3
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000002C81B774798>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0.0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000002C803826C08>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: 'deque([{''r'': -321.5, ''l'': 86, ''t'': 14.630985}, {''r'': -329.75, ''l'':
+    89, ''t'': 26.733723}, {''r'': -428.75, ''l'': 60, ''t'': 34.895036}, {''r'':
+    -289.25, ''l'': 77, ''t'': 45.507071}, {''r'': -253.0, ''l'': 67, ''t'': 54.585569},
+    {''r'': -447.0, ''l'': 66, ''t'': 63.455285}, {''r'': -473.25, ''l'': 73, ''t'':
+    73.671977}, {''r'': -811.5, ''l'': 170, ''t'': 94.978929}, {''r'': -313.5, ''l'':
+    84, ''t'': 106.115271}, {''r'': -569.25, ''l'': 101, ''t'': 120.139401}, {''r'':
+    -374.25, ''l'': 102, ''t'': 133.490993}, {''r'': -566.0, ''l'': 99, ''t'': 146.411725},
+    {''r'': -460.0, ''l'': 69, ''t'': 155.977911}, {''r'': -844.75, ''l'': 179, ''t'':
+    178.729965}, {''r'': -432.0, ''l'': 62, ''t'': 187.237033}, {''r'': -398.75, ''l'':
+    53, ''t'': 195.079395}, {''r'': -561.0, ''l'': 98, ''t'': 207.894246}, {''r'':
+    -580.25, ''l'': 104, ''t'': 221.602841}, {''r'': -701.25, ''l'': 138, ''t'': 239.508466},
+    {''r'': -566.0, ''l'': 99, ''t'': 252.598367}, {''r'': -553.0, ''l'': 96, ''t'':
+    265.374571}, {''r'': -453.0, ''l'': 67, ''t'': 275.030178}, {''r'': -523.5, ''l'':
+    87, ''t'': 286.655849}, {''r'': -488.25, ''l'': 77, ''t'': 297.096747}, {''r'':
+    -520.75, ''l'': 87, ''t'': 309.168294}, {''r'': -738.75, ''l'': 149, ''t'': 328.210766},
+    {''r'': -426.75, ''l'': 60, ''t'': 336.323419}, {''r'': -464.25, ''l'': 71, ''t'':
+    345.854625}, {''r'': -493.5, ''l'': 79, ''t'': 356.48982}, {''r'': -358.0, ''l'':
+    97, ''t'': 369.539576}, {''r'': -851.75, ''l'': 181, ''t'': 393.616576}, {''r'':
+    -499.5, ''l'': 81, ''t'': 404.60332}, {''r'': -618.5, ''l'': 114, ''t'': 419.780224},
+    {''r'': -560.0, ''l'': 98, ''t'': 433.346111}, {''r'': -269.25, ''l'': 72, ''t'':
+    443.058648}, {''r'': -376.5, ''l'': 46, ''t'': 449.897027}, {''r'': -540.75, ''l'':
+    92, ''t'': 462.195543}, {''r'': -614.5, ''l'': 113, ''t'': 476.962573}, {''r'':
+    -484.25, ''l'': 76, ''t'': 487.556525}, {''r'': -527.75, ''l'': 89, ''t'': 522.525194},
+    {''r'': -289.25, ''l'': 77, ''t'': 543.980543}, {''r'': -479.25, ''l'': 75, ''t'':
+    563.592634}, {''r'': -491.25, ''l'': 78, ''t'': 583.823042}, {''r'': -321.75,
+    ''l'': 87, ''t'': 607.012361}, {''r'': -249.0, ''l'': 66, ''t'': 625.001963},
+    {''r'': -511.5, ''l'': 84, ''t'': 642.116594}, {''r'': -333.75, ''l'': 90, ''t'':
+    661.272294}, {''r'': -196.5, ''l'': 51, ''t'': 675.509868}, {''r'': -501.5, ''l'':
+    81, ''t'': 694.946674}, {''r'': -779.25, ''l'': 161, ''t'': 732.301245}, {''r'':
+    -586.25, ''l'': 105, ''t'': 758.623806}, {''r'': -435.0, ''l'': 63, ''t'': 774.515991},
+    {''r'': -487.25, ''l'': 77, ''t'': 795.373943}, {''r'': -228.75, ''l'': 60, ''t'':
+    811.225356}, {''r'': -465.25, ''l'': 71, ''t'': 827.572395}, {''r'': -423.75,
+    ''l'': 59, ''t'': 842.655164}, {''r'': -394.5, ''l'': 51, ''t'': 855.603567},
+    {''r'': -467.25, ''l'': 72, ''t'': 874.277055}, {''r'': -121.0, ''l'': 34, ''t'':
+    21.073886}, {''r'': -274.5, ''l'': 21, ''t'': 33.287714}, {''r'': -331.25, ''l'':
+    38, ''t'': 55.047471}, {''r'': -392.5, ''l'': 58, ''t'': 87.317428}, {''r'': -299.75,
+    ''l'': 28, ''t'': 119.249713}, {''r'': -315.0, ''l'': 33, ''t'': 130.927235},
+    {''r'': -324.25, ''l'': 36, ''t'': 142.05538}, {''r'': -153.75, ''l'': 45, ''t'':
+    167.836993}, {''r'': -279.5, ''l'': 22, ''t'': 185.312928}, {''r'': -291.5, ''l'':
+    25, ''t'': 198.180636}, {''r'': -280.5, ''l'': 22, ''t'': 212.632527}, {''r'':
+    -322.0, ''l'': 35, ''t'': 232.871317}, {''r'': -378.0, ''l'': 102, ''t'': 18.070229},
+    {''r'': -485.25, ''l'': 76, ''t'': 27.811176}, {''r'': -428.75, ''l'': 60, ''t'':
+    35.856364}, {''r'': -480.25, ''l'': 75, ''t'': 45.721783}, {''r'': -463.25, ''l'':
+    71, ''t'': 55.219325}, {''r'': -399.5, ''l'': 52, ''t'': 62.303052}, {''r'': -484.25,
+    ''l'': 76, ''t'': 72.600851}, {''r'': -456.0, ''l'': 68, ''t'': 81.981676}, {''r'':
+    -362.0, ''l'': 98, ''t'': 95.870379}, {''r'': -485.25, ''l'': 76, ''t'': 105.92679}],
+    maxlen=100)'
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000002C81B774828>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 9178
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000002C81B7BFB08>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651783277.761569
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 3
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/diff.patch b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/diff.patch
new file mode 100644
index 0000000..66ad9c4
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/diff.patch	
@@ -0,0 +1,121 @@
+diff --git a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc
+index 925c8f2..704176d 100644
+Binary files a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR_gym/ROAR_Gym/__init__.py b/ROAR_gym/ROAR_Gym/__init__.py
+index 2989d64..a4d9062 100644
+--- a/ROAR_gym/ROAR_Gym/__init__.py
++++ b/ROAR_gym/ROAR_Gym/__init__.py
+@@ -20,7 +20,7 @@ register(
+     entry_point='ROAR_Gym.envs:ROAREnvE2E',
+ )
+ 
+-register(
+-    id='roar-multi-v0',
+-    entry_point='ROAR_Gym.envs:ROARMultiEnv',
+-)
+\ No newline at end of file
++# register(
++#     id='roar-multi-v0',
++#     entry_point='ROAR_Gym.envs:ROARMultiEnv',
++# )
+\ No newline at end of file
+diff --git a/ROAR_gym/ROAR_Gym/envs/__init__.py b/ROAR_gym/ROAR_Gym/envs/__init__.py
+index 21612d9..9f6ffa6 100644
+--- a/ROAR_gym/ROAR_Gym/envs/__init__.py
++++ b/ROAR_gym/ROAR_Gym/envs/__init__.py
+@@ -2,6 +2,6 @@ from ROAR_Gym.envs.roar_env import ROAREnv
+ from ROAR_Gym.envs.roar_pid_env import ROARPIDEnv
+ from ROAR_Gym.envs.roar_env_e2e import ROAREnvE2E
+ from ROAR_Gym.envs.e2eModel_roar_env import ROARppoEnvE2E
+-from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
++# from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
+ from ROAR_Gym.envs.line_detect import *
+ 
+diff --git a/ROAR_gym/configurations/ppo_configuration.py b/ROAR_gym/configurations/ppo_configuration.py
+index 31170af..498c6d6 100644
+--- a/ROAR_gym/configurations/ppo_configuration.py
++++ b/ROAR_gym/configurations/ppo_configuration.py
+@@ -10,8 +10,8 @@ sys.path.append(Path(os.getcwd()).parent.as_posix())
+ misc_params = {
+   "env_name": 'roar-e2e-ppo-v0',
+   "run_fps": 8,  # TODO Link to the environment RUN_FPS
+-  "model_directory": Path("./output/PPOe2e_Run_29"),
+-  "run_name": "Run 29",
++  "model_directory": Path("./output/PPOe2e_Run_1"),
++  "run_name": "Run 3",
+   "total_timesteps": int(1e6),
+ }
+ 
+diff --git a/ROAR_gym/configurations/wandb_configuration.json b/ROAR_gym/configurations/wandb_configuration.json
+index 44a45f0..7d3a9ca 100644
+--- a/ROAR_gym/configurations/wandb_configuration.json
++++ b/ROAR_gym/configurations/wandb_configuration.json
+@@ -1 +1 @@
+-{"run_id": "Run 29", "name": "", "project_name": "Baseline", "entity": "roar"}
+\ No newline at end of file
++{"run_id": "Run 3", "name": "", "project_name": "ROAR", "entity": "jingjingwei"}
+\ No newline at end of file
+diff --git a/ROAR_gym/e2eModel.py b/ROAR_gym/e2eModel.py
+index fbd222f..63c342a 100644
+--- a/ROAR_gym/e2eModel.py
++++ b/ROAR_gym/e2eModel.py
+@@ -8,7 +8,7 @@ TODO: Before Running this file make the following changes:
+     self._last_obs = np.nan_to_num(self._last_obs)
+ 
+ to the following file:
+-    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py
++    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+ 
+ 2. Add this line after line 167 such that:
+ with th.no_grad():
+@@ -86,7 +86,7 @@ warnings.filterwarnings('ignore')
+ try:
+     from ROAR_Gym.envs.roar_env import LoggingCallback
+ except:
+-    from ROAR_Gym.ROAR_Gym.envs.roar_env import LoggingCallback
++    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+ 
+ # os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+ #  Parameters & Constants
+@@ -156,7 +156,7 @@ def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_rando
+ 
+     # Create a wandb run variable
+     wandb.tensorboard.patch(
+-        tensorboardX=False,
++        # tensorboardX=False,
+         pytorch=True,
+     )
+     run = wandb.init(
+@@ -253,13 +253,13 @@ def main(pass_num):
+ 
+         print(f"Starting new run {run.id}")
+     else:
+-        # Load wandb run
++        # Load wandb run <-- TODO: What has been stored?
+         run = wandb_run_init(
+             wandb_hp_config,
+             load=True,
+         )
+ 
+-        # Load the model
++        # Load the model <-- TODO: redirect to new location.
+         model = PPO.load(
+             latest_model_path,
+             env=env,
+@@ -289,14 +289,14 @@ def main(pass_num):
+         callback=checkpoint_callback
+     )
+ 
+-    wandb_callback = WandbCallback(
++    wandb_callback = WandbCallback( # metadata: path, etc.
+         verbose=2,
+         model_save_path=f"models/{run.id}",
+         gradient_save_freq=PPO_params["n_steps"],
+         model_save_freq=wandb_saves["model_save_freq"],
+     )
+ 
+-    callbacks = CallbackList([
++    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+         wandb_callback,
+         checkpoint_callback,
+         event_callback,
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/events.out.tfevents.1651783279.DESKTOP-014BV0C.2408.0 b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/events.out.tfevents.1651783279.DESKTOP-014BV0C.2408.0
new file mode 120000
index 0000000..30e7227
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/events.out.tfevents.1651783279.DESKTOP-014BV0C.2408.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 3/PPO_0/events.out.tfevents.1651783279.DESKTOP-014BV0C.2408.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/model.zip b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/model.zip
new file mode 120000
index 0000000..dd9db90
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/model.zip	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/models/Run 3/model.zip
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/requirements.txt b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/requirements.txt
new file mode 100644
index 0000000..629591c
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/requirements.txt	
@@ -0,0 +1,150 @@
+absl-py==1.0.0
+aiosignal==1.2.0
+ale-py==0.7.5
+argon2-cffi-bindings==21.2.0
+argon2-cffi==21.3.0
+async-timeout==4.0.2
+attrs==21.4.0
+autorom.accept-rom-license==0.4.2
+autorom==0.4.2
+backcall==0.2.0
+beautifulsoup4==4.11.1
+bleach==5.0.0
+cachetools==5.0.0
+carla==0.9.10
+certifi==2019.11.28
+cffi==1.15.0
+charset-normalizer==2.0.12
+click==8.1.3
+cloudpickle==2.0.0
+colorama==0.4.4
+cycler==0.11.0
+debugpy==1.6.0
+decorator==4.4.2
+defusedxml==0.7.1
+deprecated==1.2.13
+distlib==0.3.4
+docker-pycreds==0.4.0
+entrypoints==0.4
+fastjsonschema==2.15.3
+filelock==3.6.0
+fonttools==4.33.3
+frozenlist==1.3.0
+gitdb==4.0.9
+gitpython==3.1.27
+google-auth-oauthlib==0.4.6
+google-auth==2.6.6
+grpcio==1.43.0
+gym==0.21.0
+idna==3.3
+imageio-ffmpeg==0.4.2
+imageio==2.8.0
+importlib-metadata==4.11.3
+importlib-resources==5.7.1
+ipykernel==6.13.0
+ipython-genutils==0.2.0
+ipython==7.33.0
+ipywidgets==7.7.0
+jedi==0.18.1
+jinja2==3.1.2
+joblib==1.1.0
+jsonschema==4.4.0
+jupyter-client==7.3.0
+jupyter-core==4.10.0
+jupyterlab-pygments==0.2.2
+jupyterlab-widgets==1.1.0
+kiwisolver==1.4.2
+markdown==3.3.6
+markupsafe==2.1.1
+matplotlib-inline==0.1.3
+matplotlib==3.5.2
+mistune==0.8.4
+moviepy==1.0.3
+mpmath==1.2.1
+msgpack==1.0.3
+nbclient==0.6.2
+nbconvert==6.5.0
+nbformat==5.4.0
+nest-asyncio==1.5.5
+networkx==2.6.3
+notebook==6.4.11
+numpy==1.19.0
+oauthlib==3.2.0
+open3d==0.10.0.0
+opencv-contrib-python==4.4.0.42
+opencv-python==4.4.0.42
+openvr==1.14.1501
+packaging==21.3
+pandas==1.0.5
+pandocfilters==1.5.0
+parso==0.8.3
+pathtools==0.1.2
+pickleshare==0.7.5
+pillow==8.1.2
+pip==22.0.4
+platformdirs==2.5.2
+plotly==4.14.3
+prettytable==2.0.0
+proglog==0.1.9
+prometheus-client==0.14.1
+promise==2.3
+prompt-toolkit==3.0.29
+protobuf==3.20.1
+psutil==5.9.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycparser==2.21
+pydantic==1.5.1
+pygame==1.9.6
+pyglet==1.5.23
+pygments==2.12.0
+pyparsing==3.0.8
+pyrealsense2==2.38.1.2225
+pyrsistent==0.18.1
+pyserial==3.4
+python-dateutil==2.8.2
+pytz==2022.1
+pywavelets==1.3.0
+pywin32==304
+pywinpty==2.0.5
+pyyaml==6.0
+pyzmq==22.3.0
+ray==1.12.0
+redis==4.2.2
+requests-oauthlib==1.3.1
+requests==2.27.1
+retrying==1.3.3
+rsa==4.8
+scikit-image==0.16.2
+scipy==1.5.2
+send2trash==1.8.0
+sentry-sdk==1.5.11
+setproctitle==1.2.3
+setuptools==62.1.0
+shortuuid==1.0.8
+six==1.16.0
+smmap==5.0.0
+soupsieve==2.3.2.post1
+stable-baselines3==1.5.0
+sympy==1.7.1
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.1
+tensorboard==2.9.0
+terminado==0.13.3
+tinycss2==1.1.1
+torch==1.11.0
+torchvision==0.12.0
+tornado==6.1
+tqdm==4.64.0
+traitlets==5.1.1
+typing-extensions==4.2.0
+urllib3==1.26.9
+virtualenv==20.14.1
+wandb==0.12.16
+wcwidth==0.2.5
+webencodings==0.5.1
+werkzeug==2.1.2
+wheel==0.37.1
+widgetsnbextension==3.6.0
+wrapt==1.14.1
+zipp==3.8.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch
new file mode 100644
index 0000000..a4ff850
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch	
@@ -0,0 +1,296 @@
+diff --git a/Bridges/__pycache__/__init__.cpython-37.pyc b/Bridges/__pycache__/__init__.cpython-37.pyc
+index 748c80a..893843a 100644
+Binary files a/Bridges/__pycache__/__init__.cpython-37.pyc and b/Bridges/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/Bridges/__pycache__/bridge.cpython-37.pyc b/Bridges/__pycache__/bridge.cpython-37.pyc
+index d31942c..6290ebe 100644
+Binary files a/Bridges/__pycache__/bridge.cpython-37.pyc and b/Bridges/__pycache__/bridge.cpython-37.pyc differ
+diff --git a/Bridges/__pycache__/carla_bridge.cpython-37.pyc b/Bridges/__pycache__/carla_bridge.cpython-37.pyc
+index 2f8c9c7..c364856 100644
+Binary files a/Bridges/__pycache__/carla_bridge.cpython-37.pyc and b/Bridges/__pycache__/carla_bridge.cpython-37.pyc differ
+diff --git a/ROAR/__pycache__/__init__.cpython-37.pyc b/ROAR/__pycache__/__init__.cpython-37.pyc
+index 455e188..c8c0623 100644
+Binary files a/ROAR/__pycache__/__init__.cpython-37.pyc and b/ROAR/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc
+index 84e3be8..1009acf 100644
+Binary files a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc
+index 0b1ba9f..9742dcc 100644
+Binary files a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc
+index 841d66d..55b89fb 100644
+Binary files a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc
+index 03e1014..92b14a2 100644
+Binary files a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc
+index cfa960a..42f4506 100644
+Binary files a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc
+index c0ee652..303da5c 100644
+Binary files a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc
+index 4204108..e70abce 100644
+Binary files a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc
+index 98a2b8a..3cd2956 100644
+Binary files a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc differ
+diff --git a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc
+index 9449546..7e2c553 100644
+Binary files a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc
+index 82c261f..9e685ff 100644
+Binary files a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/controller.cpython-37.pyc b/ROAR/control_module/__pycache__/controller.cpython-37.pyc
+index 6443e8f..90ac7c5 100644
+Binary files a/ROAR/control_module/__pycache__/controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/controller.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc
+index 391e7bc..867822a 100644
+Binary files a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc
+index 0e2ca63..a4696b6 100644
+Binary files a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc and b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc
+index c12f588..5c42b9d 100644
+Binary files a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc
+index 52c9a49..2f0fb36 100644
+Binary files a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc
+index f6e7a5f..5eef87c 100644
+Binary files a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc
+index a3b9d51..105e490 100644
+Binary files a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc
+index 98ce179..0fbbbef 100644
+Binary files a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc
+index d9da805..3bda57a 100644
+Binary files a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc
+index 12e72a4..fe8d5a1 100644
+Binary files a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc
+index aca849f..2a8eb3e 100644
+Binary files a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc
+index 62e6f0c..3e54513 100644
+Binary files a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc
+index dad5d0d..990dca0 100644
+Binary files a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc and b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc
+index 7bc0045..51a7efa 100644
+Binary files a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc
+index 174b209..4dba087 100644
+Binary files a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc
+index 19daef3..c32e87d 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc
+index 54bd8f0..d6d0e38 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc
+index 9b54d47..054e40e 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc
+index 7fe96e6..62f47a3 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc
+index f666feb..e09db3f 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc
+index e339030..8dece62 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc
+index 3cf685f..d0fbb37 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc
+index 0250514..77233df 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc
+index 00ab4de..2a15a16 100644
+Binary files a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc
+index 86f93dc..8dba6e8 100644
+Binary files a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc
+index d636bc0..466de9c 100644
+Binary files a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc
+index d7e8cad..b84d89b 100644
+Binary files a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc
+index 1c8adb5..448e375 100644
+Binary files a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc
+index 6e2c1e3..95f385a 100644
+Binary files a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc
+index 7341979..9b0a837 100644
+Binary files a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc
+index 1152170..6fa437a 100644
+Binary files a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc differ
+diff --git a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc
+index 717c785..a39046d 100644
+Binary files a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc
+index ad18fd4..c12bd72 100644
+Binary files a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc
+index 34f7870..b90f5ce 100644
+Binary files a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc
+index cab1782..b19abb6 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc
+index e5483e6..df1a284 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc
+index 67f0c8a..ce64669 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc
+index a98bf88..31473c6 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc
+index 15303f6..c8686a2 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc
+index a3db8ca..dbbb536 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc differ
+diff --git a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc
+index 683efc4..704176d 100644
+Binary files a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR_gym/ROAR_Gym/__init__.py b/ROAR_gym/ROAR_Gym/__init__.py
+index 2989d64..a4d9062 100644
+--- a/ROAR_gym/ROAR_Gym/__init__.py
++++ b/ROAR_gym/ROAR_Gym/__init__.py
+@@ -20,7 +20,7 @@ register(
+     entry_point='ROAR_Gym.envs:ROAREnvE2E',
+ )
+ 
+-register(
+-    id='roar-multi-v0',
+-    entry_point='ROAR_Gym.envs:ROARMultiEnv',
+-)
+\ No newline at end of file
++# register(
++#     id='roar-multi-v0',
++#     entry_point='ROAR_Gym.envs:ROARMultiEnv',
++# )
+\ No newline at end of file
+diff --git a/ROAR_gym/ROAR_Gym/envs/__init__.py b/ROAR_gym/ROAR_Gym/envs/__init__.py
+index 21612d9..9f6ffa6 100644
+--- a/ROAR_gym/ROAR_Gym/envs/__init__.py
++++ b/ROAR_gym/ROAR_Gym/envs/__init__.py
+@@ -2,6 +2,6 @@ from ROAR_Gym.envs.roar_env import ROAREnv
+ from ROAR_Gym.envs.roar_pid_env import ROARPIDEnv
+ from ROAR_Gym.envs.roar_env_e2e import ROAREnvE2E
+ from ROAR_Gym.envs.e2eModel_roar_env import ROARppoEnvE2E
+-from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
++# from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
+ from ROAR_Gym.envs.line_detect import *
+ 
+diff --git a/ROAR_gym/configurations/ppo_configuration.py b/ROAR_gym/configurations/ppo_configuration.py
+index 31170af..498c6d6 100644
+--- a/ROAR_gym/configurations/ppo_configuration.py
++++ b/ROAR_gym/configurations/ppo_configuration.py
+@@ -10,8 +10,8 @@ sys.path.append(Path(os.getcwd()).parent.as_posix())
+ misc_params = {
+   "env_name": 'roar-e2e-ppo-v0',
+   "run_fps": 8,  # TODO Link to the environment RUN_FPS
+-  "model_directory": Path("./output/PPOe2e_Run_29"),
+-  "run_name": "Run 29",
++  "model_directory": Path("./output/PPOe2e_Run_1"),
++  "run_name": "Run 3",
+   "total_timesteps": int(1e6),
+ }
+ 
+diff --git a/ROAR_gym/configurations/wandb_configuration.json b/ROAR_gym/configurations/wandb_configuration.json
+index 44a45f0..7d3a9ca 100644
+--- a/ROAR_gym/configurations/wandb_configuration.json
++++ b/ROAR_gym/configurations/wandb_configuration.json
+@@ -1 +1 @@
+-{"run_id": "Run 29", "name": "", "project_name": "Baseline", "entity": "roar"}
+\ No newline at end of file
++{"run_id": "Run 3", "name": "", "project_name": "ROAR", "entity": "jingjingwei"}
+\ No newline at end of file
+diff --git a/ROAR_gym/e2eModel.py b/ROAR_gym/e2eModel.py
+index fbd222f..63c342a 100644
+--- a/ROAR_gym/e2eModel.py
++++ b/ROAR_gym/e2eModel.py
+@@ -8,7 +8,7 @@ TODO: Before Running this file make the following changes:
+     self._last_obs = np.nan_to_num(self._last_obs)
+ 
+ to the following file:
+-    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py
++    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+ 
+ 2. Add this line after line 167 such that:
+ with th.no_grad():
+@@ -86,7 +86,7 @@ warnings.filterwarnings('ignore')
+ try:
+     from ROAR_Gym.envs.roar_env import LoggingCallback
+ except:
+-    from ROAR_Gym.ROAR_Gym.envs.roar_env import LoggingCallback
++    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+ 
+ # os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+ #  Parameters & Constants
+@@ -156,7 +156,7 @@ def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_rando
+ 
+     # Create a wandb run variable
+     wandb.tensorboard.patch(
+-        tensorboardX=False,
++        # tensorboardX=False,
+         pytorch=True,
+     )
+     run = wandb.init(
+@@ -253,13 +253,13 @@ def main(pass_num):
+ 
+         print(f"Starting new run {run.id}")
+     else:
+-        # Load wandb run
++        # Load wandb run <-- TODO: What has been stored?
+         run = wandb_run_init(
+             wandb_hp_config,
+             load=True,
+         )
+ 
+-        # Load the model
++        # Load the model <-- TODO: redirect to new location.
+         model = PPO.load(
+             latest_model_path,
+             env=env,
+@@ -289,14 +289,14 @@ def main(pass_num):
+         callback=checkpoint_callback
+     )
+ 
+-    wandb_callback = WandbCallback(
++    wandb_callback = WandbCallback( # metadata: path, etc.
+         verbose=2,
+         model_save_path=f"models/{run.id}",
+         gradient_save_freq=PPO_params["n_steps"],
+         model_save_freq=wandb_saves["model_save_freq"],
+     )
+ 
+-    callbacks = CallbackList([
++    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+         wandb_callback,
+         checkpoint_callback,
+         event_callback,
+diff --git a/readme.md b/readme.md
+index 5b12ca0..25639ef 100644
+--- a/readme.md
++++ b/readme.md
+@@ -23,7 +23,7 @@ ROAR/ROAR_Sim/configurations/npc_config.json
+ ### Some Concept
+ CARLA provides support for multi-agent through the following three core concepts.
+ - Actor: Actor is anything that participates in the simulation and can be moved around, for example, vehicles, pedestrians.
+-- Blueprint:Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
++- Blueprint: Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
+ - World: The world is the major ruler of the simulation. It represents the currently loaded map, and contains the setting of parameters of the current simulation environment and functions that create, control and destroy actors. CARLA provides carla.World as the default world setting. 
+ 
+ ### Result
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/wandb-metadata.json b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/wandb-metadata.json
new file mode 100644
index 0000000..aa27d24
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/wandb-metadata.json	
@@ -0,0 +1,24 @@
+{
+    "os": "Windows-10-10.0.19041-SP0",
+    "python": "3.7.12",
+    "heartbeatAt": "2022-05-05T20:41:17.023034",
+    "startedAt": "2022-05-05T20:41:14.524367",
+    "docker": null,
+    "gpu": "NVIDIA GeForce RTX 2080",
+    "gpu_count": 1,
+    "cpu_count": 12,
+    "cuda": null,
+    "args": [],
+    "state": "running",
+    "program": "C:/Users/Ma_Ya/ROAR/ROAR_gym/e2eModel.py",
+    "codePath": "ROAR_gym\\e2eModel.py",
+    "git": {
+        "remote": "git@github.com:Allison-1999/ROAR.git",
+        "commit": "a12966ac4c7da853bb30c5ca35a2c6962bff5c44"
+    },
+    "email": "jingjingwei@berkeley.edu",
+    "root": "C:/Users/Ma_Ya/ROAR",
+    "host": "DESKTOP-014BV0C",
+    "username": "Ma_Ya",
+    "executable": "C:\\Users\\Ma_Ya\\.conda\\envs\\ROAR\\python.exe"
+}
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/wandb-summary.json
new file mode 100644
index 0000000..3a83dbb
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_134114-Run 3/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"Episode reward": -8, "Episode actual reward": -691.5635369786248, "Checkpoint reached": 0, "largest_steps": 206, "highest_speed": 72.13898495939718, "avg10_checkpoints": 110.45454545454545, "avg10_score": -488.75, "avg10_actual_score": -604.5360947129637, "highest_actual_score": -508.7256826901824, "_timestamp": 1651786623, "_runtime": 3349, "_step": 24574, "parameters/log_std": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0027970627415925264, -0.0027187264058738947, -0.002640390070155263, -0.002562053734436631, -0.0024837173987179995, -0.0024053810629993677, -0.002327044727280736, -0.0022487081587314606, -0.002170371823012829, -0.002092035487294197, -0.0020136991515755653, -0.0019353628158569336, -0.0018570264801383018, -0.00177869014441967, -0.0017003536922857165, -0.0016220173565670848, -0.0015436811372637749, -0.0014653448015451431, -0.0013870084658265114, -0.0013086721301078796, -0.001230335794389248, -0.0011519994586706161, -0.0010736630065366626, -0.0009953266708180308, -0.0009169903350993991, -0.0008386539993807673, -0.0007603176636621356, -0.0006819812697358429, -0.0006036449340172112, -0.0005253085982985795, -0.00044697223347611725, -0.00036863586865365505, -0.00029029930010437965, -0.00021196294983383268, -0.0001336265995632857, -5.5290249292738736e-05, 2.3046100977808237e-05, 0.00010138243669643998, 0.00017971880151890218, 0.0002580551663413644, 0.00033639150205999613, 0.00041472783777862787, 0.0004930641734972596, 0.0005714005674235523, 0.000649736903142184, 0.0007280732388608158, 0.0008064096327871084, 0.0008847459685057402, 0.0009630823042243719, 0.0010414186399430037, 0.0011197549756616354, 0.0011980913113802671, 0.0012764276470988989, 0.0013547639828175306, 0.0014331004349514842, 0.001511436770670116, 0.0015897731063887477, 0.0016681094421073794, 0.0017464457778260112, 0.001824782113544643, 0.0019031185656785965, 0.0019814549013972282, 0.00205979123711586, 0.0021381275728344917, 0.0022164639085531235]}, "parameters/features_extractor.network.0.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 2.0, 4.0, 9.0, 6.0, 15.0, 18.0, 39.0, 56.0, 81.0, 117.0, 143.0, 167.0, 264.0, 320.0, 401.0, 503.0, 592.0, 647.0, 816.0, 952.0, 1049.0, 1144.0, 1275.0, 1282.0, 1336.0, 1406.0, 1372.0, 1315.0, 1231.0, 1202.0, 1066.0, 1020.0, 917.0, 762.0, 689.0, 540.0, 403.0, 327.0, 263.0, 235.0, 173.0, 125.0, 87.0, 70.0, 46.0, 32.0, 22.0, 12.0, 9.0, 2.0, 5.0, 1.0, 1.0, 1.0, 1.0], "bins": [-0.24751348793506622, -0.24037176370620728, -0.23323003947734833, -0.22608831524848938, -0.21894659101963043, -0.21180486679077148, -0.20466315746307373, -0.1975214183330536, -0.19037970900535583, -0.1832379847764969, -0.17609626054763794, -0.168954536318779, -0.16181281208992004, -0.1546710878610611, -0.14752936363220215, -0.1403876543045044, -0.13324591517448425, -0.1261041909456253, -0.11896246671676636, -0.11182074248790741, -0.10467901825904846, -0.09753729403018951, -0.09039557725191116, -0.08325385302305222, -0.07611213624477386, -0.06897041201591492, -0.06182868778705597, -0.05468696728348732, -0.04754524305462837, -0.040403518825769424, -0.033261798322200775, -0.026120074093341827, -0.01897832751274109, -0.011836604215204716, -0.004694880917668343, 0.002446841448545456, 0.009588565677404404, 0.01673028990626335, 0.023872010409832, 0.03101373463869095, 0.03815546631813049, 0.04529719054698944, 0.05243891477584839, 0.05958063527941704, 0.06672236323356628, 0.07386408746242523, 0.08100580424070358, 0.08814752846956253, 0.09528924524784088, 0.10243096947669983, 0.10957269370555878, 0.11671441793441772, 0.12385614216327667, 0.13099786639213562, 0.13813957571983337, 0.14528131484985352, 0.15242302417755127, 0.15956474840641022, 0.16670647263526917, 0.1738481968641281, 0.18098992109298706, 0.188131645321846, 0.19527336955070496, 0.2024150788784027, 0.20955681800842285]}, "parameters/features_extractor.network.0.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 2.0, 1.0, 3.0, 0.0, 1.0, 0.0, 1.0, 0.0, 2.0, 2.0, 0.0, 4.0, 1.0, 2.0, 0.0, 2.0, 0.0, 0.0, 3.0, 0.0, 1.0], "bins": [-0.003839140757918358, -0.003682476934045553, -0.0035258133430033922, -0.0033691497519612312, -0.0032124859280884266, -0.003055822104215622, -0.002899158513173461, -0.0027424949221313, -0.0025858310982584953, -0.0024291672743856907, -0.0022725036833435297, -0.0021158400923013687, -0.001959176268428564, -0.0018025125609710813, -0.0016458488535135984, -0.0014891851460561156, -0.0013325214385986328, -0.00117585773114115, -0.0010191940236836672, -0.0008625303162261844, -0.0007058666087687016, -0.0005492029013112187, -0.0003925391938537359, -0.0002358754863962531, -7.92117789387703e-05, 7.745192851871252e-05, 0.00023411563597619534, 0.00039077934343367815, 0.000547443050891161, 0.0007041067583486438, 0.0008607704658061266, 0.0010174341732636094, 0.001174097415059805, 0.0013307611225172877, 0.0014874248299747705, 0.0016440885374322534, 0.0018007522448897362, 0.001957416068762541, 0.002114079659804702, 0.002270743250846863, 0.0024274070747196674, 0.002584070898592472, 0.002740734489634633, 0.002897398080676794, 0.0030540619045495987, 0.0032107257284224033, 0.0033673893194645643, 0.0035240529105067253, 0.00368071673437953, 0.0038373805582523346, 0.003994043916463852, 0.004150707740336657, 0.004307371564209461, 0.004464035388082266, 0.0046206992119550705, 0.004777362570166588, 0.0049340263940393925, 0.005090690217912197, 0.0052473535761237144, 0.005404017399996519, 0.005560681223869324, 0.005717345047742128, 0.005874008871614933, 0.00603067222982645, 0.006187336053699255]}, "parameters/features_extractor.network.2.weight": {"_type": "histogram", "values": [1.0, 1.0, 0.0, 1.0, 2.0, 12.0, 9.0, 5.0, 18.0, 37.0, 31.0, 67.0, 79.0, 104.0, 128.0, 162.0, 206.0, 260.0, 341.0, 418.0, 500.0, 606.0, 689.0, 839.0, 909.0, 988.0, 1088.0, 1234.0, 1372.0, 1424.0, 1452.0, 1532.0, 1532.0, 1591.0, 1571.0, 1538.0, 1440.0, 1329.0, 1210.0, 1171.0, 1006.0, 996.0, 792.0, 714.0, 639.0, 541.0, 467.0, 385.0, 306.0, 270.0, 183.0, 153.0, 111.0, 92.0, 60.0, 51.0, 36.0, 21.0, 10.0, 17.0, 10.0, 1.0, 7.0, 3.0], "bins": [-0.2456759214401245, -0.2382456213235855, -0.2308153212070465, -0.2233850061893463, -0.2159547060728073, -0.2085244059562683, -0.2010941058397293, -0.1936638057231903, -0.1862334907054901, -0.1788031905889511, -0.1713728904724121, -0.16394257545471191, -0.1565122753381729, -0.1490819752216339, -0.1416516751050949, -0.1342213749885559, -0.1267910748720169, -0.1193607747554779, -0.1119304671883583, -0.1045001670718193, -0.09706985950469971, -0.0896395593881607, -0.0822092592716217, -0.0747789591550827, -0.0673486590385437, -0.0599183551967144, -0.0524880513548851, -0.0450577512383461, -0.0376274473965168, -0.0301971435546875, -0.0227668434381485, -0.015336539596319199, -0.007906243205070496, -0.0004759402945637703, 0.006954362615942955, 0.014384664595127106, 0.021814968436956406, 0.029245272278785706, 0.03667557239532471, 0.04410587623715401, 0.051536187529563904, 0.058966491371393204, 0.0663967952132225, 0.0738270953297615, 0.0812574028968811, 0.0886877030134201, 0.0961180031299591, 0.10354830324649811, 0.11097860336303711, 0.11840890347957611, 0.1258392035961151, 0.1332695186138153, 0.1406998187303543, 0.1481301188468933, 0.1555604189634323, 0.1629907190799713, 0.1704210340976715, 0.1778513342142105, 0.1852816343307495, 0.1927119493484497, 0.2001422494649887, 0.2075725495815277, 0.2150028496980667, 0.2224331498146057, 0.22986344993114471]}, "parameters/features_extractor.network.2.bias": {"_type": "histogram", "values": [1.0, 0.0, 1.0, 2.0, 1.0, 0.0, 0.0, 2.0, 2.0, 0.0, 1.0, 3.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 1.0, 0.0, 1.0, 0.0, 0.0, 3.0, 3.0, 0.0, 1.0, 2.0, 1.0, 3.0, 2.0, 2.0, 4.0, 0.0, 2.0, 3.0, 3.0, 5.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0031528573017567396, -0.0030159512534737587, -0.0028790454380214214, -0.0027421393897384405, -0.0026052333414554596, -0.0024683275260031223, -0.0023314214777201414, -0.0021945154294371605, -0.0020576096139848232, -0.0019207036821171641, -0.001783797750249505, -0.0016468917019665241, -0.001509985770098865, -0.001373079838231206, -0.001236173789948225, -0.001099267858080566, -0.0009623619262129068, -0.0008254559943452477, -0.0006885500042699277, -0.0005516440141946077, -0.00041473808232694864, -0.00027783215045928955, -0.00014092616038396955, -4.02017030864954e-06, 0.00013288576155900955, 0.0002697917225304991, 0.00040669768350198865, 0.0005436036735773087, 0.0006805096054449677, 0.0008174155373126268, 0.0009543215273879468, 0.0010912275174632668, 0.0012281332165002823, 0.0013650391483679414, 0.0015019450802356005, 0.0016388511285185814, 0.0017757570603862405, 0.0019126629922538996, 0.0020495690405368805, 0.0021864748559892178, 0.0023233809042721987, 0.0024602869525551796, 0.002597192768007517, 0.0027340988162904978, 0.0028710048645734787, 0.003007910680025816, 0.003144816728308797, 0.003281722776591778, 0.003418628592044115, 0.003555534640327096, 0.0036924404557794333, 0.003829346504062414, 0.0039662523195147514, 0.004103158600628376, 0.004240064416080713, 0.0043769702315330505, 0.004513876512646675, 0.004650782328099012, 0.004787688609212637, 0.004924594424664974, 0.0050615002401173115, 0.005198406055569649, 0.005335312336683273, 0.005472218152135611, 0.005609123967587948]}, "parameters/features_extractor.network.4.weight": {"_type": "histogram", "values": [1.0, 2.0, 2.0, 1.0, 5.0, 7.0, 15.0, 14.0, 27.0, 39.0, 59.0, 86.0, 114.0, 180.0, 213.0, 263.0, 325.0, 439.0, 558.0, 677.0, 778.0, 977.0, 1085.0, 1180.0, 1431.0, 1549.0, 1644.0, 1732.0, 1821.0, 1868.0, 1906.0, 1903.0, 1835.0, 1714.0, 1729.0, 1575.0, 1473.0, 1267.0, 1217.0, 997.0, 829.0, 676.0, 575.0, 468.0, 385.0, 321.0, 240.0, 207.0, 130.0, 92.0, 86.0, 46.0, 40.0, 21.0, 12.0, 12.0, 4.0, 4.0, 2.0, 3.0, 1.0, 1.0, 0.0, 1.0], "bins": [-0.23332037031650543, -0.22567269206047058, -0.21802499890327454, -0.21037732064723969, -0.20272964239120483, -0.1950819492340088, -0.18743427097797394, -0.1797865927219391, -0.17213889956474304, -0.1644912213087082, -0.15684352815151215, -0.1491958498954773, -0.14154815673828125, -0.1339004784822464, -0.12625280022621155, -0.1186051145195961, -0.11095742881298065, -0.1033097431063652, -0.09566205739974976, -0.0880143791437149, -0.08036669343709946, -0.07271900773048401, -0.06507132947444916, -0.05742364376783371, -0.04977595806121826, -0.042128272354602814, -0.034480590373277664, -0.026832906529307365, -0.019185222685337067, -0.011537536978721619, -0.003889854997396469, 0.0037578269839286804, 0.011405527591705322, 0.01905321143567562, 0.02670089527964592, 0.03434857726097107, 0.04199626296758652, 0.049643948674201965, 0.057291630655527115, 0.06493931263685226, 0.07258699834346771, 0.08023468405008316, 0.08788236975669861, 0.09553004801273346, 0.10317773371934891, 0.11082541942596436, 0.1184730976819992, 0.12612077593803406, 0.1337684690952301, 0.14141614735126495, 0.149063840508461, 0.15671151876449585, 0.1643592119216919, 0.17200689017772675, 0.1796545684337616, 0.18730226159095764, 0.1949499398469925, 0.20259761810302734, 0.2102453112602234, 0.21789298951625824, 0.2255406677722931, 0.23318836092948914, 0.240836039185524, 0.24848371744155884, 0.2561314105987549]}, "parameters/features_extractor.network.4.bias": {"_type": "histogram", "values": [3.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 3.0, 1.0, 1.0, 4.0, 1.0, 0.0, 6.0, 3.0, 2.0, 3.0, 1.0, 1.0, 1.0, 4.0, 1.0, 4.0, 1.0, 1.0, 1.0, 0.0, 3.0, 1.0, 1.0, 2.0, 1.0, 2.0], "bins": [-0.0008271285914815962, -0.0007474945159628987, -0.0006678604404442012, -0.0005882263649255037, -0.0005085922894068062, -0.00042895821388810873, -0.00034932413836941123, -0.00026969006285071373, -0.00019005598733201623, -0.00011042191181331873, -3.078783629462123e-05, 4.884623922407627e-05, 0.00012848031474277377, 0.00020811439026147127, 0.00028774846578016877, 0.00036738254129886627, 0.00044701661681756377, 0.0005266506923362613, 0.0006062847678549588, 0.0006859188433736563, 0.0007655529188923538, 0.0008451869944110513, 0.0009248210699297488, 0.0010044551454484463, 0.0010840892791748047, 0.001163723412901163, 0.0012433574302121997, 0.0013229914475232363, 0.0014026255812495947, 0.001482259714975953, 0.0015618937322869897, 0.0016415277495980263, 0.0017211618833243847, 0.001800796017050743, 0.0018804300343617797, 0.0019600640516728163, 0.0020396981853991747, 0.002119332319125533, 0.002198966220021248, 0.0022786003537476063, 0.0023582344874739647, 0.002437868621200323, 0.0025175027549266815, 0.0025971366558223963, 0.0026767707895487547, 0.002756404923275113, 0.002836038824170828, 0.0029156729578971863, 0.0029953070916235447, 0.003074941225349903, 0.0031545753590762615, 0.0032342092599719763, 0.0033138433936983347, 0.003393477527424693, 0.003473111428320408, 0.0035527455620467663, 0.0036323796957731247, 0.003712013829499483, 0.0037916479632258415, 0.0038712818641215563, 0.003950916230678558, 0.0040305498987436295, 0.004110184032469988, 0.004189818166196346, 0.004269452299922705]}, "parameters/features_extractor.network.7.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 1.0, 2.0, 4.0, 8.0, 19.0, 46.0, 77.0, 112.0, 203.0, 391.0, 571.0, 922.0, 1391.0, 2222.0, 3336.0, 4679.0, 6572.0, 9018.0, 12112.0, 15550.0, 19633.0, 24561.0, 29145.0, 34123.0, 38949.0, 43396.0, 47098.0, 49385.0, 51086.0, 51418.0, 50061.0, 47770.0, 44393.0, 39935.0, 35385.0, 30607.0, 25577.0, 21104.0, 16408.0, 12828.0, 9907.0, 7305.0, 5137.0, 3598.0, 2509.0, 1618.0, 1077.0, 624.0, 400.0, 225.0, 141.0, 87.0, 41.0, 22.0, 13.0, 5.0, 6.0, 0.0, 1.0, 0.0, 1.0], "bins": [-0.13032850623130798, -0.12627224624156952, -0.12221598625183105, -0.118159718811512, -0.11410345882177353, -0.11004719883203506, -0.105990931391716, -0.10193467140197754, -0.09787841141223907, -0.09382215142250061, -0.08976589143276215, -0.08570962399244308, -0.08165336400270462, -0.07759710401296616, -0.0735408365726471, -0.06948457658290863, -0.06542831659317017, -0.0613720566034317, -0.05731579288840294, -0.053259529173374176, -0.04920326918363571, -0.04514700919389725, -0.041090745478868484, -0.03703448176383972, -0.03297822177410126, -0.028921959921717644, -0.02486569806933403, -0.020809436216950417, -0.016753174364566803, -0.01269691251218319, -0.008640650659799576, -0.004584388807415962, -0.0005281269550323486, 0.003528134897351265, 0.0075843967497348785, 0.011640658602118492, 0.015696920454502106, 0.01975318230688572, 0.023809444159269333, 0.027865706011652946, 0.03192196786403656, 0.035978227853775024, 0.04003449156880379, 0.04409075528383255, 0.048147015273571014, 0.05220327526330948, 0.05625953897833824, 0.060315802693367004, 0.06437206268310547, 0.06842832267284393, 0.0724845826625824, 0.07654085010290146, 0.08059711009263992, 0.08465337008237839, 0.08870963752269745, 0.09276589751243591, 0.09682215750217438, 0.10087841749191284, 0.1049346774816513, 0.10899094492197037, 0.11304720491170883, 0.1171034649014473, 0.12115973234176636, 0.12521599233150482, 0.1292722523212433]}, "parameters/features_extractor.network.7.bias": {"_type": "histogram", "values": [1.0, 0.0, 1.0, 1.0, 2.0, 2.0, 2.0, 0.0, 5.0, 5.0, 6.0, 5.0, 10.0, 7.0, 7.0, 13.0, 7.0, 5.0, 8.0, 5.0, 2.0, 8.0, 0.0, 3.0, 2.0, 4.0, 4.0, 3.0, 3.0, 0.0, 1.0, 1.0, 1.0, 2.0, 2.0, 4.0, 5.0, 2.0, 2.0, 4.0, 6.0, 5.0, 1.0, 0.0, 5.0, 5.0, 10.0, 3.0, 9.0, 9.0, 11.0, 8.0, 10.0, 3.0, 10.0, 5.0, 1.0, 0.0, 2.0, 3.0, 0.0, 1.0, 3.0, 1.0], "bins": [-0.0026178755797445774, -0.002537802094593644, -0.0024577283766120672, -0.002377654891461134, -0.002297581173479557, -0.0022175076883286238, -0.002137433970347047, -0.0020573604851961136, -0.0019772867672145367, -0.0018972131656482816, -0.0018171395640820265, -0.0017370659625157714, -0.0016569923609495163, -0.001576918875798583, -0.001496845274232328, -0.0014167716726660728, -0.0013366981875151396, -0.0012566245859488845, -0.0011765509843826294, -0.0010964773828163743, -0.0010164037812501192, -0.000936330237891525, -0.0008562566945329309, -0.0007761830929666758, -0.0006961094914004207, -0.0006160358898341656, -0.0005359622882679105, -0.0004558887449093163, -0.0003758151433430612, -0.0002957415417768061, -0.00021566796931438148, -0.00013559439685195684, -5.552079528570175e-05, 2.4552791728638113e-05, 0.00010462637874297798, 0.00018469996575731784, 0.0002647735527716577, 0.0003448471543379128, 0.00042492072680033743, 0.0005049942992627621, 0.0005850679008290172, 0.0006651415023952723, 0.0007452151039615273, 0.0008252886473201215, 0.0009053622488863766, 0.0009854359086602926, 0.0010655093938112259, 0.001145582995377481, 0.001225656596943736, 0.0013057301985099912, 0.0013858038000762463, 0.0014658774016425014, 0.0015459510032087564, 0.0016260244883596897, 0.0017060980899259448, 0.0017861716914922, 0.001866245293058455, 0.00194631889462471, 0.0020263923797756433, 0.0021064660977572203, 0.0021865395829081535, 0.0022666133008897305, 0.0023466867860406637, 0.002426760271191597, 0.002506833989173174]}, "parameters/mlp_extractor.policy_net.0.weight": {"_type": "histogram", "values": [5.0, 4.0, 2.0, 4.0, 5.0, 9.0, 16.0, 16.0, 17.0, 26.0, 42.0, 58.0, 61.0, 82.0, 126.0, 149.0, 170.0, 194.0, 227.0, 253.0, 291.0, 370.0, 440.0, 484.0, 549.0, 549.0, 597.0, 696.0, 631.0, 684.0, 713.0, 700.0, 762.0, 703.0, 739.0, 662.0, 660.0, 595.0, 556.0, 506.0, 464.0, 411.0, 370.0, 325.0, 278.0, 229.0, 186.0, 174.0, 131.0, 121.0, 81.0, 71.0, 54.0, 38.0, 34.0, 21.0, 14.0, 7.0, 6.0, 5.0, 4.0, 4.0, 0.0, 3.0], "bins": [-0.3184245526790619, -0.3085070848464966, -0.29858964681625366, -0.28867220878601074, -0.27875474095344543, -0.2688372731208801, -0.2589198350906372, -0.2490023821592331, -0.23908492922782898, -0.22916747629642487, -0.21925002336502075, -0.20933257043361664, -0.19941511750221252, -0.1894976645708084, -0.1795802116394043, -0.16966275870800018, -0.15974530577659607, -0.14982785284519196, -0.13991039991378784, -0.12999294698238373, -0.12007549405097961, -0.1101580411195755, -0.10024058818817139, -0.09032313525676727, -0.08040568232536316, -0.07048822939395905, -0.06057077646255493, -0.05065332353115082, -0.040735870599746704, -0.03081841766834259, -0.020900964736938477, -0.010983511805534363, -0.0010660290718078613, 0.008851423859596252, 0.018768876791000366, 0.02868632972240448, 0.038603782653808594, 0.04852123558521271, 0.05843868851661682, 0.06835614144802094, 0.07827359437942505, 0.08819104731082916, 0.09810850024223328, 0.10802595317363739, 0.1179434061050415, 0.12786085903644562, 0.13777831196784973, 0.14769576489925385, 0.15761321783065796, 0.16753067076206207, 0.1774481236934662, 0.1873655766248703, 0.19728302955627441, 0.20720048248767853, 0.21711793541908264, 0.22703538835048676, 0.23695284128189087, 0.24687029421329498, 0.2567877471446991, 0.2667052149772644, 0.2766226530075073, 0.28654009103775024, 0.29645755887031555, 0.30637502670288086, 0.3162924647331238]}, "parameters/mlp_extractor.policy_net.0.bias": {"_type": "histogram", "values": [1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0, 1.0, 0.0, 0.0, 0.0, 2.0, 3.0, 1.0, 0.0, 3.0, 2.0, 4.0, 1.0, 6.0, 4.0, 3.0, 4.0, 2.0, 5.0, 1.0, 0.0, 2.0, 0.0, 1.0, 0.0, 2.0, 1.0, 2.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-7.380930037470534e-05, -7.18779192538932e-05, -6.994653085712343e-05, -6.801514246035367e-05, -6.608376133954152e-05, -6.415238021872938e-05, -6.222099182195961e-05, -6.028960706316866e-05, -5.8358222304377705e-05, -5.642683754558675e-05, -5.4495452786795795e-05, -5.256406802800484e-05, -5.0632683269213885e-05, -4.870129851042293e-05, -4.6769913751631975e-05, -4.483852899284102e-05, -4.2907144234050065e-05, -4.097575947525911e-05, -3.9044374716468155e-05, -3.71129899576772e-05, -3.5181605198886245e-05, -3.325022044009529e-05, -3.1318835681304336e-05, -2.938745092251338e-05, -2.7456066163722426e-05, -2.552468140493147e-05, -2.3593296646140516e-05, -2.166191188734956e-05, -1.9730527128558606e-05, -1.779914236976765e-05, -1.5867757610976696e-05, -1.3936372852185741e-05, -1.2004991731373593e-05, -1.0073606972582638e-05, -8.142222213791683e-06, -6.210837455000728e-06, -4.279452696209773e-06, -2.3480679374188185e-06, -4.166831786278635e-07, 1.5147015801630914e-06, 3.4460863389540464e-06, 5.377471097745001e-06, 7.308855856535956e-06, 9.240240615326911e-06, 1.1171625374117866e-05, 1.3103010132908821e-05, 1.5034394891699776e-05, 1.696577965049073e-05, 1.8897164409281686e-05, 2.082854916807264e-05, 2.2759933926863596e-05, 2.469131868565455e-05, 2.6622703444445506e-05, 2.855408820323646e-05, 3.0485472962027416e-05, 3.241685772081837e-05, 3.4348242479609326e-05, 3.627962723840028e-05, 3.8211011997191235e-05, 4.014239675598219e-05, 4.2073781514773145e-05, 4.40051662735641e-05, 4.5936551032355055e-05, 4.786793579114601e-05, 4.9799320549936965e-05]}, "parameters/mlp_extractor.policy_net.2.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 1.0, 3.0, 2.0, 3.0, 8.0, 11.0, 8.0, 11.0, 20.0, 21.0, 34.0, 28.0, 36.0, 54.0, 50.0, 61.0, 95.0, 95.0, 95.0, 94.0, 106.0, 135.0, 146.0, 157.0, 175.0, 161.0, 157.0, 169.0, 169.0, 190.0, 164.0, 174.0, 143.0, 159.0, 145.0, 150.0, 104.0, 121.0, 109.0, 81.0, 74.0, 75.0, 47.0, 41.0, 43.0, 34.0, 21.0, 33.0, 20.0, 19.0, 9.0, 13.0, 7.0, 3.0, 4.0, 2.0, 2.0, 1.0, 0.0, 0.0, 2.0], "bins": [-0.6038489937782288, -0.5848334431648254, -0.5658178925514221, -0.5468023419380188, -0.5277868509292603, -0.5087713003158569, -0.4897557497024536, -0.4707401990890503, -0.451724648475647, -0.43270909786224365, -0.41369354724884033, -0.3946780264377594, -0.3756624758243561, -0.35664692521095276, -0.3376314043998718, -0.3186158537864685, -0.2996003031730652, -0.28058475255966187, -0.26156920194625854, -0.2425536811351776, -0.2235381305217743, -0.20452257990837097, -0.18550704419612885, -0.16649150848388672, -0.1474759578704834, -0.12846040725708008, -0.10944487154483795, -0.09042932838201523, -0.0714137852191925, -0.05239824205636978, -0.03338269889354706, -0.014367163181304932, 0.004648327827453613, 0.023663870990276337, 0.04267941415309906, 0.06169495731592178, 0.0807105004787445, 0.09972604364156723, 0.11874158680438995, 0.13775712251663208, 0.1567726731300354, 0.17578822374343872, 0.19480375945568085, 0.21381929516792297, 0.2328348457813263, 0.2518503963947296, 0.27086591720581055, 0.28988146781921387, 0.3088970184326172, 0.3279125690460205, 0.34692811965942383, 0.36594364047050476, 0.3849591910839081, 0.4039747416973114, 0.42299026250839233, 0.44200581312179565, 0.461021363735199, 0.4800369143486023, 0.4990524649620056, 0.5180680155754089, 0.5370835065841675, 0.5560990571975708, 0.5751146078109741, 0.5941301584243774, 0.6131457090377808]}, "parameters/mlp_extractor.policy_net.2.bias": {"_type": "histogram", "values": [1.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 2.0, 0.0, 1.0, 2.0, 1.0, 5.0, 1.0, 0.0, 1.0, 3.0, 3.0, 2.0, 2.0, 1.0, 2.0, 2.0, 0.0, 2.0, 1.0, 0.0, 1.0, 3.0, 0.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 3.0, 1.0, 0.0, 0.0, 0.0, 2.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0], "bins": [-4.691857975558378e-05, -4.517588604358025e-05, -4.343319233157672e-05, -4.169049861957319e-05, -3.994780490756966e-05, -3.820511119556613e-05, -3.6462417483562604e-05, -3.4719723771559075e-05, -3.2977030059555545e-05, -3.1234336347552016e-05, -2.9491642635548487e-05, -2.7748948923544958e-05, -2.600625521154143e-05, -2.42635614995379e-05, -2.252086778753437e-05, -2.0778174075530842e-05, -1.9035480363527313e-05, -1.7292786651523784e-05, -1.5550092939520255e-05, -1.3807399227516726e-05, -1.2064705515513197e-05, -1.0322011803509668e-05, -8.579318091506138e-06, -6.836624379502609e-06, -5.09393066749908e-06, -3.3512369554955512e-06, -1.6085432434920222e-06, 1.3415046851150692e-07, 1.876844180515036e-06, 3.619537892518565e-06, 5.362231604522094e-06, 7.104925316525623e-06, 8.84762266650796e-06, 1.0590316378511488e-05, 1.2333010090515018e-05, 1.4075703802518547e-05, 1.5818397514522076e-05, 1.7561091226525605e-05, 1.9303784938529134e-05, 2.1046478650532663e-05, 2.2789172362536192e-05, 2.453186607453972e-05, 2.627455978654325e-05, 2.801725349854678e-05, 2.9759947210550308e-05, 3.150264092255384e-05, 3.3245334634557366e-05, 3.4988028346560895e-05, 3.6730722058564425e-05, 3.8473415770567954e-05, 4.021610948257148e-05, 4.195880319457501e-05, 4.370149690657854e-05, 4.544419061858207e-05, 4.71868843305856e-05, 4.892957804258913e-05, 5.067227175459266e-05, 5.2414965466596186e-05, 5.4157659178599715e-05, 5.5900352890603244e-05, 5.764304660260677e-05, 5.93857403146103e-05, 6.112843402661383e-05, 6.287112773861736e-05, 6.461382145062089e-05]}, "parameters/mlp_extractor.value_net.0.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 4.0, 5.0, 7.0, 12.0, 18.0, 18.0, 28.0, 37.0, 64.0, 89.0, 114.0, 171.0, 178.0, 239.0, 305.0, 368.0, 430.0, 522.0, 598.0, 659.0, 760.0, 781.0, 888.0, 878.0, 889.0, 949.0, 861.0, 830.0, 788.0, 734.0, 676.0, 599.0, 556.0, 490.0, 390.0, 321.0, 265.0, 224.0, 195.0, 115.0, 100.0, 75.0, 64.0, 25.0, 16.0, 12.0, 7.0, 11.0, 3.0, 5.0, 3.0, 1.0, 2.0, 1.0, 0.0, 1.0], "bins": [-0.4046933352947235, -0.3924649655818939, -0.3802366256713867, -0.36800825595855713, -0.35577988624572754, -0.34355151653289795, -0.33132314682006836, -0.31909480690956116, -0.30686643719673157, -0.294638067483902, -0.2824097275733948, -0.2701813578605652, -0.2579529881477356, -0.245724618434906, -0.2334962636232376, -0.2212679088115692, -0.20903953909873962, -0.19681116938591003, -0.18458281457424164, -0.17235445976257324, -0.16012609004974365, -0.14789772033691406, -0.13566936552524567, -0.12344100326299667, -0.11121264100074768, -0.09898427873849869, -0.0867559164762497, -0.0745275542140007, -0.06229919195175171, -0.050070829689502716, -0.03784246742725372, -0.02561410516500473, -0.01338571310043335, -0.0011573508381843567, 0.011071011424064636, 0.02329937368631363, 0.03552773594856262, 0.047756098210811615, 0.05998446047306061, 0.0722128227353096, 0.0844411849975586, 0.09666954725980759, 0.10889790952205658, 0.12112627178430557, 0.13335463404655457, 0.14558300375938416, 0.15781135857105255, 0.17003971338272095, 0.18226808309555054, 0.19449645280838013, 0.20672480762004852, 0.21895316243171692, 0.2311815321445465, 0.2434099018573761, 0.2556382417678833, 0.2678666114807129, 0.2800949811935425, 0.29232335090637207, 0.30455172061920166, 0.31678006052970886, 0.32900843024253845, 0.34123679995536804, 0.35346513986587524, 0.36569350957870483, 0.3779218792915344]}, "parameters/mlp_extractor.value_net.0.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 3.0, 1.0, 4.0, 2.0, 1.0, 1.0, 1.0, 5.0, 0.0, 2.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 2.0, 2.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 2.0, 0.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 0.0, 1.0, 2.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0025735697709023952, -0.0024920233990997076, -0.00241047702729702, -0.0023289306554943323, -0.0022473842836916447, -0.002165837911888957, -0.0020842915400862694, -0.0020027451682835817, -0.001921198796480894, -0.0018396524246782064, -0.0017581060528755188, -0.0016765596810728312, -0.0015950133092701435, -0.0015134669374674559, -0.0014319205656647682, -0.0013503741938620806, -0.001268827822059393, -0.0011872814502567053, -0.0011057350784540176, -0.00102418870665133, -0.0009426423348486423, -0.0008610959630459547, -0.0007795495912432671, -0.0006980032194405794, -0.0006164568476378918, -0.0005349104758352041, -0.0004533641040325165, -0.00037181773222982883, -0.0002902713604271412, -0.00020872498862445354, -0.0001271786168217659, -4.5632245019078255e-05, 3.5913893952965736e-05, 0.00011746026575565338, 0.00019900663755834103, 0.00028055300936102867, 0.0003620993811637163, 0.00044364575296640396, 0.0005251921247690916, 0.0006067384965717793, 0.0006882848683744669, 0.0007698312401771545, 0.0008513776119798422, 0.0009329239837825298, 0.0010144703555852175, 0.0010960167273879051, 0.0011775630991905928, 0.0012591094709932804, 0.001340655842795968, 0.0014222022145986557, 0.0015037485864013433, 0.001585294958204031, 0.0016668413300067186, 0.0017483877018094063, 0.001829934073612094, 0.0019114804454147816, 0.001993026817217469, 0.002074573189020157, 0.0021561195608228445, 0.002237665932625532, 0.00231921230442822, 0.0024007586762309074, 0.002482305048033595, 0.0025638514198362827, 0.0026453977916389704]}, "parameters/mlp_extractor.value_net.2.weight": {"_type": "histogram", "values": [1.0, 2.0, 0.0, 2.0, 4.0, 2.0, 5.0, 9.0, 16.0, 14.0, 16.0, 15.0, 21.0, 29.0, 28.0, 31.0, 46.0, 47.0, 52.0, 58.0, 83.0, 91.0, 115.0, 110.0, 119.0, 127.0, 134.0, 153.0, 160.0, 157.0, 152.0, 184.0, 146.0, 141.0, 147.0, 154.0, 161.0, 167.0, 145.0, 129.0, 108.0, 99.0, 116.0, 93.0, 80.0, 67.0, 62.0, 52.0, 45.0, 38.0, 34.0, 26.0, 23.0, 23.0, 19.0, 11.0, 4.0, 5.0, 1.0, 4.0, 2.0, 1.0, 5.0, 5.0], "bins": [-0.5879209637641907, -0.569955587387085, -0.5519902110099792, -0.5340248346328735, -0.5160594582557678, -0.4980940818786621, -0.480128675699234, -0.4621632993221283, -0.4441979229450226, -0.42623254656791687, -0.40826717019081116, -0.39030179381370544, -0.37233638763427734, -0.35437101125717163, -0.3364056348800659, -0.3184402585029602, -0.3004748821258545, -0.2825095057487488, -0.26454412937164307, -0.24657873809337616, -0.22861336171627045, -0.21064798533916473, -0.19268259406089783, -0.17471721768379211, -0.1567518413066864, -0.1387864649295807, -0.12082108110189438, -0.10285569727420807, -0.08489032089710236, -0.06692494451999664, -0.04895956069231033, -0.030994176864624023, -0.013028860092163086, 0.004936520010232925, 0.022901900112628937, 0.04086728021502495, 0.05883266031742096, 0.07679803669452667, 0.09476342052221298, 0.11272880434989929, 0.130694180727005, 0.14865955710411072, 0.16662493348121643, 0.18459032475948334, 0.20255570113658905, 0.22052107751369476, 0.23848646879196167, 0.2564518451690674, 0.2744172215461731, 0.2923825979232788, 0.3103479743003845, 0.32831335067749023, 0.34627872705459595, 0.36424410343170166, 0.38220950961112976, 0.4001748859882355, 0.4181402623653412, 0.4361056387424469, 0.4540710151195526, 0.4720363914966583, 0.4900017976760864, 0.5079671740531921, 0.5259325504302979, 0.5438979268074036, 0.5618633031845093]}, "parameters/mlp_extractor.value_net.2.bias": {"_type": "histogram", "values": [1.0, 1.0, 1.0, 2.0, 3.0, 0.0, 4.0, 1.0, 1.0, 2.0, 6.0, 3.0, 3.0, 0.0, 0.0, 1.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 2.0, 3.0, 1.0, 4.0, 2.0, 2.0, 4.0, 3.0, 0.0, 1.0, 3.0], "bins": [-0.013300394639372826, -0.012884166091680527, -0.012467937543988228, -0.012051708996295929, -0.01163548044860363, -0.011219251900911331, -0.010803023353219032, -0.010386794805526733, -0.009970566257834435, -0.009554337710142136, -0.009138109162449837, -0.008721880614757538, -0.008305652067065239, -0.00788942351937294, -0.007473194506019354, -0.007056965958327055, -0.006640736944973469, -0.00622450839728117, -0.005808279849588871, -0.005392051301896572, -0.004975822754204273, -0.004559594206511974, -0.004143365193158388, -0.0037271366454660892, -0.003310907632112503, -0.002894679084420204, -0.0024784505367279053, -0.0020622217562049627, -0.0016459932085126638, -0.001229764660820365, -0.0008135358802974224, -0.0003973073326051235, 1.8919818103313446e-05, 0.00043514842400327325, 0.000851377029903233, 0.0012676056940108538, 0.0016838342417031527, 0.0021000627893954515, 0.002516291569918394, 0.002932520117610693, 0.0033487481996417046, 0.0037649767473340034, 0.004181205295026302, 0.004597433842718601, 0.0050136623904109, 0.005429890938103199, 0.005846119951456785, 0.006262348499149084, 0.00667857751250267, 0.007094806060194969, 0.007511034607887268, 0.007927263155579567, 0.008343491703271866, 0.008759720250964165, 0.009175948798656464, 0.009592177346348763, 0.010008405894041061, 0.01042463444173336, 0.01084086298942566, 0.011257091537117958, 0.011673320084810257, 0.012089548632502556, 0.012505777180194855, 0.012922005727887154, 0.013338235206902027]}, "parameters/action_net.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 2.0, 3.0, 4.0, 0.0, 4.0, 8.0, 5.0, 6.0, 7.0, 7.0, 9.0, 10.0, 10.0, 18.0, 15.0, 28.0, 23.0, 29.0, 24.0, 37.0, 35.0, 35.0, 30.0, 19.0, 35.0, 38.0, 32.0, 30.0, 29.0, 23.0, 31.0, 25.0, 24.0, 21.0, 19.0, 7.0, 13.0, 16.0, 12.0, 9.0, 5.0, 7.0, 7.0, 7.0, 3.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0], "bins": [-0.005262383259832859, -0.005100742448121309, -0.0049391016364097595, -0.00477746082469821, -0.00461582001298666, -0.00445417920127511, -0.0042925383895635605, -0.004130897577852011, -0.003969256766140461, -0.003807615954428911, -0.0036459751427173615, -0.0034843343310058117, -0.003322693519294262, -0.003161052707582712, -0.0029994118958711624, -0.0028377710841596127, -0.002676130272448063, -0.002514489460736513, -0.0023528486490249634, -0.0021912078373134136, -0.002029567025601864, -0.001867926213890314, -0.0017062854021787643, -0.0015446445904672146, -0.0013830037787556648, -0.001221362967044115, -0.0010597221553325653, -0.0008980813436210155, -0.0007364405319094658, -0.000574799720197916, -0.00041315890848636627, -0.0002515180967748165, -8.987728506326675e-05, 7.1763526648283e-05, 0.00023340433835983276, 0.0003950451500713825, 0.0005566859617829323, 0.000718326773494482, 0.0008799675852060318, 0.0010416083969175816, 0.0012032492086291313, 0.001364890020340681, 0.0015265308320522308, 0.0016881716437637806, 0.0018498124554753304, 0.00201145326718688, 0.00217309407889843, 0.0023347348906099796, 0.0024963757023215294, 0.002658016514033079, 0.002819657325744629, 0.0029812981374561787, 0.0031429389491677284, 0.003304579760879278, 0.003466220572590828, 0.0036278613843023777, 0.0037895021960139275, 0.003951143007725477, 0.004112783819437027, 0.004274424631148577, 0.0044360654428601265, 0.004597706254571676, 0.004759347066283226, 0.004920987877994776, 0.0050826286897063255]}, "parameters/action_net.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0], "bins": [-0.0015051880618557334, -0.001465718960389495, -0.0014262497425079346, -0.001386780641041696, -0.0013473115395754576, -0.001307842438109219, -0.0012683733366429806, -0.0012289041187614202, -0.0011894350172951818, -0.0011499659158289433, -0.001110496697947383, -0.0010710275964811444, -0.001031558495014906, -0.0009920893935486674, -0.000952620233874768, -0.0009131510742008686, -0.0008736819727346301, -0.0008342128712683916, -0.0007947437115944922, -0.0007552745519205928, -0.0007158054504543543, -0.0006763363489881158, -0.0006368671893142164, -0.000597398029640317, -0.0005579289281740785, -0.00051845982670784, -0.00047899066703394055, -0.0004395215364638716, -0.00040005240589380264, -0.0003605832753237337, -0.00032111414475366473, -0.0002816450141835958, -0.000242175767198205, -0.00020270663662813604, -0.00016323750605806708, -0.00012376837548799813, -8.429924491792917e-05, -4.483011434786022e-05, -5.360983777791262e-06, 3.4108146792277694e-05, 7.357727736234665e-05, 0.0001130464079324156, 0.00015251553850248456, 0.00019198466907255352, 0.00023145379964262247, 0.0002709229302126914, 0.0003103920607827604, 0.00034986119135282934, 0.0003893303219228983, 0.00042879945249296725, 0.0004682685830630362, 0.0005077377427369356, 0.0005472068442031741, 0.0005866759456694126, 0.000626145105343312, 0.0006656142650172114, 0.0007050833664834499, 0.0007445524679496884, 0.0007840216276235878, 0.0008234907872974873, 0.0008629598887637258, 0.0009024289902299643, 0.0009418981499038637, 0.000981367309577763, 0.0010208364110440016]}, "parameters/value_net.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 2.0, 2.0, 4.0, 0.0, 0.0, 1.0, 3.0, 1.0, 2.0, 2.0, 0.0, 1.0, 3.0, 2.0, 2.0, 0.0, 1.0, 1.0, 0.0, 3.0, 1.0, 2.0, 1.0, 4.0, 3.0, 1.0, 3.0, 3.0, 1.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.29199501872062683, -0.2820616662502289, -0.27212831377983093, -0.2621949315071106, -0.25226157903671265, -0.2423282265663147, -0.23239487409591675, -0.2224615216255188, -0.21252815425395966, -0.2025948017835617, -0.19266143441200256, -0.18272808194160461, -0.17279472947120667, -0.16286136209964752, -0.15292800962924957, -0.14299464225769043, -0.13306128978729248, -0.12312792986631393, -0.11319456994533539, -0.10326121747493744, -0.09332785755395889, -0.08339449763298035, -0.0734611451625824, -0.06352778524160385, -0.053594425320625305, -0.04366106539964676, -0.03372770920395851, -0.023794351145625114, -0.013860993087291718, -0.003927633166313171, 0.006005723029375076, 0.015939079225063324, 0.025872468948364258, 0.035805828869342804, 0.04573918506503105, 0.0556725412607193, 0.06560590118169785, 0.07553926110267639, 0.08547261357307434, 0.09540597349405289, 0.10533933341503143, 0.11527269333600998, 0.12520605325698853, 0.13513940572738647, 0.14507275819778442, 0.15500612556934357, 0.16493947803974152, 0.17487284541130066, 0.1848061978816986, 0.19473955035209656, 0.2046729177236557, 0.21460627019405365, 0.2245396375656128, 0.23447299003601074, 0.2444063425064087, 0.25433969497680664, 0.2642730474472046, 0.27420639991760254, 0.2841397523880005, 0.2940731346607208, 0.3040064871311188, 0.3139398396015167, 0.3238731920719147, 0.3338065445423126, 0.34373992681503296]}, "parameters/value_net.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [-0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931]}, "global_step": 17370, "rollout/ep_len_mean": 85.66000366210938, "rollout/ep_rew_mean": -475.6424865722656, "time/fps": 7.0}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_134114-Run 3/run-Run 3.wandb b/ROAR_gym/wandb/run-20220505_134114-Run 3/run-Run 3.wandb
new file mode 100644
index 0000000..b23e4e8
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_134114-Run 3/run-Run 3.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_143754-Run 3/files/config.yaml b/ROAR_gym/wandb/run-20220505_143754-Run 3/files/config.yaml
new file mode 100644
index 0000000..2bc57d4
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_143754-Run 3/files/config.yaml	
@@ -0,0 +1,341 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 1
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000002C81B763C88>
+_n_updates:
+  desc: null
+  value: 0
+_num_timesteps_at_start:
+  desc: null
+  value: 9178
+_total_timesteps:
+  desc: null
+  value: 1009178
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651786675
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 3
+      - 5
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000002C81B774798>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000002C803826C08>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: 'deque([{''r'': -321.5, ''l'': 86, ''t'': 14.630985}, {''r'': -329.75, ''l'':
+    89, ''t'': 26.733723}, {''r'': -428.75, ''l'': 60, ''t'': 34.895036}, {''r'':
+    -289.25, ''l'': 77, ''t'': 45.507071}, {''r'': -253.0, ''l'': 67, ''t'': 54.585569},
+    {''r'': -447.0, ''l'': 66, ''t'': 63.455285}, {''r'': -473.25, ''l'': 73, ''t'':
+    73.671977}, {''r'': -811.5, ''l'': 170, ''t'': 94.978929}, {''r'': -313.5, ''l'':
+    84, ''t'': 106.115271}, {''r'': -569.25, ''l'': 101, ''t'': 120.139401}, {''r'':
+    -374.25, ''l'': 102, ''t'': 133.490993}, {''r'': -566.0, ''l'': 99, ''t'': 146.411725},
+    {''r'': -460.0, ''l'': 69, ''t'': 155.977911}, {''r'': -844.75, ''l'': 179, ''t'':
+    178.729965}, {''r'': -432.0, ''l'': 62, ''t'': 187.237033}, {''r'': -398.75, ''l'':
+    53, ''t'': 195.079395}, {''r'': -561.0, ''l'': 98, ''t'': 207.894246}, {''r'':
+    -580.25, ''l'': 104, ''t'': 221.602841}, {''r'': -701.25, ''l'': 138, ''t'': 239.508466},
+    {''r'': -566.0, ''l'': 99, ''t'': 252.598367}, {''r'': -553.0, ''l'': 96, ''t'':
+    265.374571}, {''r'': -453.0, ''l'': 67, ''t'': 275.030178}, {''r'': -523.5, ''l'':
+    87, ''t'': 286.655849}, {''r'': -488.25, ''l'': 77, ''t'': 297.096747}, {''r'':
+    -520.75, ''l'': 87, ''t'': 309.168294}, {''r'': -738.75, ''l'': 149, ''t'': 328.210766},
+    {''r'': -426.75, ''l'': 60, ''t'': 336.323419}, {''r'': -464.25, ''l'': 71, ''t'':
+    345.854625}, {''r'': -493.5, ''l'': 79, ''t'': 356.48982}, {''r'': -358.0, ''l'':
+    97, ''t'': 369.539576}, {''r'': -851.75, ''l'': 181, ''t'': 393.616576}, {''r'':
+    -499.5, ''l'': 81, ''t'': 404.60332}, {''r'': -618.5, ''l'': 114, ''t'': 419.780224},
+    {''r'': -560.0, ''l'': 98, ''t'': 433.346111}, {''r'': -269.25, ''l'': 72, ''t'':
+    443.058648}, {''r'': -376.5, ''l'': 46, ''t'': 449.897027}, {''r'': -540.75, ''l'':
+    92, ''t'': 462.195543}, {''r'': -614.5, ''l'': 113, ''t'': 476.962573}, {''r'':
+    -484.25, ''l'': 76, ''t'': 487.556525}, {''r'': -527.75, ''l'': 89, ''t'': 522.525194},
+    {''r'': -289.25, ''l'': 77, ''t'': 543.980543}, {''r'': -479.25, ''l'': 75, ''t'':
+    563.592634}, {''r'': -491.25, ''l'': 78, ''t'': 583.823042}, {''r'': -321.75,
+    ''l'': 87, ''t'': 607.012361}, {''r'': -249.0, ''l'': 66, ''t'': 625.001963},
+    {''r'': -511.5, ''l'': 84, ''t'': 642.116594}, {''r'': -333.75, ''l'': 90, ''t'':
+    661.272294}, {''r'': -196.5, ''l'': 51, ''t'': 675.509868}, {''r'': -501.5, ''l'':
+    81, ''t'': 694.946674}, {''r'': -779.25, ''l'': 161, ''t'': 732.301245}, {''r'':
+    -586.25, ''l'': 105, ''t'': 758.623806}, {''r'': -435.0, ''l'': 63, ''t'': 774.515991},
+    {''r'': -487.25, ''l'': 77, ''t'': 795.373943}, {''r'': -228.75, ''l'': 60, ''t'':
+    811.225356}, {''r'': -465.25, ''l'': 71, ''t'': 827.572395}, {''r'': -423.75,
+    ''l'': 59, ''t'': 842.655164}, {''r'': -394.5, ''l'': 51, ''t'': 855.603567},
+    {''r'': -467.25, ''l'': 72, ''t'': 874.277055}, {''r'': -121.0, ''l'': 34, ''t'':
+    21.073886}, {''r'': -274.5, ''l'': 21, ''t'': 33.287714}, {''r'': -331.25, ''l'':
+    38, ''t'': 55.047471}, {''r'': -392.5, ''l'': 58, ''t'': 87.317428}, {''r'': -299.75,
+    ''l'': 28, ''t'': 119.249713}, {''r'': -315.0, ''l'': 33, ''t'': 130.927235},
+    {''r'': -324.25, ''l'': 36, ''t'': 142.05538}, {''r'': -153.75, ''l'': 45, ''t'':
+    167.836993}, {''r'': -279.5, ''l'': 22, ''t'': 185.312928}, {''r'': -291.5, ''l'':
+    25, ''t'': 198.180636}, {''r'': -280.5, ''l'': 22, ''t'': 212.632527}, {''r'':
+    -322.0, ''l'': 35, ''t'': 232.871317}, {''r'': -378.0, ''l'': 102, ''t'': 18.070229},
+    {''r'': -485.25, ''l'': 76, ''t'': 27.811176}, {''r'': -428.75, ''l'': 60, ''t'':
+    35.856364}, {''r'': -480.25, ''l'': 75, ''t'': 45.721783}, {''r'': -463.25, ''l'':
+    71, ''t'': 55.219325}, {''r'': -399.5, ''l'': 52, ''t'': 62.303052}, {''r'': -484.25,
+    ''l'': 76, ''t'': 72.600851}, {''r'': -456.0, ''l'': 68, ''t'': 81.981676}, {''r'':
+    -362.0, ''l'': 98, ''t'': 95.870379}, {''r'': -485.25, ''l'': 76, ''t'': 105.92679}],
+    maxlen=100)'
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000002C81B774828>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 9178
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000002C81B7BFB08>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651783277.761569
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 3
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_143754-Run 3/files/events.out.tfevents.1651786678.DESKTOP-014BV0C.9720.0 b/ROAR_gym/wandb/run-20220505_143754-Run 3/files/events.out.tfevents.1651786678.DESKTOP-014BV0C.9720.0
new file mode 120000
index 0000000..bd968b4
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_143754-Run 3/files/events.out.tfevents.1651786678.DESKTOP-014BV0C.9720.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 3/PPO_0/events.out.tfevents.1651786678.DESKTOP-014BV0C.9720.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_143754-Run 3/files/model.zip b/ROAR_gym/wandb/run-20220505_143754-Run 3/files/model.zip
new file mode 120000
index 0000000..dd9db90
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_143754-Run 3/files/model.zip	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/models/Run 3/model.zip
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_143754-Run 3/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_143754-Run 3/files/wandb-summary.json
new file mode 100644
index 0000000..07ff159
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_143754-Run 3/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"parameters/features_extractor.network.2.bias": {"bins": [-0.0031528573017567396, -0.0030159512534737587, -0.0028790454380214214, -0.0027421393897384405, -0.0026052333414554596, -0.0024683275260031223, -0.0023314214777201414, -0.0021945154294371605, -0.0020576096139848232, -0.0019207036821171641, -0.001783797750249505, -0.0016468917019665241, -0.001509985770098865, -0.001373079838231206, -0.001236173789948225, -0.001099267858080566, -0.0009623619262129068, -0.0008254559943452477, -0.0006885500042699277, -0.0005516440141946077, -0.00041473808232694864, -0.00027783215045928955, -0.00014092616038396955, -4.02017030864954e-06, 0.00013288576155900955, 0.0002697917225304991, 0.00040669768350198865, 0.0005436036735773087, 0.0006805096054449677, 0.0008174155373126268, 0.0009543215273879468, 0.0010912275174632668, 0.0012281332165002823, 0.0013650391483679414, 0.0015019450802356005, 0.0016388511285185814, 0.0017757570603862405, 0.0019126629922538996, 0.0020495690405368805, 0.0021864748559892178, 0.0023233809042721987, 0.0024602869525551796, 0.002597192768007517, 0.0027340988162904978, 0.0028710048645734787, 0.003007910680025816, 0.003144816728308797, 0.003281722776591778, 0.003418628592044115, 0.003555534640327096, 0.0036924404557794333, 0.003829346504062414, 0.0039662523195147514, 0.004103158600628376, 0.004240064416080713, 0.0043769702315330505, 0.004513876512646675, 0.004650782328099012, 0.004787688609212637, 0.004924594424664974, 0.0050615002401173115, 0.005198406055569649, 0.005335312336683273, 0.005472218152135611, 0.005609123967587948], "_type": "histogram", "values": [1, 0, 1, 2, 1, 0, 0, 2, 2, 0, 1, 3, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 1, 0, 0, 3, 3, 0, 1, 2, 1, 3, 2, 2, 4, 0, 2, 3, 3, 5, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1]}, "_runtime": 3561, "parameters/mlp_extractor.value_net.0.bias": {"_type": "histogram", "values": [1, 0, 0, 1, 0, 0, 1, 1, 3, 1, 4, 2, 1, 1, 1, 5, 0, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 2, 2, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 2, 0, 3, 3, 4, 3, 2, 2, 0, 1, 2, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1], "bins": [-0.0025735697709023952, -0.0024920233990997076, -0.00241047702729702, -0.0023289306554943323, -0.0022473842836916447, -0.002165837911888957, -0.0020842915400862694, -0.0020027451682835817, -0.001921198796480894, -0.0018396524246782064, -0.0017581060528755188, -0.0016765596810728312, -0.0015950133092701435, -0.0015134669374674559, -0.0014319205656647682, -0.0013503741938620806, -0.001268827822059393, -0.0011872814502567053, -0.0011057350784540176, -0.00102418870665133, -0.0009426423348486423, -0.0008610959630459547, -0.0007795495912432671, -0.0006980032194405794, -0.0006164568476378918, -0.0005349104758352041, -0.0004533641040325165, -0.00037181773222982883, -0.0002902713604271412, -0.00020872498862445354, -0.0001271786168217659, -4.5632245019078255e-05, 3.5913893952965736e-05, 0.00011746026575565338, 0.00019900663755834103, 0.00028055300936102867, 0.0003620993811637163, 0.00044364575296640396, 0.0005251921247690916, 0.0006067384965717793, 0.0006882848683744669, 0.0007698312401771545, 0.0008513776119798422, 0.0009329239837825298, 0.0010144703555852175, 0.0010960167273879051, 0.0011775630991905928, 0.0012591094709932804, 0.001340655842795968, 0.0014222022145986557, 0.0015037485864013433, 0.001585294958204031, 0.0016668413300067186, 0.0017483877018094063, 0.001829934073612094, 0.0019114804454147816, 0.001993026817217469, 0.002074573189020157, 0.0021561195608228445, 0.002237665932625532, 0.00231921230442822, 0.0024007586762309074, 0.002482305048033595, 0.0025638514198362827, 0.0026453977916389704]}, "parameters/mlp_extractor.value_net.0.weight": {"_type": "histogram", "bins": [-0.4046933352947235, -0.3924649655818939, -0.3802366256713867, -0.36800825595855713, -0.35577988624572754, -0.34355151653289795, -0.33132314682006836, -0.31909480690956116, -0.30686643719673157, -0.294638067483902, -0.2824097275733948, -0.2701813578605652, -0.2579529881477356, -0.245724618434906, -0.2334962636232376, -0.2212679088115692, -0.20903953909873962, -0.19681116938591003, -0.18458281457424164, -0.17235445976257324, -0.16012609004974365, -0.14789772033691406, -0.13566936552524567, -0.12344100326299667, -0.11121264100074768, -0.09898427873849869, -0.0867559164762497, -0.0745275542140007, -0.06229919195175171, -0.050070829689502716, -0.03784246742725372, -0.02561410516500473, -0.01338571310043335, -0.0011573508381843567, 0.011071011424064636, 0.02329937368631363, 0.03552773594856262, 0.047756098210811615, 0.05998446047306061, 0.0722128227353096, 0.0844411849975586, 0.09666954725980759, 0.10889790952205658, 0.12112627178430557, 0.13335463404655457, 0.14558300375938416, 0.15781135857105255, 0.17003971338272095, 0.18226808309555054, 0.19449645280838013, 0.20672480762004852, 0.21895316243171692, 0.2311815321445465, 0.2434099018573761, 0.2556382417678833, 0.2678666114807129, 0.2800949811935425, 0.29232335090637207, 0.30455172061920166, 0.31678006052970886, 0.32900843024253845, 0.34123679995536804, 0.35346513986587524, 0.36569350957870483, 0.3779218792915344], "values": [1, 0, 0, 0, 0, 0, 2, 0, 4, 5, 7, 12, 18, 18, 28, 37, 64, 89, 114, 171, 178, 239, 305, 368, 430, 522, 598, 659, 760, 781, 888, 878, 889, 949, 861, 830, 788, 734, 676, 599, 556, 490, 390, 321, 265, 224, 195, 115, 100, 75, 64, 25, 16, 12, 7, 11, 3, 5, 3, 1, 2, 1, 0, 1]}, "parameters/value_net.weight": {"values": [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 2, 2, 4, 0, 0, 1, 3, 1, 2, 2, 0, 1, 3, 2, 2, 0, 1, 1, 0, 3, 1, 2, 1, 4, 3, 1, 3, 3, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], "bins": [-0.29199501872062683, -0.2820616662502289, -0.27212831377983093, -0.2621949315071106, -0.25226157903671265, -0.2423282265663147, -0.23239487409591675, -0.2224615216255188, -0.21252815425395966, -0.2025948017835617, -0.19266143441200256, -0.18272808194160461, -0.17279472947120667, -0.16286136209964752, -0.15292800962924957, -0.14299464225769043, -0.13306128978729248, -0.12312792986631393, -0.11319456994533539, -0.10326121747493744, -0.09332785755395889, -0.08339449763298035, -0.0734611451625824, -0.06352778524160385, -0.053594425320625305, -0.04366106539964676, -0.03372770920395851, -0.023794351145625114, -0.013860993087291718, -0.003927633166313171, 0.006005723029375076, 0.015939079225063324, 0.025872468948364258, 0.035805828869342804, 0.04573918506503105, 0.0556725412607193, 0.06560590118169785, 0.07553926110267639, 0.08547261357307434, 0.09540597349405289, 0.10533933341503143, 0.11527269333600998, 0.12520605325698853, 0.13513940572738647, 0.14507275819778442, 0.15500612556934357, 0.16493947803974152, 0.17487284541130066, 0.1848061978816986, 0.19473955035209656, 0.2046729177236557, 0.21460627019405365, 0.2245396375656128, 0.23447299003601074, 0.2444063425064087, 0.25433969497680664, 0.2642730474472046, 0.27420639991760254, 0.2841397523880005, 0.2940731346607208, 0.3040064871311188, 0.3139398396015167, 0.3238731920719147, 0.3338065445423126, 0.34373992681503296], "_type": "histogram"}, "parameters/features_extractor.network.0.weight": {"values": [1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 4, 9, 6, 15, 18, 39, 56, 81, 117, 143, 167, 264, 320, 401, 503, 592, 647, 816, 952, 1049, 1144, 1275, 1282, 1336, 1406, 1372, 1315, 1231, 1202, 1066, 1020, 917, 762, 689, 540, 403, 327, 263, 235, 173, 125, 87, 70, 46, 32, 22, 12, 9, 2, 5, 1, 1, 1, 1], "_type": "histogram", "bins": [-0.24751348793506622, -0.24037176370620728, -0.23323003947734833, -0.22608831524848938, -0.21894659101963043, -0.21180486679077148, -0.20466315746307373, -0.1975214183330536, -0.19037970900535583, -0.1832379847764969, -0.17609626054763794, -0.168954536318779, -0.16181281208992004, -0.1546710878610611, -0.14752936363220215, -0.1403876543045044, -0.13324591517448425, -0.1261041909456253, -0.11896246671676636, -0.11182074248790741, -0.10467901825904846, -0.09753729403018951, -0.09039557725191116, -0.08325385302305222, -0.07611213624477386, -0.06897041201591492, -0.06182868778705597, -0.05468696728348732, -0.04754524305462837, -0.040403518825769424, -0.033261798322200775, -0.026120074093341827, -0.01897832751274109, -0.011836604215204716, -0.004694880917668343, 0.002446841448545456, 0.009588565677404404, 0.01673028990626335, 0.023872010409832, 0.03101373463869095, 0.03815546631813049, 0.04529719054698944, 0.05243891477584839, 0.05958063527941704, 0.06672236323356628, 0.07386408746242523, 0.08100580424070358, 0.08814752846956253, 0.09528924524784088, 0.10243096947669983, 0.10957269370555878, 0.11671441793441772, 0.12385614216327667, 0.13099786639213562, 0.13813957571983337, 0.14528131484985352, 0.15242302417755127, 0.15956474840641022, 0.16670647263526917, 0.1738481968641281, 0.18098992109298706, 0.188131645321846, 0.19527336955070496, 0.2024150788784027, 0.20955681800842285]}, "parameters/features_extractor.network.4.bias": {"_type": "histogram", "bins": [-0.0008271285914815962, -0.0007474945159628987, -0.0006678604404442012, -0.0005882263649255037, -0.0005085922894068062, -0.00042895821388810873, -0.00034932413836941123, -0.00026969006285071373, -0.00019005598733201623, -0.00011042191181331873, -3.078783629462123e-05, 4.884623922407627e-05, 0.00012848031474277377, 0.00020811439026147127, 0.00028774846578016877, 0.00036738254129886627, 0.00044701661681756377, 0.0005266506923362613, 0.0006062847678549588, 0.0006859188433736563, 0.0007655529188923538, 0.0008451869944110513, 0.0009248210699297488, 0.0010044551454484463, 0.0010840892791748047, 0.001163723412901163, 0.0012433574302121997, 0.0013229914475232363, 0.0014026255812495947, 0.001482259714975953, 0.0015618937322869897, 0.0016415277495980263, 0.0017211618833243847, 0.001800796017050743, 0.0018804300343617797, 0.0019600640516728163, 0.0020396981853991747, 0.002119332319125533, 0.002198966220021248, 0.0022786003537476063, 0.0023582344874739647, 0.002437868621200323, 0.0025175027549266815, 0.0025971366558223963, 0.0026767707895487547, 0.002756404923275113, 0.002836038824170828, 0.0029156729578971863, 0.0029953070916235447, 0.003074941225349903, 0.0031545753590762615, 0.0032342092599719763, 0.0033138433936983347, 0.003393477527424693, 0.003473111428320408, 0.0035527455620467663, 0.0036323796957731247, 0.003712013829499483, 0.0037916479632258415, 0.0038712818641215563, 0.003950916230678558, 0.0040305498987436295, 0.004110184032469988, 0.004189818166196346, 0.004269452299922705], "values": [3, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 3, 1, 1, 4, 1, 0, 6, 3, 2, 3, 1, 1, 1, 4, 1, 4, 1, 1, 1, 0, 3, 1, 1, 2, 1, 2]}, "Episode reward": -996.5, "parameters/mlp_extractor.policy_net.2.weight": {"_type": "histogram", "bins": [-0.6038489937782288, -0.5848334431648254, -0.5658178925514221, -0.5468023419380188, -0.5277868509292603, -0.5087713003158569, -0.4897557497024536, -0.4707401990890503, -0.451724648475647, -0.43270909786224365, -0.41369354724884033, -0.3946780264377594, -0.3756624758243561, -0.35664692521095276, -0.3376314043998718, -0.3186158537864685, -0.2996003031730652, -0.28058475255966187, -0.26156920194625854, -0.2425536811351776, -0.2235381305217743, -0.20452257990837097, -0.18550704419612885, -0.16649150848388672, -0.1474759578704834, -0.12846040725708008, -0.10944487154483795, -0.09042932838201523, -0.0714137852191925, -0.05239824205636978, -0.03338269889354706, -0.014367163181304932, 0.004648327827453613, 0.023663870990276337, 0.04267941415309906, 0.06169495731592178, 0.0807105004787445, 0.09972604364156723, 0.11874158680438995, 0.13775712251663208, 0.1567726731300354, 0.17578822374343872, 0.19480375945568085, 0.21381929516792297, 0.2328348457813263, 0.2518503963947296, 0.27086591720581055, 0.28988146781921387, 0.3088970184326172, 0.3279125690460205, 0.34692811965942383, 0.36594364047050476, 0.3849591910839081, 0.4039747416973114, 0.42299026250839233, 0.44200581312179565, 0.461021363735199, 0.4800369143486023, 0.4990524649620056, 0.5180680155754089, 0.5370835065841675, 0.5560990571975708, 0.5751146078109741, 0.5941301584243774, 0.6131457090377808], "values": [1, 0, 0, 1, 3, 2, 3, 8, 11, 8, 11, 20, 21, 34, 28, 36, 54, 50, 61, 95, 95, 95, 94, 106, 135, 146, 157, 175, 161, 157, 169, 169, 190, 164, 174, 143, 159, 145, 150, 104, 121, 109, 81, 74, 75, 47, 41, 43, 34, 21, 33, 20, 19, 9, 13, 7, 3, 4, 2, 2, 1, 0, 0, 2]}, "highest_speed": 55.13274472377327, "largest_steps": 125, "parameters/action_net.bias": {"values": [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2], "bins": [-0.0015051880618557334, -0.001465718960389495, -0.0014262497425079346, -0.001386780641041696, -0.0013473115395754576, -0.001307842438109219, -0.0012683733366429806, -0.0012289041187614202, -0.0011894350172951818, -0.0011499659158289433, -0.001110496697947383, -0.0010710275964811444, -0.001031558495014906, -0.0009920893935486674, -0.000952620233874768, -0.0009131510742008686, -0.0008736819727346301, -0.0008342128712683916, -0.0007947437115944922, -0.0007552745519205928, -0.0007158054504543543, -0.0006763363489881158, -0.0006368671893142164, -0.000597398029640317, -0.0005579289281740785, -0.00051845982670784, -0.00047899066703394055, -0.0004395215364638716, -0.00040005240589380264, -0.0003605832753237337, -0.00032111414475366473, -0.0002816450141835958, -0.000242175767198205, -0.00020270663662813604, -0.00016323750605806708, -0.00012376837548799813, -8.429924491792917e-05, -4.483011434786022e-05, -5.360983777791262e-06, 3.4108146792277694e-05, 7.357727736234665e-05, 0.0001130464079324156, 0.00015251553850248456, 0.00019198466907255352, 0.00023145379964262247, 0.0002709229302126914, 0.0003103920607827604, 0.00034986119135282934, 0.0003893303219228983, 0.00042879945249296725, 0.0004682685830630362, 0.0005077377427369356, 0.0005472068442031741, 0.0005866759456694126, 0.000626145105343312, 0.0006656142650172114, 0.0007050833664834499, 0.0007445524679496884, 0.0007840216276235878, 0.0008234907872974873, 0.0008629598887637258, 0.0009024289902299643, 0.0009418981499038637, 0.000981367309577763, 0.0010208364110440016], "_type": "histogram"}, "highest_actual_score": -426.79214831683055, "parameters/features_extractor.network.7.bias": {"_type": "histogram", "bins": [-0.0026178755797445774, -0.002537802094593644, -0.0024577283766120672, -0.002377654891461134, -0.002297581173479557, -0.0022175076883286238, -0.002137433970347047, -0.0020573604851961136, -0.0019772867672145367, -0.0018972131656482816, -0.0018171395640820265, -0.0017370659625157714, -0.0016569923609495163, -0.001576918875798583, -0.001496845274232328, -0.0014167716726660728, -0.0013366981875151396, -0.0012566245859488845, -0.0011765509843826294, -0.0010964773828163743, -0.0010164037812501192, -0.000936330237891525, -0.0008562566945329309, -0.0007761830929666758, -0.0006961094914004207, -0.0006160358898341656, -0.0005359622882679105, -0.0004558887449093163, -0.0003758151433430612, -0.0002957415417768061, -0.00021566796931438148, -0.00013559439685195684, -5.552079528570175e-05, 2.4552791728638113e-05, 0.00010462637874297798, 0.00018469996575731784, 0.0002647735527716577, 0.0003448471543379128, 0.00042492072680033743, 0.0005049942992627621, 0.0005850679008290172, 0.0006651415023952723, 0.0007452151039615273, 0.0008252886473201215, 0.0009053622488863766, 0.0009854359086602926, 0.0010655093938112259, 0.001145582995377481, 0.001225656596943736, 0.0013057301985099912, 0.0013858038000762463, 0.0014658774016425014, 0.0015459510032087564, 0.0016260244883596897, 0.0017060980899259448, 0.0017861716914922, 0.001866245293058455, 0.00194631889462471, 0.0020263923797756433, 0.0021064660977572203, 0.0021865395829081535, 0.0022666133008897305, 0.0023466867860406637, 0.002426760271191597, 0.002506833989173174], "values": [1, 0, 1, 1, 2, 2, 2, 0, 5, 5, 6, 5, 10, 7, 7, 13, 7, 5, 8, 5, 2, 8, 0, 3, 2, 4, 4, 3, 3, 0, 1, 1, 1, 2, 2, 4, 5, 2, 2, 4, 6, 5, 1, 0, 5, 5, 10, 3, 9, 9, 11, 8, 10, 3, 10, 5, 1, 0, 2, 3, 0, 1, 3, 1]}, "parameters/features_extractor.network.2.weight": {"_type": "histogram", "bins": [-0.2456759214401245, -0.2382456213235855, -0.2308153212070465, -0.2233850061893463, -0.2159547060728073, -0.2085244059562683, -0.2010941058397293, -0.1936638057231903, -0.1862334907054901, -0.1788031905889511, -0.1713728904724121, -0.16394257545471191, -0.1565122753381729, -0.1490819752216339, -0.1416516751050949, -0.1342213749885559, -0.1267910748720169, -0.1193607747554779, -0.1119304671883583, -0.1045001670718193, -0.09706985950469971, -0.0896395593881607, -0.0822092592716217, -0.0747789591550827, -0.0673486590385437, -0.0599183551967144, -0.0524880513548851, -0.0450577512383461, -0.0376274473965168, -0.0301971435546875, -0.0227668434381485, -0.015336539596319199, -0.007906243205070496, -0.0004759402945637703, 0.006954362615942955, 0.014384664595127106, 0.021814968436956406, 0.029245272278785706, 0.03667557239532471, 0.04410587623715401, 0.051536187529563904, 0.058966491371393204, 0.0663967952132225, 0.0738270953297615, 0.0812574028968811, 0.0886877030134201, 0.0961180031299591, 0.10354830324649811, 0.11097860336303711, 0.11840890347957611, 0.1258392035961151, 0.1332695186138153, 0.1406998187303543, 0.1481301188468933, 0.1555604189634323, 0.1629907190799713, 0.1704210340976715, 0.1778513342142105, 0.1852816343307495, 0.1927119493484497, 0.2001422494649887, 0.2075725495815277, 0.2150028496980667, 0.2224331498146057, 0.22986344993114471], "values": [1, 1, 0, 1, 2, 12, 9, 5, 18, 37, 31, 67, 79, 104, 128, 162, 206, 260, 341, 418, 500, 606, 689, 839, 909, 988, 1088, 1234, 1372, 1424, 1452, 1532, 1532, 1591, 1571, 1538, 1440, 1329, 1210, 1171, 1006, 996, 792, 714, 639, 541, 467, 385, 306, 270, 183, 153, 111, 92, 60, 51, 36, 21, 10, 17, 10, 1, 7, 3]}, "parameters/mlp_extractor.value_net.2.bias": {"_type": "histogram", "values": [1, 1, 1, 2, 3, 0, 4, 1, 1, 2, 6, 3, 3, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 1, 2, 3, 1, 4, 2, 2, 4, 3, 0, 1, 3], "bins": [-0.013300394639372826, -0.012884166091680527, -0.012467937543988228, -0.012051708996295929, -0.01163548044860363, -0.011219251900911331, -0.010803023353219032, -0.010386794805526733, -0.009970566257834435, -0.009554337710142136, -0.009138109162449837, -0.008721880614757538, -0.008305652067065239, -0.00788942351937294, -0.007473194506019354, -0.007056965958327055, -0.006640736944973469, -0.00622450839728117, -0.005808279849588871, -0.005392051301896572, -0.004975822754204273, -0.004559594206511974, -0.004143365193158388, -0.0037271366454660892, -0.003310907632112503, -0.002894679084420204, -0.0024784505367279053, -0.0020622217562049627, -0.0016459932085126638, -0.001229764660820365, -0.0008135358802974224, -0.0003973073326051235, 1.8919818103313446e-05, 0.00043514842400327325, 0.000851377029903233, 0.0012676056940108538, 0.0016838342417031527, 0.0021000627893954515, 0.002516291569918394, 0.002932520117610693, 0.0033487481996417046, 0.0037649767473340034, 0.004181205295026302, 0.004597433842718601, 0.0050136623904109, 0.005429890938103199, 0.005846119951456785, 0.006262348499149084, 0.00667857751250267, 0.007094806060194969, 0.007511034607887268, 0.007927263155579567, 0.008343491703271866, 0.008759720250964165, 0.009175948798656464, 0.009592177346348763, 0.010008405894041061, 0.01042463444173336, 0.01084086298942566, 0.011257091537117958, 0.011673320084810257, 0.012089548632502556, 0.012505777180194855, 0.012922005727887154, 0.013338235206902027]}, "avg10_score": -437.1666666666667, "parameters/value_net.bias": {"_type": "histogram", "bins": [-0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931, -0.013320422731339931], "values": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, "parameters/mlp_extractor.policy_net.2.bias": {"_type": "histogram", "bins": [-4.691857975558378e-05, -4.517588604358025e-05, -4.343319233157672e-05, -4.169049861957319e-05, -3.994780490756966e-05, -3.820511119556613e-05, -3.6462417483562604e-05, -3.4719723771559075e-05, -3.2977030059555545e-05, -3.1234336347552016e-05, -2.9491642635548487e-05, -2.7748948923544958e-05, -2.600625521154143e-05, -2.42635614995379e-05, -2.252086778753437e-05, -2.0778174075530842e-05, -1.9035480363527313e-05, -1.7292786651523784e-05, -1.5550092939520255e-05, -1.3807399227516726e-05, -1.2064705515513197e-05, -1.0322011803509668e-05, -8.579318091506138e-06, -6.836624379502609e-06, -5.09393066749908e-06, -3.3512369554955512e-06, -1.6085432434920222e-06, 1.3415046851150692e-07, 1.876844180515036e-06, 3.619537892518565e-06, 5.362231604522094e-06, 7.104925316525623e-06, 8.84762266650796e-06, 1.0590316378511488e-05, 1.2333010090515018e-05, 1.4075703802518547e-05, 1.5818397514522076e-05, 1.7561091226525605e-05, 1.9303784938529134e-05, 2.1046478650532663e-05, 2.2789172362536192e-05, 2.453186607453972e-05, 2.627455978654325e-05, 2.801725349854678e-05, 2.9759947210550308e-05, 3.150264092255384e-05, 3.3245334634557366e-05, 3.4988028346560895e-05, 3.6730722058564425e-05, 3.8473415770567954e-05, 4.021610948257148e-05, 4.195880319457501e-05, 4.370149690657854e-05, 4.544419061858207e-05, 4.71868843305856e-05, 4.892957804258913e-05, 5.067227175459266e-05, 5.2414965466596186e-05, 5.4157659178599715e-05, 5.5900352890603244e-05, 5.764304660260677e-05, 5.93857403146103e-05, 6.112843402661383e-05, 6.287112773861736e-05, 6.461382145062089e-05], "values": [1, 2, 1, 0, 0, 0, 0, 2, 0, 1, 1, 0, 1, 0, 0, 1, 2, 0, 1, 2, 1, 5, 1, 0, 1, 3, 3, 2, 2, 1, 2, 2, 0, 2, 1, 0, 1, 3, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 1, 3, 1, 0, 0, 0, 2, 0, 1, 1, 0, 0, 1, 0, 0, 1]}, "parameters/log_std": {"values": [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], "_type": "histogram", "bins": [-0.0027970627415925264, -0.0027187264058738947, -0.002640390070155263, -0.002562053734436631, -0.0024837173987179995, -0.0024053810629993677, -0.002327044727280736, -0.0022487081587314606, -0.002170371823012829, -0.002092035487294197, -0.0020136991515755653, -0.0019353628158569336, -0.0018570264801383018, -0.00177869014441967, -0.0017003536922857165, -0.0016220173565670848, -0.0015436811372637749, -0.0014653448015451431, -0.0013870084658265114, -0.0013086721301078796, -0.001230335794389248, -0.0011519994586706161, -0.0010736630065366626, -0.0009953266708180308, -0.0009169903350993991, -0.0008386539993807673, -0.0007603176636621356, -0.0006819812697358429, -0.0006036449340172112, -0.0005253085982985795, -0.00044697223347611725, -0.00036863586865365505, -0.00029029930010437965, -0.00021196294983383268, -0.0001336265995632857, -5.5290249292738736e-05, 2.3046100977808237e-05, 0.00010138243669643998, 0.00017971880151890218, 0.0002580551663413644, 0.00033639150205999613, 0.00041472783777862787, 0.0004930641734972596, 0.0005714005674235523, 0.000649736903142184, 0.0007280732388608158, 0.0008064096327871084, 0.0008847459685057402, 0.0009630823042243719, 0.0010414186399430037, 0.0011197549756616354, 0.0011980913113802671, 0.0012764276470988989, 0.0013547639828175306, 0.0014331004349514842, 0.001511436770670116, 0.0015897731063887477, 0.0016681094421073794, 0.0017464457778260112, 0.001824782113544643, 0.0019031185656785965, 0.0019814549013972282, 0.00205979123711586, 0.0021381275728344917, 0.0022164639085531235]}, "global_step": 17370, "Episode actual reward": -416.95421243061713, "parameters/mlp_extractor.value_net.2.weight": {"_type": "histogram", "bins": [-0.5879209637641907, -0.569955587387085, -0.5519902110099792, -0.5340248346328735, -0.5160594582557678, -0.4980940818786621, -0.480128675699234, -0.4621632993221283, -0.4441979229450226, -0.42623254656791687, -0.40826717019081116, -0.39030179381370544, -0.37233638763427734, -0.35437101125717163, -0.3364056348800659, -0.3184402585029602, -0.3004748821258545, -0.2825095057487488, -0.26454412937164307, -0.24657873809337616, -0.22861336171627045, -0.21064798533916473, -0.19268259406089783, -0.17471721768379211, -0.1567518413066864, -0.1387864649295807, -0.12082108110189438, -0.10285569727420807, -0.08489032089710236, -0.06692494451999664, -0.04895956069231033, -0.030994176864624023, -0.013028860092163086, 0.004936520010232925, 0.022901900112628937, 0.04086728021502495, 0.05883266031742096, 0.07679803669452667, 0.09476342052221298, 0.11272880434989929, 0.130694180727005, 0.14865955710411072, 0.16662493348121643, 0.18459032475948334, 0.20255570113658905, 0.22052107751369476, 0.23848646879196167, 0.2564518451690674, 0.2744172215461731, 0.2923825979232788, 0.3103479743003845, 0.32831335067749023, 0.34627872705459595, 0.36424410343170166, 0.38220950961112976, 0.4001748859882355, 0.4181402623653412, 0.4361056387424469, 0.4540710151195526, 0.4720363914966583, 0.4900017976760864, 0.5079671740531921, 0.5259325504302979, 0.5438979268074036, 0.5618633031845093], "values": [1, 2, 0, 2, 4, 2, 5, 9, 16, 14, 16, 15, 21, 29, 28, 31, 46, 47, 52, 58, 83, 91, 115, 110, 119, 127, 134, 153, 160, 157, 152, 184, 146, 141, 147, 154, 161, 167, 145, 129, 108, 99, 116, 93, 80, 67, 62, 52, 45, 38, 34, 26, 23, 23, 19, 11, 4, 5, 1, 4, 2, 1, 5, 5]}, "avg10_checkpoints": 83.33333333333333, "time/fps": 7, "_timestamp": 1651786909, "parameters/mlp_extractor.policy_net.0.weight": {"_type": "histogram", "values": [5, 4, 2, 4, 5, 9, 16, 16, 17, 26, 42, 58, 61, 82, 126, 149, 170, 194, 227, 253, 291, 370, 440, 484, 549, 549, 597, 696, 631, 684, 713, 700, 762, 703, 739, 662, 660, 595, 556, 506, 464, 411, 370, 325, 278, 229, 186, 174, 131, 121, 81, 71, 54, 38, 34, 21, 14, 7, 6, 5, 4, 4, 0, 3], "bins": [-0.3184245526790619, -0.3085070848464966, -0.29858964681625366, -0.28867220878601074, -0.27875474095344543, -0.2688372731208801, -0.2589198350906372, -0.2490023821592331, -0.23908492922782898, -0.22916747629642487, -0.21925002336502075, -0.20933257043361664, -0.19941511750221252, -0.1894976645708084, -0.1795802116394043, -0.16966275870800018, -0.15974530577659607, -0.14982785284519196, -0.13991039991378784, -0.12999294698238373, -0.12007549405097961, -0.1101580411195755, -0.10024058818817139, -0.09032313525676727, -0.08040568232536316, -0.07048822939395905, -0.06057077646255493, -0.05065332353115082, -0.040735870599746704, -0.03081841766834259, -0.020900964736938477, -0.010983511805534363, -0.0010660290718078613, 0.008851423859596252, 0.018768876791000366, 0.02868632972240448, 0.038603782653808594, 0.04852123558521271, 0.05843868851661682, 0.06835614144802094, 0.07827359437942505, 0.08819104731082916, 0.09810850024223328, 0.10802595317363739, 0.1179434061050415, 0.12786085903644562, 0.13777831196784973, 0.14769576489925385, 0.15761321783065796, 0.16753067076206207, 0.1774481236934662, 0.1873655766248703, 0.19728302955627441, 0.20720048248767853, 0.21711793541908264, 0.22703538835048676, 0.23695284128189087, 0.24687029421329498, 0.2567877471446991, 0.2667052149772644, 0.2766226530075073, 0.28654009103775024, 0.29645755887031555, 0.30637502670288086, 0.3162924647331238]}, "rollout/ep_len_mean": 85.66000366210938, "rollout/ep_rew_mean": -475.6424865722656, "_step": 25358, "avg10_actual_score": -548.9102950322969, "parameters/action_net.weight": {"_type": "histogram", "bins": [-0.005262383259832859, -0.005100742448121309, -0.0049391016364097595, -0.00477746082469821, -0.00461582001298666, -0.00445417920127511, -0.0042925383895635605, -0.004130897577852011, -0.003969256766140461, -0.003807615954428911, -0.0036459751427173615, -0.0034843343310058117, -0.003322693519294262, -0.003161052707582712, -0.0029994118958711624, -0.0028377710841596127, -0.002676130272448063, -0.002514489460736513, -0.0023528486490249634, -0.0021912078373134136, -0.002029567025601864, -0.001867926213890314, -0.0017062854021787643, -0.0015446445904672146, -0.0013830037787556648, -0.001221362967044115, -0.0010597221553325653, -0.0008980813436210155, -0.0007364405319094658, -0.000574799720197916, -0.00041315890848636627, -0.0002515180967748165, -8.987728506326675e-05, 7.1763526648283e-05, 0.00023340433835983276, 0.0003950451500713825, 0.0005566859617829323, 0.000718326773494482, 0.0008799675852060318, 0.0010416083969175816, 0.0012032492086291313, 0.001364890020340681, 0.0015265308320522308, 0.0016881716437637806, 0.0018498124554753304, 0.00201145326718688, 0.00217309407889843, 0.0023347348906099796, 0.0024963757023215294, 0.002658016514033079, 0.002819657325744629, 0.0029812981374561787, 0.0031429389491677284, 0.003304579760879278, 0.003466220572590828, 0.0036278613843023777, 0.0037895021960139275, 0.003951143007725477, 0.004112783819437027, 0.004274424631148577, 0.0044360654428601265, 0.004597706254571676, 0.004759347066283226, 0.004920987877994776, 0.0050826286897063255], "values": [1, 0, 0, 0, 1, 0, 0, 0, 2, 3, 4, 0, 4, 8, 5, 6, 7, 7, 9, 10, 10, 18, 15, 28, 23, 29, 24, 37, 35, 35, 30, 19, 35, 38, 32, 30, 29, 23, 31, 25, 24, 21, 19, 7, 13, 16, 12, 9, 5, 7, 7, 7, 3, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1]}, "Checkpoint reached": 30, "parameters/mlp_extractor.policy_net.0.bias": {"_type": "histogram", "bins": [-7.380930037470534e-05, -7.18779192538932e-05, -6.994653085712343e-05, -6.801514246035367e-05, -6.608376133954152e-05, -6.415238021872938e-05, -6.222099182195961e-05, -6.028960706316866e-05, -5.8358222304377705e-05, -5.642683754558675e-05, -5.4495452786795795e-05, -5.256406802800484e-05, -5.0632683269213885e-05, -4.870129851042293e-05, -4.6769913751631975e-05, -4.483852899284102e-05, -4.2907144234050065e-05, -4.097575947525911e-05, -3.9044374716468155e-05, -3.71129899576772e-05, -3.5181605198886245e-05, -3.325022044009529e-05, -3.1318835681304336e-05, -2.938745092251338e-05, -2.7456066163722426e-05, -2.552468140493147e-05, -2.3593296646140516e-05, -2.166191188734956e-05, -1.9730527128558606e-05, -1.779914236976765e-05, -1.5867757610976696e-05, -1.3936372852185741e-05, -1.2004991731373593e-05, -1.0073606972582638e-05, -8.142222213791683e-06, -6.210837455000728e-06, -4.279452696209773e-06, -2.3480679374188185e-06, -4.166831786278635e-07, 1.5147015801630914e-06, 3.4460863389540464e-06, 5.377471097745001e-06, 7.308855856535956e-06, 9.240240615326911e-06, 1.1171625374117866e-05, 1.3103010132908821e-05, 1.5034394891699776e-05, 1.696577965049073e-05, 1.8897164409281686e-05, 2.082854916807264e-05, 2.2759933926863596e-05, 2.469131868565455e-05, 2.6622703444445506e-05, 2.855408820323646e-05, 3.0485472962027416e-05, 3.241685772081837e-05, 3.4348242479609326e-05, 3.627962723840028e-05, 3.8211011997191235e-05, 4.014239675598219e-05, 4.2073781514773145e-05, 4.40051662735641e-05, 4.5936551032355055e-05, 4.786793579114601e-05, 4.9799320549936965e-05], "values": [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 2, 1, 1, 0, 0, 0, 2, 3, 1, 0, 3, 2, 4, 1, 6, 4, 3, 4, 2, 5, 1, 0, 2, 0, 1, 0, 2, 1, 2, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1]}, "parameters/features_extractor.network.0.bias": {"_type": "histogram", "bins": [-0.003839140757918358, -0.003682476934045553, -0.0035258133430033922, -0.0033691497519612312, -0.0032124859280884266, -0.003055822104215622, -0.002899158513173461, -0.0027424949221313, -0.0025858310982584953, -0.0024291672743856907, -0.0022725036833435297, -0.0021158400923013687, -0.001959176268428564, -0.0018025125609710813, -0.0016458488535135984, -0.0014891851460561156, -0.0013325214385986328, -0.00117585773114115, -0.0010191940236836672, -0.0008625303162261844, -0.0007058666087687016, -0.0005492029013112187, -0.0003925391938537359, -0.0002358754863962531, -7.92117789387703e-05, 7.745192851871252e-05, 0.00023411563597619534, 0.00039077934343367815, 0.000547443050891161, 0.0007041067583486438, 0.0008607704658061266, 0.0010174341732636094, 0.001174097415059805, 0.0013307611225172877, 0.0014874248299747705, 0.0016440885374322534, 0.0018007522448897362, 0.001957416068762541, 0.002114079659804702, 0.002270743250846863, 0.0024274070747196674, 0.002584070898592472, 0.002740734489634633, 0.002897398080676794, 0.0030540619045495987, 0.0032107257284224033, 0.0033673893194645643, 0.0035240529105067253, 0.00368071673437953, 0.0038373805582523346, 0.003994043916463852, 0.004150707740336657, 0.004307371564209461, 0.004464035388082266, 0.0046206992119550705, 0.004777362570166588, 0.0049340263940393925, 0.005090690217912197, 0.0052473535761237144, 0.005404017399996519, 0.005560681223869324, 0.005717345047742128, 0.005874008871614933, 0.00603067222982645, 0.006187336053699255], "values": [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 1, 3, 0, 1, 0, 1, 0, 2, 2, 0, 4, 1, 2, 0, 2, 0, 0, 3, 0, 1]}, "parameters/features_extractor.network.7.weight": {"values": [1, 0, 0, 1, 2, 4, 8, 19, 46, 77, 112, 203, 391, 571, 922, 1391, 2222, 3336, 4679, 6572, 9018, 12112, 15550, 19633, 24561, 29145, 34123, 38949, 43396, 47098, 49385, 51086, 51418, 50061, 47770, 44393, 39935, 35385, 30607, 25577, 21104, 16408, 12828, 9907, 7305, 5137, 3598, 2509, 1618, 1077, 624, 400, 225, 141, 87, 41, 22, 13, 5, 6, 0, 1, 0, 1], "_type": "histogram", "bins": [-0.13032850623130798, -0.12627224624156952, -0.12221598625183105, -0.118159718811512, -0.11410345882177353, -0.11004719883203506, -0.105990931391716, -0.10193467140197754, -0.09787841141223907, -0.09382215142250061, -0.08976589143276215, -0.08570962399244308, -0.08165336400270462, -0.07759710401296616, -0.0735408365726471, -0.06948457658290863, -0.06542831659317017, -0.0613720566034317, -0.05731579288840294, -0.053259529173374176, -0.04920326918363571, -0.04514700919389725, -0.041090745478868484, -0.03703448176383972, -0.03297822177410126, -0.028921959921717644, -0.02486569806933403, -0.020809436216950417, -0.016753174364566803, -0.01269691251218319, -0.008640650659799576, -0.004584388807415962, -0.0005281269550323486, 0.003528134897351265, 0.0075843967497348785, 0.011640658602118492, 0.015696920454502106, 0.01975318230688572, 0.023809444159269333, 0.027865706011652946, 0.03192196786403656, 0.035978227853775024, 0.04003449156880379, 0.04409075528383255, 0.048147015273571014, 0.05220327526330948, 0.05625953897833824, 0.060315802693367004, 0.06437206268310547, 0.06842832267284393, 0.0724845826625824, 0.07654085010290146, 0.08059711009263992, 0.08465337008237839, 0.08870963752269745, 0.09276589751243591, 0.09682215750217438, 0.10087841749191284, 0.1049346774816513, 0.10899094492197037, 0.11304720491170883, 0.1171034649014473, 0.12115973234176636, 0.12521599233150482, 0.1292722523212433]}, "parameters/features_extractor.network.4.weight": {"_type": "histogram", "bins": [-0.23332037031650543, -0.22567269206047058, -0.21802499890327454, -0.21037732064723969, -0.20272964239120483, -0.1950819492340088, -0.18743427097797394, -0.1797865927219391, -0.17213889956474304, -0.1644912213087082, -0.15684352815151215, -0.1491958498954773, -0.14154815673828125, -0.1339004784822464, -0.12625280022621155, -0.1186051145195961, -0.11095742881298065, -0.1033097431063652, -0.09566205739974976, -0.0880143791437149, -0.08036669343709946, -0.07271900773048401, -0.06507132947444916, -0.05742364376783371, -0.04977595806121826, -0.042128272354602814, -0.034480590373277664, -0.026832906529307365, -0.019185222685337067, -0.011537536978721619, -0.003889854997396469, 0.0037578269839286804, 0.011405527591705322, 0.01905321143567562, 0.02670089527964592, 0.03434857726097107, 0.04199626296758652, 0.049643948674201965, 0.057291630655527115, 0.06493931263685226, 0.07258699834346771, 0.08023468405008316, 0.08788236975669861, 0.09553004801273346, 0.10317773371934891, 0.11082541942596436, 0.1184730976819992, 0.12612077593803406, 0.1337684690952301, 0.14141614735126495, 0.149063840508461, 0.15671151876449585, 0.1643592119216919, 0.17200689017772675, 0.1796545684337616, 0.18730226159095764, 0.1949499398469925, 0.20259761810302734, 0.2102453112602234, 0.21789298951625824, 0.2255406677722931, 0.23318836092948914, 0.240836039185524, 0.24848371744155884, 0.2561314105987549], "values": [1, 2, 2, 1, 5, 7, 15, 14, 27, 39, 59, 86, 114, 180, 213, 263, 325, 439, 558, 677, 778, 977, 1085, 1180, 1431, 1549, 1644, 1732, 1821, 1868, 1906, 1903, 1835, 1714, 1729, 1575, 1473, 1267, 1217, 997, 829, 676, 575, 468, 385, 321, 240, 207, 130, 92, 86, 46, 40, 21, 12, 12, 4, 4, 2, 3, 1, 1, 0, 1]}}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_143754-Run 3/run-Run 3.wandb b/ROAR_gym/wandb/run-20220505_143754-Run 3/run-Run 3.wandb
new file mode 100644
index 0000000..591d67f
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_143754-Run 3/run-Run 3.wandb differ
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/code/ROAR_gym/e2eModel.py b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/code/ROAR_gym/e2eModel.py
new file mode 100644
index 0000000..63c342a
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/code/ROAR_gym/e2eModel.py	
@@ -0,0 +1,350 @@
+"""
+IMPORTANT
+IF YOU HAVE NOT RUN THIS FILE AS 'ADMIN' (OR OPENED PYCHARM AS 'ADMIN')
+STOP AND RESTART WITH ADMIN PRIVILEGES
+
+TODO: Before Running this file make the following changes:
+1. Add the following line:
+    self._last_obs = np.nan_to_num(self._last_obs)
+
+to the following file:
+    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+
+2. Add this line after line 167 such that:
+with th.no_grad():
+    # Convert to pytorch tensor or to TensorDict
+    self._last_obs = np.nan_to_num(self._last_obs)
+    obs_tensor = obs_as_tensor(self._last_obs, self.device)
+    actions, values, log_probs = self.policy.forward(obs_tensor)
+
+3. Add:
+
+        data.pop('_last_obs')
+
+    in  line 652 of base_class.py for sb3
+    possible location of file: \envs\ROAR\Lib\site-packages\stable_baselines3\common\base_class.py
+
+4. Change for on_policy_algorithm.py, in function collect_rollouts add:
+
+        self.env.reset()
+
+    before the following while loop:
+
+        while n_steps < n_rollout_steps:
+"""
+
+# IMPORTS
+# imports for logs and warnings
+import warnings
+import logging
+
+from typing import Optional, Dict
+
+# imports for weights and biases integration
+import wandb
+from wandb.integration.sb3 import WandbCallback
+
+# imports for file path handling
+import os
+import sys
+from pathlib import Path
+
+# imports for reading and writing json config files
+import json
+
+# imports from the ROAR module
+from ROAR_Sim.configurations.configuration import Configuration as CarlaConfig
+from ROAR.configurations.configuration import Configuration as AgentConfig
+from ROAR.agent_module.agent import Agent
+from ROAR.agent_module.rl_e2e_ppo_agent import RLe2ePPOAgent
+from ROAR.agent_module.forward_only_agent import ForwardOnlyAgent   # testing stuff
+
+# imports for reinforcement learning
+import gym
+import torch as th
+from stable_baselines3.ppo.ppo import PPO
+from stable_baselines3.ppo.policies import CnnPolicy
+from stable_baselines3.common.callbacks import CheckpointCallback, EveryNTimesteps, CallbackList, BaseCallback
+from stable_baselines3.common.monitor import Monitor
+from stable_baselines3.common.vec_env import DummyVecEnv, VecVideoRecorder
+
+
+# imports for helper functions and torch cnn models
+from ppo_util import find_latest_model, CustomMaxPoolCNN, Atari_PPO_Adapted_CNN
+
+sys.path.append(Path(os.getcwd()).parent.as_posix())
+
+# imports from config files
+from configurations.ppo_configuration import PPO_params, misc_params, wandb_saves
+agent_config = AgentConfig.parse_file(Path("configurations/agent_configuration.json"))
+carla_config = CarlaConfig.parse_file(Path("configurations/carla_configuration.json"))
+
+# Setup for the loggers
+logging.getLogger("tensorflow").setLevel(logging.ERROR)
+logging.getLogger("numpy").setLevel(logging.ERROR)
+warnings.filterwarnings('ignore')
+try:
+    from ROAR_Gym.envs.roar_env import LoggingCallback
+except:
+    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+
+# os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+#  Parameters & Constants
+CUDA_VISIBLE_DEVICES = 1
+RUN_FPS = misc_params["run_fps"]
+MODEL_DIR = misc_params["model_directory"]
+WANDB_CONFIG_DIR = "configurations/wandb_configuration.json"
+
+
+def json_read_write(file, load_var=None, mode='r'):
+    """
+
+    Args:
+        file: address of json file to be loaded
+        load_var: variable to be written to, or read from
+        mode: 'r' to read from json, 'w' to write to json
+
+    Returns:
+        load_var: variable with data that has been read in mode 'r'
+                  original variable in case of 'w'
+
+    """
+    if mode == 'r':
+        with open(file, mode) as json_file:
+            load_var = json.load(json_file)  # Reading the file
+            print(f"{file} json config read successful")
+            json_file.close()
+            return load_var
+    elif mode == 'w':
+        assert load_var is not None, "load_var was None"
+        with open(file, mode) as json_file:
+            json.dump(load_var, json_file)  # Writing to the file
+            print(f"{file} json config write successful")
+            json_file.close()
+            return load_var
+    else:
+        assert mode == 'w' or 'r', f"unsupported mode type: {mode}"
+        return None
+
+# TODO track previously used run IDs
+def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_random_id=False):
+
+    wandb_config = json_read_write(
+        file=WANDB_CONFIG_DIR,
+        mode='r',
+    )
+
+    if load is True:
+        # Load run_id from the config file
+        run_id = wandb_config["run_id"]
+        assert run_id != "", "Run ID not set even though previous run exists"
+    else:
+        # Create wandb run id
+        if requested_run_id is not None:
+            run_id = requested_run_id
+        else:
+            assert use_random_id is True, "RUN ID NOT SET FOR NEW RUN"
+            run_id = wandb.util.generate_id()
+
+        # Store run_id to wandb_configuration file
+        wandb_config["run_id"] = run_id
+        wandb_config = json_read_write(
+            file=WANDB_CONFIG_DIR,
+            load_var=wandb_config,
+            mode='w',
+        )
+
+    # Create a wandb run variable
+    wandb.tensorboard.patch(
+        # tensorboardX=False,
+        pytorch=True,
+    )
+    run = wandb.init(
+        project=wandb_config["project_name"],
+        entity=wandb_config["entity"],  # Change to whoever wants to log the data
+        config=wandb_hp_config,
+        # sync_tensorboard=True,  # auto-upload sb3's tensorboard metrics
+        save_code=True,  # Allows us to check diff of code between runs
+        resume="allow",
+        # magic=True,
+        id=run_id,
+        name=run_id,
+        #monitor_gym=True,  # auto-upload the videos of agents playing the game,
+    )
+
+    return run
+
+
+class Tensorboard_Faster_Logger(BaseCallback):
+    """
+    Callback for saving a model (the check is done every ``check_freq`` steps)
+    based on the training reward (in practice, we recommend using ``EvalCallback``).
+
+    :param check_freq:
+    :param log_dir: Path to the folder where the model will be saved.
+      It must contains the file created by the ``Monitor`` wrapper.
+    :param verbose: Verbosity level.
+    """
+    def __init__(self, check_freq: int, verbose: int = 1):
+        super(Tensorboard_Faster_Logger, self).__init__(verbose)
+        self.check_freq = check_freq
+
+    # def _init_callback(self) -> None:
+
+    def _on_step(self) -> bool:
+        if self.n_calls % self.check_freq == 0:
+            self.logger.dump(self.num_timesteps)
+        return True
+
+
+def main(pass_num):
+    # Create the gym environment using the configs
+    env = gym.make(
+        id=misc_params["env_name"],
+        params={
+            "agent_config": agent_config,
+            "carla_config": carla_config,
+            "ego_agent_class": RLe2ePPOAgent,
+        }
+    )
+    #print(th.cuda.is_available())
+
+    # Setting the feature extract or based on the environment mode
+    if env.mode == 'baseline':
+        policy_kwargs = dict(
+            features_extractor_class=Atari_PPO_Adapted_CNN,
+            features_extractor_kwargs=dict(features_dim=256)
+        )
+    else:
+        policy_kwargs = dict(
+            features_extractor_class=CustomMaxPoolCNN,
+            features_extractor_kwargs=dict(features_dim=256)
+        )
+
+    # training kwargs for PPO init
+    training_kwargs = PPO_params
+
+    # wandb config for current run hyper-parameters
+    wandb_hp_config = {
+        "policy_type": "CnnPolicy",
+        "env_name": misc_params["env_name"],
+        "training_kwargs": training_kwargs,
+    }
+
+    # Try to find latest model path if we have trained previously
+    latest_model_path = find_latest_model(MODEL_DIR)
+    # FIXME wandb may continue old run if the run crashes before it is logged
+    if latest_model_path is None:
+        # Create new wandb run
+        run = wandb_run_init(
+            wandb_hp_config,
+            load=False,
+            requested_run_id=misc_params["run_name"],
+        )
+
+        # Create model with tensorboard log
+        model = PPO(
+            CnnPolicy,
+            env=env,
+            policy_kwargs=policy_kwargs,
+            tensorboard_log=f"runs/{run.name}",  # TODO add "tensorboard" to logdir name
+            **training_kwargs
+        )
+
+        print(f"Starting new run {run.id}")
+    else:
+        # Load wandb run <-- TODO: What has been stored?
+        run = wandb_run_init(
+            wandb_hp_config,
+            load=True,
+        )
+
+        # Load the model <-- TODO: redirect to new location.
+        model = PPO.load(
+            latest_model_path,
+            env=env,
+            policy_kwargs=policy_kwargs,
+            tensorboard_log=f"runs/{run.name}",  # TODO add "tensorboard" to logdir name
+            **training_kwargs,
+        )
+
+        print(f"Loading old run {run.id}")
+
+    print("Model Loaded Successfully")
+
+    # Defining Callback Functions
+
+    logging_callback = LoggingCallback(model=model)
+
+    faster_Logging_Callback = Tensorboard_Faster_Logger(check_freq=wandb_saves["model_save_freq"])
+
+    checkpoint_callback = CheckpointCallback(
+        save_freq=wandb_saves["model_save_freq"],
+        verbose=2,
+        save_path=(MODEL_DIR / "logs").as_posix()
+    )
+
+    event_callback = EveryNTimesteps(
+        n_steps=wandb_saves["model_save_freq"],
+        callback=checkpoint_callback
+    )
+
+    wandb_callback = WandbCallback( # metadata: path, etc.
+        verbose=2,
+        model_save_path=f"models/{run.id}",
+        gradient_save_freq=PPO_params["n_steps"],
+        model_save_freq=wandb_saves["model_save_freq"],
+    )
+
+    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+        wandb_callback,
+        checkpoint_callback,
+        event_callback,
+        logging_callback
+        # faster_Logging_Callback
+    ])
+
+    # Begin learning
+    model = model.learn(
+        total_timesteps=misc_params["total_timesteps"],
+        callback=callbacks,
+        reset_num_timesteps=False,
+        # tb_log_name=wandb_config["run_id"],
+    )
+
+    # Save Model
+    model.save(MODEL_DIR / f"roar_e2e_model_{pass_num}")  # TODO fix naming convention
+    print("Successful Save!")
+    # # Finish wandb run
+    # run.finish()
+
+if __name__ == '__main__':
+    logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
+                        datefmt="%H:%M:%S", level=logging.INFO)
+    logging.getLogger("Controller").setLevel(logging.ERROR)
+    logging.getLogger("SimplePathFollowingLocalPlanner").setLevel(logging.ERROR)
+    i=0
+    while True:
+        main(i)
+        i += 1
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/conda-environment.yaml b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/conda-environment.yaml
new file mode 100644
index 0000000..e69de29
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/config.yaml b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/config.yaml
new file mode 100644
index 0000000..ec692ae
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/config.yaml	
@@ -0,0 +1,357 @@
+wandb_version: 1
+
+_current_progress_remaining:
+  desc: null
+  value: 0.9746704743860846
+_custom_logger:
+  desc: null
+  value: 'False'
+_episode_num:
+  desc: null
+  value: 0
+_last_episode_starts:
+  desc: null
+  value: '[ True]'
+_last_obs:
+  desc: null
+  value: "[[[[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0.\
+    \ 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0.\
+    \ 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n   \
+    \ [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0.\
+    \ 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0.\
+    \ 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0.\
+    \ 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\
+    \n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ...\
+    \ 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]\n\n\n  [[[0. 0. 0.\
+    \ ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n  \
+    \  ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0.\
+    \ ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]\n\n   [[0. 0. 0. ... 0. 0. 0.]\n\
+    \    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    ...\n    [0. 0.\
+    \ 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]\n    [0. 0. 0. ... 0. 0. 0.]]]]]"
+_last_original_obs:
+  desc: null
+  value: None
+_logger:
+  desc: null
+  value: <stable_baselines3.common.logger.Logger object at 0x000001A90C121848>
+_n_updates:
+  desc: null
+  value: 20
+_num_timesteps_at_start:
+  desc: null
+  value: 34315
+_total_timesteps:
+  desc: null
+  value: 1034315
+_vec_normalize_env:
+  desc: null
+  value: None
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.16
+    code_path: code/ROAR_gym/e2eModel.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.7.12
+    start_time: 1651786975
+    t:
+      1:
+      - 1
+      - 41
+      - 55
+      2:
+      - 1
+      - 41
+      - 55
+      3:
+      - 1
+      - 3
+      - 13
+      - 14
+      - 16
+      - 22
+      - 34
+      4: 3.7.12
+      5: 0.12.16
+      8:
+      - 3
+      - 5
+action_noise:
+  desc: null
+  value: None
+action_space:
+  desc: null
+  value: Box([-2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1.  -2.5 -5.   1. ], [-0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.  -0.5  5.   3.
+    ], (12,), float32)
+algo:
+  desc: null
+  value: PPO
+batch_size:
+  desc: null
+  value: 64
+clip_range:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001A8594E5C18>
+clip_range_vf:
+  desc: null
+  value: None
+device:
+  desc: null
+  value: cpu
+ent_coef:
+  desc: null
+  value: 0.0
+env:
+  desc: null
+  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x000001A841814848>
+env_name:
+  desc: null
+  value: roar-e2e-ppo-v0
+ep_info_buffer:
+  desc: null
+  value: 'deque([{''r'': -528.75, ''l'': 89, ''t'': 2183.22724}, {''r'': -500.5, ''l'':
+    81, ''t'': 2193.772217}, {''r'': -501.5, ''l'': 81, ''t'': 2278.975465}, {''r'':
+    -461.25, ''l'': 70, ''t'': 2288.007459}, {''r'': -523.75, ''l'': 88, ''t'': 2298.965042},
+    {''r'': -435.75, ''l'': 62, ''t'': 2307.116458}, {''r'': -468.25, ''l'': 72, ''t'':
+    2316.473886}, {''r'': -667.0, ''l'': 128, ''t'': 2332.669133}, {''r'': -509.5,
+    ''l'': 83, ''t'': 2343.573204}, {''r'': -509.5, ''l'': 83, ''t'': 2354.075483},
+    {''r'': -582.25, ''l'': 104, ''t'': 2367.13785}, {''r'': -447.0, ''l'': 66, ''t'':
+    2376.073622}, {''r'': -743.0, ''l'': 151, ''t'': 2395.277082}, {''r'': -659.0,
+    ''l'': 126, ''t'': 2410.886319}, {''r'': -394.25, ''l'': 107, ''t'': 2424.386265},
+    {''r'': -713.5, ''l'': 142, ''t'': 2442.205247}, {''r'': -305.5, ''l'': 82, ''t'':
+    2452.870484}, {''r'': -465.25, ''l'': 71, ''t'': 2462.488237}, {''r'': -536.75,
+    ''l'': 91, ''t'': 2474.038613}, {''r'': -446.0, ''l'': 66, ''t'': 2482.931249},
+    {''r'': -504.5, ''l'': 82, ''t'': 2493.932827}, {''r'': -569.0, ''l'': 100, ''t'':
+    2506.703166}, {''r'': -553.0, ''l'': 96, ''t'': 2518.845388}, {''r'': -493.5,
+    ''l'': 79, ''t'': 2529.128018}, {''r'': -539.75, ''l'': 92, ''t'': 2540.947031},
+    {''r'': -473.25, ''l'': 73, ''t'': 2550.551163}, {''r'': -515.5, ''l'': 85, ''t'':
+    2561.821096}, {''r'': -561.0, ''l'': 98, ''t'': 2574.41739}, {''r'': -520.75,
+    ''l'': 87, ''t'': 2585.772798}, {''r'': -497.5, ''l'': 80, ''t'': 2596.55825},
+    {''r'': -749.75, ''l'': 152, ''t'': 2615.716088}, {''r'': -354.0, ''l'': 96, ''t'':
+    2628.263789}, {''r'': -574.0, ''l'': 101, ''t'': 2641.437396}, {''r'': -738.75,
+    ''l'': 149, ''t'': 2660.447495}, {''r'': -469.25, ''l'': 72, ''t'': 2670.037799},
+    {''r'': -325.75, ''l'': 88, ''t'': 2681.976226}, {''r'': -301.5, ''l'': 81, ''t'':
+    2692.67536}, {''r'': -346.0, ''l'': 94, ''t'': 2704.783433}, {''r'': -456.0, ''l'':
+    68, ''t'': 2713.976779}, {''r'': -578.25, ''l'': 103, ''t'': 2727.235261}, {''r'':
+    -551.0, ''l'': 96, ''t'': 2739.849205}, {''r'': -454.0, ''l'': 68, ''t'': 2748.70834},
+    {''r'': -477.25, ''l'': 74, ''t'': 2758.392036}, {''r'': -465.25, ''l'': 71, ''t'':
+    2767.695968}, {''r'': -253.0, ''l'': 67, ''t'': 2776.714006}, {''r'': -435.0,
+    ''l'': 63, ''t'': 2785.288556}, {''r'': -342.0, ''l'': 93, ''t'': 2797.354524},
+    {''r'': -744.75, ''l'': 151, ''t'': 2816.975788}, {''r'': -423.75, ''l'': 59,
+    ''t'': 2824.98525}, {''r'': -437.0, ''l'': 63, ''t'': 2833.409212}, {''r'': -317.5,
+    ''l'': 85, ''t'': 2844.705682}, {''r'': -450.0, ''l'': 67, ''t'': 2853.484568},
+    {''r'': -589.25, ''l'': 106, ''t'': 2867.536126}, {''r'': -566.0, ''l'': 99, ''t'':
+    2880.771442}, {''r'': -461.25, ''l'': 70, ''t'': 2890.171807}, {''r'': -494.5,
+    ''l'': 80, ''t'': 2900.87903}, {''r'': -507.5, ''l'': 83, ''t'': 2912.031872},
+    {''r'': -531.75, ''l'': 90, ''t'': 2923.719686}, {''r'': -427.75, ''l'': 60, ''t'':
+    2931.791074}, {''r'': -628.5, ''l'': 117, ''t'': 2946.854599}, {''r'': -422.75,
+    ''l'': 59, ''t'': 2954.763139}, {''r'': -458.0, ''l'': 69, ''t'': 2963.937724},
+    {''r'': -569.0, ''l'': 100, ''t'': 2977.493226}, {''r'': -491.5, ''l'': 79, ''t'':
+    2987.713591}, {''r'': -462.25, ''l'': 71, ''t'': 2997.155107}, {''r'': -505.5,
+    ''l'': 82, ''t'': 3008.380426}, {''r'': -417.75, ''l'': 58, ''t'': 3016.080088},
+    {''r'': -212.75, ''l'': 56, ''t'': 3023.693192}, {''r'': -562.0, ''l'': 98, ''t'':
+    3036.526028}, {''r'': -450.0, ''l'': 67, ''t'': 3045.475892}, {''r'': -534.75,
+    ''l'': 91, ''t'': 3057.483063}, {''r'': -269.25, ''l'': 72, ''t'': 3067.322178},
+    {''r'': -224.75, ''l'': 59, ''t'': 3075.466063}, {''r'': -576.25, ''l'': 103,
+    ''t'': 3088.926925}, {''r'': -618.5, ''l'': 114, ''t'': 3104.37608}, {''r'': -695.25,
+    ''l'': 136, ''t'': 3121.86135}, {''r'': -441.0, ''l'': 64, ''t'': 3130.33276},
+    {''r'': -237.0, ''l'': 63, ''t'': 3138.768524}, {''r'': -485.25, ''l'': 76, ''t'':
+    3148.784702}, {''r'': -392.5, ''l'': 50, ''t'': 3155.705377}, {''r'': -618.5,
+    ''l'': 114, ''t'': 3171.085482}, {''r'': -412.75, ''l'': 56, ''t'': 3178.643672},
+    {''r'': -577.25, ''l'': 103, ''t'': 3192.023938}, {''r'': -616.5, ''l'': 114,
+    ''t'': 3207.309929}, {''r'': -540.75, ''l'': 92, ''t'': 3219.26562}, {''r'': -496.25,
+    ''l'': 79, ''t'': 3229.580259}, {''r'': -273.25, ''l'': 73, ''t'': 3239.527527},
+    {''r'': -632.75, ''l'': 119, ''t'': 3255.431475}, {''r'': -492.25, ''l'': 78,
+    ''t'': 3266.090657}, {''r'': -592.5, ''l'': 165, ''t'': 3287.898526}, {''r'':
+    -285.25, ''l'': 76, ''t'': 3297.806956}, {''r'': -486.25, ''l'': 77, ''t'': 3307.697387},
+    {''r'': -560.0, ''l'': 98, ''t'': 21.20266}, {''r'': -460.0, ''l'': 69, ''t'':
+    31.328862}, {''r'': -418.75, ''l'': 58, ''t'': 39.740796}, {''r'': -657.75, ''l'':
+    125, ''t'': 56.228121}, {''r'': -476.25, ''l'': 74, ''t'': 66.160737}, {''r'':
+    -456.0, ''l'': 68, ''t'': 80.044044}, {''r'': -414.5, ''l'': 113, ''t'': 110.137575},
+    {''r'': -491.25, ''l'': 78, ''t'': 131.936149}], maxlen=100)'
+ep_success_buffer:
+  desc: null
+  value: deque([], maxlen=100)
+eval_env:
+  desc: null
+  value: None
+gae_lambda:
+  desc: null
+  value: 0.95
+gamma:
+  desc: null
+  value: 0.99
+learning_rate:
+  desc: null
+  value: 1.0e-05
+lr_schedule:
+  desc: null
+  value: <function constant_fn.<locals>.func at 0x000001A8594E5EE8>
+max_grad_norm:
+  desc: null
+  value: 0.5
+n_envs:
+  desc: null
+  value: 1
+n_epochs:
+  desc: null
+  value: 10
+n_steps:
+  desc: null
+  value: 8192
+normalize_advantage:
+  desc: null
+  value: 'True'
+num_timesteps:
+  desc: null
+  value: 34315
+observation_space:
+  desc: null
+  value: "Box([[[[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10.\
+    \ -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n \
+    \  [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ...\
+    \ -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n \
+    \ [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]\n\n\n [[[-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\n  [[-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]]\n\n\n [[[-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10.\
+    \ -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]]\n\
+    \n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n\
+    \   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10.\
+    \ -10.]]\n\n  [[-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10. ... -10.\
+    \ -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   ...\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]\n   [-10. -10. -10. ... -10. -10. -10.]\n   [-10. -10. -10.\
+    \ ... -10. -10. -10.]]]], [[[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]\n\n\n [[[1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1. 1. 1. ... 1. 1. 1.]\n \
+    \  [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   ...\n   [1. 1. 1. ...\
+    \ 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]]\n\n  [[1.\
+    \ 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n\
+    \   ...\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1. ... 1. 1. 1.]\n   [1. 1. 1.\
+    \ ... 1. 1. 1.]]]], (4, 3, 84, 84), float32)"
+policy:
+  desc: null
+  value: "ActorCriticCnnPolicy(\n  (features_extractor): Atari_PPO_Adapted_CNN(\n\
+    \    (network): Sequential(\n      (0): Conv2d(12, 32, kernel_size=(8, 8), stride=(4,\
+    \ 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
+    \ 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
+    \ 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n      (7):\
+    \ Linear(in_features=3136, out_features=256, bias=True)\n    )\n  )\n  (mlp_extractor):\
+    \ MlpExtractor(\n    (shared_net): Sequential()\n    (policy_net): Sequential(\n\
+    \      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): Tanh()\n\
+    \      (2): Linear(in_features=64, out_features=64, bias=True)\n      (3): Tanh()\n\
+    \    )\n    (value_net): Sequential(\n      (0): Linear(in_features=256, out_features=64,\
+    \ bias=True)\n      (1): Tanh()\n      (2): Linear(in_features=64, out_features=64,\
+    \ bias=True)\n      (3): Tanh()\n    )\n  )\n  (action_net): Linear(in_features=64,\
+    \ out_features=12, bias=True)\n  (value_net): Linear(in_features=64, out_features=1,\
+    \ bias=True)\n)"
+policy_class:
+  desc: null
+  value: <class 'stable_baselines3.common.policies.ActorCriticCnnPolicy'>
+policy_kwargs:
+  desc: null
+  value: '{''features_extractor_class'': <class ''ppo_util.Atari_PPO_Adapted_CNN''>,
+    ''features_extractor_kwargs'': {''features_dim'': 256}}'
+policy_type:
+  desc: null
+  value: CnnPolicy
+rollout_buffer:
+  desc: null
+  value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x000001A8593EBC08>
+sde_sample_freq:
+  desc: null
+  value: -1
+seed:
+  desc: null
+  value: 1
+start_time:
+  desc: null
+  value: 1651786978.8466144
+target_kl:
+  desc: null
+  value: None
+tensorboard_log:
+  desc: null
+  value: runs/Run 5
+training_kwargs:
+  desc: null
+  value:
+    batch_size: 64
+    device: cpu
+    ent_coef: 0.0
+    gamma: 0.99
+    learning_rate: 1.0e-05
+    n_steps: 8192
+    seed: 1
+    verbose: 1
+use_sde:
+  desc: null
+  value: 'False'
+verbose:
+  desc: null
+  value: 1
+vf_coef:
+  desc: null
+  value: 0.5
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/diff.patch b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/diff.patch
new file mode 100644
index 0000000..3a8bc09
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/diff.patch	
@@ -0,0 +1,121 @@
+diff --git a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc
+index 925c8f2..704176d 100644
+Binary files a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR_gym/ROAR_Gym/__init__.py b/ROAR_gym/ROAR_Gym/__init__.py
+index 2989d64..a4d9062 100644
+--- a/ROAR_gym/ROAR_Gym/__init__.py
++++ b/ROAR_gym/ROAR_Gym/__init__.py
+@@ -20,7 +20,7 @@ register(
+     entry_point='ROAR_Gym.envs:ROAREnvE2E',
+ )
+ 
+-register(
+-    id='roar-multi-v0',
+-    entry_point='ROAR_Gym.envs:ROARMultiEnv',
+-)
+\ No newline at end of file
++# register(
++#     id='roar-multi-v0',
++#     entry_point='ROAR_Gym.envs:ROARMultiEnv',
++# )
+\ No newline at end of file
+diff --git a/ROAR_gym/ROAR_Gym/envs/__init__.py b/ROAR_gym/ROAR_Gym/envs/__init__.py
+index 21612d9..9f6ffa6 100644
+--- a/ROAR_gym/ROAR_Gym/envs/__init__.py
++++ b/ROAR_gym/ROAR_Gym/envs/__init__.py
+@@ -2,6 +2,6 @@ from ROAR_Gym.envs.roar_env import ROAREnv
+ from ROAR_Gym.envs.roar_pid_env import ROARPIDEnv
+ from ROAR_Gym.envs.roar_env_e2e import ROAREnvE2E
+ from ROAR_Gym.envs.e2eModel_roar_env import ROARppoEnvE2E
+-from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
++# from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
+ from ROAR_Gym.envs.line_detect import *
+ 
+diff --git a/ROAR_gym/configurations/ppo_configuration.py b/ROAR_gym/configurations/ppo_configuration.py
+index 31170af..498c6d6 100644
+--- a/ROAR_gym/configurations/ppo_configuration.py
++++ b/ROAR_gym/configurations/ppo_configuration.py
+@@ -10,8 +10,8 @@ sys.path.append(Path(os.getcwd()).parent.as_posix())
+ misc_params = {
+   "env_name": 'roar-e2e-ppo-v0',
+   "run_fps": 8,  # TODO Link to the environment RUN_FPS
+-  "model_directory": Path("./output/PPOe2e_Run_29"),
+-  "run_name": "Run 29",
++  "model_directory": Path("./output/PPOe2e_Run_1"),
++  "run_name": "Run 3",
+   "total_timesteps": int(1e6),
+ }
+ 
+diff --git a/ROAR_gym/configurations/wandb_configuration.json b/ROAR_gym/configurations/wandb_configuration.json
+index 44a45f0..3b1ea89 100644
+--- a/ROAR_gym/configurations/wandb_configuration.json
++++ b/ROAR_gym/configurations/wandb_configuration.json
+@@ -1 +1 @@
+-{"run_id": "Run 29", "name": "", "project_name": "Baseline", "entity": "roar"}
+\ No newline at end of file
++{"run_id": "Run 5", "name": "", "project_name": "ROAR", "entity": "jingjingwei"}
+\ No newline at end of file
+diff --git a/ROAR_gym/e2eModel.py b/ROAR_gym/e2eModel.py
+index fbd222f..63c342a 100644
+--- a/ROAR_gym/e2eModel.py
++++ b/ROAR_gym/e2eModel.py
+@@ -8,7 +8,7 @@ TODO: Before Running this file make the following changes:
+     self._last_obs = np.nan_to_num(self._last_obs)
+ 
+ to the following file:
+-    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py
++    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+ 
+ 2. Add this line after line 167 such that:
+ with th.no_grad():
+@@ -86,7 +86,7 @@ warnings.filterwarnings('ignore')
+ try:
+     from ROAR_Gym.envs.roar_env import LoggingCallback
+ except:
+-    from ROAR_Gym.ROAR_Gym.envs.roar_env import LoggingCallback
++    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+ 
+ # os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+ #  Parameters & Constants
+@@ -156,7 +156,7 @@ def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_rando
+ 
+     # Create a wandb run variable
+     wandb.tensorboard.patch(
+-        tensorboardX=False,
++        # tensorboardX=False,
+         pytorch=True,
+     )
+     run = wandb.init(
+@@ -253,13 +253,13 @@ def main(pass_num):
+ 
+         print(f"Starting new run {run.id}")
+     else:
+-        # Load wandb run
++        # Load wandb run <-- TODO: What has been stored?
+         run = wandb_run_init(
+             wandb_hp_config,
+             load=True,
+         )
+ 
+-        # Load the model
++        # Load the model <-- TODO: redirect to new location.
+         model = PPO.load(
+             latest_model_path,
+             env=env,
+@@ -289,14 +289,14 @@ def main(pass_num):
+         callback=checkpoint_callback
+     )
+ 
+-    wandb_callback = WandbCallback(
++    wandb_callback = WandbCallback( # metadata: path, etc.
+         verbose=2,
+         model_save_path=f"models/{run.id}",
+         gradient_save_freq=PPO_params["n_steps"],
+         model_save_freq=wandb_saves["model_save_freq"],
+     )
+ 
+-    callbacks = CallbackList([
++    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+         wandb_callback,
+         checkpoint_callback,
+         event_callback,
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/events.out.tfevents.1651786980.DESKTOP-014BV0C.26248.0 b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/events.out.tfevents.1651786980.DESKTOP-014BV0C.26248.0
new file mode 120000
index 0000000..eee0f5e
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/events.out.tfevents.1651786980.DESKTOP-014BV0C.26248.0	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/runs/Run 5/PPO_0/events.out.tfevents.1651786980.DESKTOP-014BV0C.26248.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/model.zip b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/model.zip
new file mode 120000
index 0000000..1533398
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/model.zip	
@@ -0,0 +1 @@
+C:/Users/Ma_Ya/ROAR/ROAR_gym/models/Run 5/model.zip
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/requirements.txt b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/requirements.txt
new file mode 100644
index 0000000..629591c
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/requirements.txt	
@@ -0,0 +1,150 @@
+absl-py==1.0.0
+aiosignal==1.2.0
+ale-py==0.7.5
+argon2-cffi-bindings==21.2.0
+argon2-cffi==21.3.0
+async-timeout==4.0.2
+attrs==21.4.0
+autorom.accept-rom-license==0.4.2
+autorom==0.4.2
+backcall==0.2.0
+beautifulsoup4==4.11.1
+bleach==5.0.0
+cachetools==5.0.0
+carla==0.9.10
+certifi==2019.11.28
+cffi==1.15.0
+charset-normalizer==2.0.12
+click==8.1.3
+cloudpickle==2.0.0
+colorama==0.4.4
+cycler==0.11.0
+debugpy==1.6.0
+decorator==4.4.2
+defusedxml==0.7.1
+deprecated==1.2.13
+distlib==0.3.4
+docker-pycreds==0.4.0
+entrypoints==0.4
+fastjsonschema==2.15.3
+filelock==3.6.0
+fonttools==4.33.3
+frozenlist==1.3.0
+gitdb==4.0.9
+gitpython==3.1.27
+google-auth-oauthlib==0.4.6
+google-auth==2.6.6
+grpcio==1.43.0
+gym==0.21.0
+idna==3.3
+imageio-ffmpeg==0.4.2
+imageio==2.8.0
+importlib-metadata==4.11.3
+importlib-resources==5.7.1
+ipykernel==6.13.0
+ipython-genutils==0.2.0
+ipython==7.33.0
+ipywidgets==7.7.0
+jedi==0.18.1
+jinja2==3.1.2
+joblib==1.1.0
+jsonschema==4.4.0
+jupyter-client==7.3.0
+jupyter-core==4.10.0
+jupyterlab-pygments==0.2.2
+jupyterlab-widgets==1.1.0
+kiwisolver==1.4.2
+markdown==3.3.6
+markupsafe==2.1.1
+matplotlib-inline==0.1.3
+matplotlib==3.5.2
+mistune==0.8.4
+moviepy==1.0.3
+mpmath==1.2.1
+msgpack==1.0.3
+nbclient==0.6.2
+nbconvert==6.5.0
+nbformat==5.4.0
+nest-asyncio==1.5.5
+networkx==2.6.3
+notebook==6.4.11
+numpy==1.19.0
+oauthlib==3.2.0
+open3d==0.10.0.0
+opencv-contrib-python==4.4.0.42
+opencv-python==4.4.0.42
+openvr==1.14.1501
+packaging==21.3
+pandas==1.0.5
+pandocfilters==1.5.0
+parso==0.8.3
+pathtools==0.1.2
+pickleshare==0.7.5
+pillow==8.1.2
+pip==22.0.4
+platformdirs==2.5.2
+plotly==4.14.3
+prettytable==2.0.0
+proglog==0.1.9
+prometheus-client==0.14.1
+promise==2.3
+prompt-toolkit==3.0.29
+protobuf==3.20.1
+psutil==5.9.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycparser==2.21
+pydantic==1.5.1
+pygame==1.9.6
+pyglet==1.5.23
+pygments==2.12.0
+pyparsing==3.0.8
+pyrealsense2==2.38.1.2225
+pyrsistent==0.18.1
+pyserial==3.4
+python-dateutil==2.8.2
+pytz==2022.1
+pywavelets==1.3.0
+pywin32==304
+pywinpty==2.0.5
+pyyaml==6.0
+pyzmq==22.3.0
+ray==1.12.0
+redis==4.2.2
+requests-oauthlib==1.3.1
+requests==2.27.1
+retrying==1.3.3
+rsa==4.8
+scikit-image==0.16.2
+scipy==1.5.2
+send2trash==1.8.0
+sentry-sdk==1.5.11
+setproctitle==1.2.3
+setuptools==62.1.0
+shortuuid==1.0.8
+six==1.16.0
+smmap==5.0.0
+soupsieve==2.3.2.post1
+stable-baselines3==1.5.0
+sympy==1.7.1
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.1
+tensorboard==2.9.0
+terminado==0.13.3
+tinycss2==1.1.1
+torch==1.11.0
+torchvision==0.12.0
+tornado==6.1
+tqdm==4.64.0
+traitlets==5.1.1
+typing-extensions==4.2.0
+urllib3==1.26.9
+virtualenv==20.14.1
+wandb==0.12.16
+wcwidth==0.2.5
+webencodings==0.5.1
+werkzeug==2.1.2
+wheel==0.37.1
+widgetsnbextension==3.6.0
+wrapt==1.14.1
+zipp==3.8.0
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch
new file mode 100644
index 0000000..4ee2d7d
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/upstream_diff_d708606e39ad698b1a87c4198df9f31e1fa01a38.patch	
@@ -0,0 +1,296 @@
+diff --git a/Bridges/__pycache__/__init__.cpython-37.pyc b/Bridges/__pycache__/__init__.cpython-37.pyc
+index 748c80a..893843a 100644
+Binary files a/Bridges/__pycache__/__init__.cpython-37.pyc and b/Bridges/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/Bridges/__pycache__/bridge.cpython-37.pyc b/Bridges/__pycache__/bridge.cpython-37.pyc
+index d31942c..6290ebe 100644
+Binary files a/Bridges/__pycache__/bridge.cpython-37.pyc and b/Bridges/__pycache__/bridge.cpython-37.pyc differ
+diff --git a/Bridges/__pycache__/carla_bridge.cpython-37.pyc b/Bridges/__pycache__/carla_bridge.cpython-37.pyc
+index 2f8c9c7..c364856 100644
+Binary files a/Bridges/__pycache__/carla_bridge.cpython-37.pyc and b/Bridges/__pycache__/carla_bridge.cpython-37.pyc differ
+diff --git a/ROAR/__pycache__/__init__.cpython-37.pyc b/ROAR/__pycache__/__init__.cpython-37.pyc
+index 455e188..c8c0623 100644
+Binary files a/ROAR/__pycache__/__init__.cpython-37.pyc and b/ROAR/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc
+index 84e3be8..1009acf 100644
+Binary files a/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc
+index 0b1ba9f..9742dcc 100644
+Binary files a/ROAR/agent_module/__pycache__/agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc
+index 841d66d..55b89fb 100644
+Binary files a/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/michael_pid_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc
+index 03e1014..92b14a2 100644
+Binary files a/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/occupancy_map_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc
+index cfa960a..42f4506 100644
+Binary files a/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/potential_field_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc
+index c0ee652..303da5c 100644
+Binary files a/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc and b/ROAR/agent_module/__pycache__/pure_pursuit_agent.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc
+index 4204108..e70abce 100644
+Binary files a/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc
+index 98a2b8a..3cd2956 100644
+Binary files a/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc and b/ROAR/agent_module/special_agents/__pycache__/recording_agent.cpython-37.pyc differ
+diff --git a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc
+index 9449546..7e2c553 100644
+Binary files a/ROAR/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc
+index 82c261f..9e685ff 100644
+Binary files a/ROAR/control_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/control_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/controller.cpython-37.pyc b/ROAR/control_module/__pycache__/controller.cpython-37.pyc
+index 6443e8f..90ac7c5 100644
+Binary files a/ROAR/control_module/__pycache__/controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/controller.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc
+index 391e7bc..867822a 100644
+Binary files a/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc and b/ROAR/control_module/__pycache__/pid_controller.cpython-37.pyc differ
+diff --git a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc
+index 0e2ca63..a4696b6 100644
+Binary files a/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc and b/ROAR/control_module/__pycache__/pure_pursuit_control.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc
+index c12f588..5c42b9d 100644
+Binary files a/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc
+index 52c9a49..2f0fb36 100644
+Binary files a/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/depth_to_pointcloud_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc
+index f6e7a5f..5eef87c 100644
+Binary files a/ROAR/perception_module/__pycache__/detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc
+index a3b9d51..105e490 100644
+Binary files a/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/ground_plane_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc
+index 98ce179..0fbbbef 100644
+Binary files a/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_detector.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc
+index d9da805..3bda57a 100644
+Binary files a/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc and b/ROAR/perception_module/__pycache__/obstacle_from_depth.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc
+index 12e72a4..fe8d5a1 100644
+Binary files a/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc
+index aca849f..2a8eb3e 100644
+Binary files a/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc and b/ROAR/perception_module/legacy/__pycache__/point_cloud_detector.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc
+index 62e6f0c..3e54513 100644
+Binary files a/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc
+index dad5d0d..990dca0 100644
+Binary files a/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc and b/ROAR/planning_module/__pycache__/abstract_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc
+index 7bc0045..51a7efa 100644
+Binary files a/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc
+index 174b209..4dba087 100644
+Binary files a/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc and b/ROAR/planning_module/behavior_planner/__pycache__/behavior_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc
+index 19daef3..c32e87d 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc
+index 54bd8f0..d6d0e38 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc
+index 9b54d47..054e40e 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/loop_simple_waypoint_following_local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc
+index 7fe96e6..62f47a3 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/potential_field_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc
+index f666feb..e09db3f 100644
+Binary files a/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc and b/ROAR/planning_module/local_planner/__pycache__/simple_waypoint_following_local_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc
+index e339030..8dece62 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc
+index 3cf685f..d0fbb37 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/mission_planner.cpython-37.pyc differ
+diff --git a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc
+index 0250514..77233df 100644
+Binary files a/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc and b/ROAR/planning_module/mission_planner/__pycache__/waypoint_following_mission_planner.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc
+index 00ab4de..2a15a16 100644
+Binary files a/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc
+index 86f93dc..8dba6e8 100644
+Binary files a/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/camera_models.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc
+index d636bc0..466de9c 100644
+Binary files a/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/data_structures_models.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc
+index d7e8cad..b84d89b 100644
+Binary files a/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/errors.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc
+index 1c8adb5..448e375 100644
+Binary files a/ROAR/utilities_module/__pycache__/module.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/module.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc
+index 6e2c1e3..95f385a 100644
+Binary files a/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/occupancy_map.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc
+index 7341979..9b0a837 100644
+Binary files a/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/utilities.cpython-37.pyc differ
+diff --git a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc
+index 1152170..6fa437a 100644
+Binary files a/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc and b/ROAR/utilities_module/__pycache__/vehicle_models.cpython-37.pyc differ
+diff --git a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc
+index 717c785..a39046d 100644
+Binary files a/ROAR_Sim/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc
+index ad18fd4..c12bd72 100644
+Binary files a/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/__init__.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc
+index 34f7870..b90f5ce 100644
+Binary files a/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc and b/ROAR_Sim/carla_client/__pycache__/carla_runner.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc
+index cab1782..b19abb6 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/camera_manager.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc
+index e5483e6..df1a284 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/hud.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc
+index 67f0c8a..ce64669 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/keyboard_control.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc
+index a98bf88..31473c6 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/sensors.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc
+index 15303f6..c8686a2 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/utilities.cpython-37.pyc differ
+diff --git a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc
+index a3db8ca..dbbb536 100644
+Binary files a/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc and b/ROAR_Sim/carla_client/util/__pycache__/world.cpython-37.pyc differ
+diff --git a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc
+index 683efc4..704176d 100644
+Binary files a/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc and b/ROAR_Sim/configurations/__pycache__/configuration.cpython-37.pyc differ
+diff --git a/ROAR_gym/ROAR_Gym/__init__.py b/ROAR_gym/ROAR_Gym/__init__.py
+index 2989d64..a4d9062 100644
+--- a/ROAR_gym/ROAR_Gym/__init__.py
++++ b/ROAR_gym/ROAR_Gym/__init__.py
+@@ -20,7 +20,7 @@ register(
+     entry_point='ROAR_Gym.envs:ROAREnvE2E',
+ )
+ 
+-register(
+-    id='roar-multi-v0',
+-    entry_point='ROAR_Gym.envs:ROARMultiEnv',
+-)
+\ No newline at end of file
++# register(
++#     id='roar-multi-v0',
++#     entry_point='ROAR_Gym.envs:ROARMultiEnv',
++# )
+\ No newline at end of file
+diff --git a/ROAR_gym/ROAR_Gym/envs/__init__.py b/ROAR_gym/ROAR_Gym/envs/__init__.py
+index 21612d9..9f6ffa6 100644
+--- a/ROAR_gym/ROAR_Gym/envs/__init__.py
++++ b/ROAR_gym/ROAR_Gym/envs/__init__.py
+@@ -2,6 +2,6 @@ from ROAR_Gym.envs.roar_env import ROAREnv
+ from ROAR_Gym.envs.roar_pid_env import ROARPIDEnv
+ from ROAR_Gym.envs.roar_env_e2e import ROAREnvE2E
+ from ROAR_Gym.envs.e2eModel_roar_env import ROARppoEnvE2E
+-from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
++# from ROAR_Gym.envs.roar_multi_env import ROARMultiEnv
+ from ROAR_Gym.envs.line_detect import *
+ 
+diff --git a/ROAR_gym/configurations/ppo_configuration.py b/ROAR_gym/configurations/ppo_configuration.py
+index 31170af..498c6d6 100644
+--- a/ROAR_gym/configurations/ppo_configuration.py
++++ b/ROAR_gym/configurations/ppo_configuration.py
+@@ -10,8 +10,8 @@ sys.path.append(Path(os.getcwd()).parent.as_posix())
+ misc_params = {
+   "env_name": 'roar-e2e-ppo-v0',
+   "run_fps": 8,  # TODO Link to the environment RUN_FPS
+-  "model_directory": Path("./output/PPOe2e_Run_29"),
+-  "run_name": "Run 29",
++  "model_directory": Path("./output/PPOe2e_Run_1"),
++  "run_name": "Run 3",
+   "total_timesteps": int(1e6),
+ }
+ 
+diff --git a/ROAR_gym/configurations/wandb_configuration.json b/ROAR_gym/configurations/wandb_configuration.json
+index 44a45f0..3b1ea89 100644
+--- a/ROAR_gym/configurations/wandb_configuration.json
++++ b/ROAR_gym/configurations/wandb_configuration.json
+@@ -1 +1 @@
+-{"run_id": "Run 29", "name": "", "project_name": "Baseline", "entity": "roar"}
+\ No newline at end of file
++{"run_id": "Run 5", "name": "", "project_name": "ROAR", "entity": "jingjingwei"}
+\ No newline at end of file
+diff --git a/ROAR_gym/e2eModel.py b/ROAR_gym/e2eModel.py
+index fbd222f..63c342a 100644
+--- a/ROAR_gym/e2eModel.py
++++ b/ROAR_gym/e2eModel.py
+@@ -8,7 +8,7 @@ TODO: Before Running this file make the following changes:
+     self._last_obs = np.nan_to_num(self._last_obs)
+ 
+ to the following file:
+-    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py
++    ROAR\venv\Lib\site-packages\stable_baselines3\common\on_policy_algorithm.py  TODO: (solved by install it directly) cannot find this file.
+ 
+ 2. Add this line after line 167 such that:
+ with th.no_grad():
+@@ -86,7 +86,7 @@ warnings.filterwarnings('ignore')
+ try:
+     from ROAR_Gym.envs.roar_env import LoggingCallback
+ except:
+-    from ROAR_Gym.ROAR_Gym.envs.roar_env import LoggingCallback
++    from ROAR_gym.ROAR_Gym.envs.roar_env import LoggingCallback
+ 
+ # os.environ["CUDA_VISIBLE_DEVICES"]="0,1"
+ #  Parameters & Constants
+@@ -156,7 +156,7 @@ def wandb_run_init(wandb_hp_config, load=False, requested_run_id=None, use_rando
+ 
+     # Create a wandb run variable
+     wandb.tensorboard.patch(
+-        tensorboardX=False,
++        # tensorboardX=False,
+         pytorch=True,
+     )
+     run = wandb.init(
+@@ -253,13 +253,13 @@ def main(pass_num):
+ 
+         print(f"Starting new run {run.id}")
+     else:
+-        # Load wandb run
++        # Load wandb run <-- TODO: What has been stored?
+         run = wandb_run_init(
+             wandb_hp_config,
+             load=True,
+         )
+ 
+-        # Load the model
++        # Load the model <-- TODO: redirect to new location.
+         model = PPO.load(
+             latest_model_path,
+             env=env,
+@@ -289,14 +289,14 @@ def main(pass_num):
+         callback=checkpoint_callback
+     )
+ 
+-    wandb_callback = WandbCallback(
++    wandb_callback = WandbCallback( # metadata: path, etc.
+         verbose=2,
+         model_save_path=f"models/{run.id}",
+         gradient_save_freq=PPO_params["n_steps"],
+         model_save_freq=wandb_saves["model_save_freq"],
+     )
+ 
+-    callbacks = CallbackList([
++    callbacks = CallbackList([ # TODO: Looks like it's needed to replace the entire callback
+         wandb_callback,
+         checkpoint_callback,
+         event_callback,
+diff --git a/readme.md b/readme.md
+index 5b12ca0..25639ef 100644
+--- a/readme.md
++++ b/readme.md
+@@ -23,7 +23,7 @@ ROAR/ROAR_Sim/configurations/npc_config.json
+ ### Some Concept
+ CARLA provides support for multi-agent through the following three core concepts.
+ - Actor: Actor is anything that participates in the simulation and can be moved around, for example, vehicles, pedestrians.
+-- Blueprint:Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
++- Blueprint: Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
+ - World: The world is the major ruler of the simulation. It represents the currently loaded map, and contains the setting of parameters of the current simulation environment and functions that create, control and destroy actors. CARLA provides carla.World as the default world setting. 
+ 
+ ### Result
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/wandb-metadata.json b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/wandb-metadata.json
new file mode 100644
index 0000000..760aa73
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/wandb-metadata.json	
@@ -0,0 +1,24 @@
+{
+    "os": "Windows-10-10.0.19041-SP0",
+    "python": "3.7.12",
+    "heartbeatAt": "2022-05-05T21:42:58.138156",
+    "startedAt": "2022-05-05T21:42:55.592569",
+    "docker": null,
+    "gpu": "NVIDIA GeForce RTX 2080",
+    "gpu_count": 1,
+    "cpu_count": 12,
+    "cuda": null,
+    "args": [],
+    "state": "running",
+    "program": "C:/Users/Ma_Ya/ROAR/ROAR_gym/e2eModel.py",
+    "codePath": "ROAR_gym\\e2eModel.py",
+    "git": {
+        "remote": "git@github.com:Allison-1999/ROAR.git",
+        "commit": "a12966ac4c7da853bb30c5ca35a2c6962bff5c44"
+    },
+    "email": "jingjingwei@berkeley.edu",
+    "root": "C:/Users/Ma_Ya/ROAR",
+    "host": "DESKTOP-014BV0C",
+    "username": "Ma_Ya",
+    "executable": "C:\\Users\\Ma_Ya\\.conda\\envs\\ROAR\\python.exe"
+}
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/files/wandb-summary.json b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/wandb-summary.json
new file mode 100644
index 0000000..c07de93
--- /dev/null
+++ b/ROAR_gym/wandb/run-20220505_144255-Run 5/files/wandb-summary.json	
@@ -0,0 +1 @@
+{"Episode reward": -617.5, "Episode actual reward": -681.2176969409295, "Checkpoint reached": 150, "largest_steps": 223, "highest_speed": 72.24744501117682, "avg10_checkpoints": 99.54545454545455, "avg10_score": -465.9318181818182, "avg10_actual_score": -607.9838097433058, "highest_actual_score": -426.79214831683055, "_timestamp": 1651789040.645358, "_runtime": 2065, "_step": 9843, "parameters/log_std": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0028379522264003754, -0.0027510449290275574, -0.0026641373988240957, -0.0025772301014512777, -0.002490322571247816, -0.002403415273874998, -0.00231650797650218, -0.002229600679129362, -0.0021426931489259005, -0.0020557858515530825, -0.001968878321349621, -0.0018819710239768028, -0.001795063610188663, -0.0017081561964005232, -0.0016212488990277052, -0.0015343414852395654, -0.0014474340714514256, -0.0013605266576632857, -0.001273619243875146, -0.001186711946502328, -0.001099804532714188, -0.0010128971189260483, -0.0009259897633455694, -0.0008390824077650905, -0.0007521749939769506, -0.0006652675801888108, -0.0005783602246083319, -0.000491452869027853, -0.0004045454552397132, -0.00031763807055540383, -0.00023073068587109447, -0.00014382333029061556, -5.6915683671832085e-05, 2.999170101247728e-05, 0.00011689908569678664, 0.000203806470381096, 0.00029071385506540537, 0.00037762123974971473, 0.0004645286244340241, 0.000551435980014503, 0.0006383433938026428, 0.0007252508075907826, 0.0008121581631712615, 0.0008990655187517405, 0.0009859729325398803, 0.00107288034632802, 0.001159787643700838, 0.001246695057488978, 0.0013336024712771177, 0.0014205098850652575, 0.0015074172988533974, 0.0015943245962262154, 0.0016812320100143552, 0.001768139423802495, 0.001855046721175313, 0.0019419541349634528, 0.0020288615487515926, 0.0021157688461244106, 0.0022026763763278723, 0.0022895836737006903, 0.002376491203904152, 0.00246339850127697, 0.002550305798649788, 0.002637213096022606, 0.0027241206262260675]}, "parameters/features_extractor.network.0.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 2.0, 4.0, 9.0, 6.0, 15.0, 15.0, 37.0, 59.0, 74.0, 117.0, 143.0, 159.0, 256.0, 319.0, 391.0, 481.0, 604.0, 642.0, 801.0, 925.0, 1062.0, 1142.0, 1252.0, 1293.0, 1346.0, 1383.0, 1370.0, 1339.0, 1217.0, 1211.0, 1081.0, 1034.0, 912.0, 782.0, 679.0, 552.0, 416.0, 343.0, 256.0, 250.0, 169.0, 126.0, 95.0, 62.0, 54.0, 32.0, 22.0, 14.0, 9.0, 2.0, 3.0, 3.0, 1.0, 1.0, 1.0], "bins": [-0.2479815036058426, -0.240836963057518, -0.23369242250919342, -0.22654788196086884, -0.21940334141254425, -0.21225880086421967, -0.20511426031589508, -0.1979697197675705, -0.1908251792192459, -0.18368063867092133, -0.17653609812259674, -0.16939155757427216, -0.16224701702594757, -0.15510247647762299, -0.1479579359292984, -0.14081339538097382, -0.13366885483264923, -0.12652431428432465, -0.11937977373600006, -0.11223523318767548, -0.10509069263935089, -0.0979461520910263, -0.09080161154270172, -0.08365707099437714, -0.07651253044605255, -0.06936798989772797, -0.06222344934940338, -0.055078908801078796, -0.04793436825275421, -0.040789827704429626, -0.03364528715610504, -0.026500746607780457, -0.019356220960617065, -0.01221168041229248, -0.0050671398639678955, 0.0020774006843566895, 0.009221941232681274, 0.01636648178100586, 0.023511022329330444, 0.03065556287765503, 0.037800103425979614, 0.0449446439743042, 0.052089184522628784, 0.05923372507095337, 0.06637826561927795, 0.07352280616760254, 0.08066734671592712, 0.08781188726425171, 0.0949564278125763, 0.10210096836090088, 0.10924550890922546, 0.11639004945755005, 0.12353459000587463, 0.13067913055419922, 0.1378236711025238, 0.1449682116508484, 0.15211275219917297, 0.15925729274749756, 0.16640183329582214, 0.17354637384414673, 0.1806909143924713, 0.1878354549407959, 0.19497999548912048, 0.20212453603744507, 0.20926907658576965]}, "parameters/features_extractor.network.0.bias": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 2.0, 2.0, 0.0, 0.0, 0.0, 1.0, 4.0, 0.0, 1.0, 3.0, 2.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], "bins": [-0.004522524308413267, -0.004320734646171331, -0.004118944983929396, -0.00391715532168746, -0.003715365659445524, -0.0035135759972035885, -0.0033117865677922964, -0.0031099969055503607, -0.002908207243308425, -0.0027064175810664892, -0.0025046279188245535, -0.0023028384894132614, -0.0021010488271713257, -0.0018992590485140681, -0.0016974695026874542, -0.0014956798404455185, -0.0012938901782035828, -0.001092100515961647, -0.0008903109119273722, -0.0006885213078930974, -0.00048673164565116167, -0.00028494198340922594, -8.315243758261204e-05, 0.00011863722465932369, 0.00032042665407061577, 0.0005222163163125515, 0.0007240059203468263, 0.0009257955243811011, 0.0011275851866230369, 0.0013293748488649726, 0.0015311643946915865, 0.0017329540569335222, 0.001934744417667389, 0.0021365340799093246, 0.0023383237421512604, 0.002540113404393196, 0.002741903066635132, 0.0029436927288770676, 0.0031454821582883596, 0.0033472718205302954, 0.0035490617156028748, 0.0037508513778448105, 0.003952641040086746, 0.004154430702328682, 0.004356220364570618, 0.004558010026812553, 0.004759799689054489, 0.004961589351296425, 0.005163378547877073, 0.005365168210119009, 0.005566957872360945, 0.0057687475346028805, 0.005970537196844816, 0.006172326859086752, 0.0063741160556674, 0.006575905717909336, 0.006777695380151272, 0.0069794850423932076, 0.007181274704635143, 0.007383064366877079, 0.007584854029119015, 0.0077866436913609505, 0.007988433353602886, 0.008190223015844822, 0.008392012678086758]}, "parameters/features_extractor.network.2.weight": {"_type": "histogram", "values": [1.0, 1.0, 0.0, 1.0, 2.0, 12.0, 9.0, 5.0, 18.0, 37.0, 32.0, 66.0, 79.0, 104.0, 132.0, 159.0, 207.0, 260.0, 345.0, 419.0, 503.0, 619.0, 687.0, 833.0, 924.0, 1010.0, 1082.0, 1257.0, 1368.0, 1430.0, 1455.0, 1532.0, 1560.0, 1586.0, 1561.0, 1549.0, 1458.0, 1309.0, 1210.0, 1157.0, 1014.0, 974.0, 790.0, 719.0, 625.0, 543.0, 450.0, 387.0, 291.0, 261.0, 183.0, 154.0, 102.0, 83.0, 64.0, 54.0, 27.0, 23.0, 10.0, 16.0, 8.0, 2.0, 8.0, 1.0], "bins": [-0.24576959013938904, -0.2383173555135727, -0.23086513578891754, -0.2234129011631012, -0.21596068143844604, -0.2085084468126297, -0.20105621218681335, -0.1936039924621582, -0.18615177273750305, -0.1786995381116867, -0.17124731838703156, -0.1637950837612152, -0.15634286403656006, -0.1488906294107437, -0.14143839478492737, -0.13398617506027222, -0.12653394043445587, -0.11908171325922012, -0.11162948608398438, -0.10417725145816803, -0.09672503173351288, -0.08927279710769653, -0.08182056993246078, -0.07436834275722504, -0.06691610813140869, -0.05946388095617294, -0.052011653780937195, -0.04455942288041115, -0.0371071957051754, -0.02965496852993965, -0.022202737629413605, -0.014750510454177856, -0.007298275828361511, 0.00015395227819681168, 0.007606180384755135, 0.015058409422636032, 0.02251063659787178, 0.02996286377310753, 0.037415094673633575, 0.044867321848869324, 0.052319541573524475, 0.05977176874876022, 0.06722399592399597, 0.07467623054981232, 0.08212845027446747, 0.08958068490028381, 0.09703291207551956, 0.10448513925075531, 0.11193737387657166, 0.1193896010518074, 0.12684182822704315, 0.1342940628528595, 0.14174628257751465, 0.149198517203331, 0.15665075182914734, 0.1641029715538025, 0.17155519127845764, 0.179007425904274, 0.18645964562892914, 0.19391188025474548, 0.20136409997940063, 0.20881633460521698, 0.21626856923103333, 0.22372078895568848, 0.23117302358150482]}, "parameters/features_extractor.network.2.bias": {"_type": "histogram", "values": [1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 2.0, 0.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 4.0, 0.0, 1.0, 1.0, 0.0, 3.0, 3.0, 2.0, 4.0, 1.0, 0.0, 3.0, 3.0, 2.0, 3.0, 2.0, 3.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.003888980718329549, -0.003710349788889289, -0.003531718859449029, -0.003353087930008769, -0.003174457000568509, -0.002995826071128249, -0.002817195374518633, -0.002638564445078373, -0.002459933515638113, -0.002281302586197853, -0.002102671656757593, -0.0019240407273173332, -0.0017454097978770733, -0.0015667788684368134, -0.0013881480554118752, -0.0012095171259716153, -0.0010308860801160336, -0.0008522551506757736, -0.0006736242212355137, -0.0004949933500029147, -0.00031636242056265473, -0.0001377314911223948, 4.089938011020422e-05, 0.00021953030955046415, 0.00039816112257540226, 0.0005767920520156622, 0.0007554229814559221, 0.0009340538526885211, 0.001112684840336442, 0.001291315769776702, 0.00146994658280164, 0.0016485775122419, 0.0018272087909281254, 0.0020058397203683853, 0.0021844706498086452, 0.002363101579248905, 0.002541732508689165, 0.002720363438129425, 0.002898994367569685, 0.003077625297009945, 0.003256256226450205, 0.0034348871558904648, 0.0036135180853307247, 0.0037921490147709846, 0.003970779944211245, 0.0041494108736515045, 0.0043280418030917645, 0.004506672732532024, 0.004685303196310997, 0.004863934125751257, 0.005042565055191517, 0.005221195984631777, 0.005399826914072037, 0.005578457843512297, 0.005757088772952557, 0.0059357197023928165, 0.0061143506318330765, 0.006292981561273336, 0.006471612490713596, 0.006650243420153856, 0.006828874349594116, 0.007007505279034376, 0.007186136208474636, 0.007364767137914896, 0.007543398067355156]}, "parameters/features_extractor.network.4.weight": {"_type": "histogram", "values": [1.0, 2.0, 2.0, 1.0, 5.0, 7.0, 16.0, 14.0, 26.0, 41.0, 59.0, 85.0, 117.0, 180.0, 216.0, 258.0, 332.0, 437.0, 557.0, 687.0, 769.0, 979.0, 1092.0, 1180.0, 1419.0, 1561.0, 1638.0, 1740.0, 1828.0, 1863.0, 1910.0, 1900.0, 1828.0, 1724.0, 1715.0, 1587.0, 1458.0, 1266.0, 1207.0, 1014.0, 817.0, 672.0, 592.0, 464.0, 378.0, 319.0, 243.0, 205.0, 128.0, 93.0, 83.0, 50.0, 38.0, 22.0, 12.0, 11.0, 4.0, 4.0, 2.0, 3.0, 1.0, 1.0, 0.0, 1.0], "bins": [-0.23295126855373383, -0.2253054529428482, -0.2176596224308014, -0.21001380681991577, -0.20236799120903015, -0.19472216069698334, -0.18707634508609772, -0.1794305145740509, -0.17178469896316528, -0.16413888335227966, -0.15649305284023285, -0.14884723722934723, -0.14120140671730042, -0.1335555911064148, -0.12590977549552917, -0.11826395243406296, -0.11061812937259674, -0.10297230631113052, -0.0953264832496643, -0.08768066763877869, -0.08003484457731247, -0.07238902151584625, -0.06474320590496063, -0.057097382843494415, -0.0494515597820282, -0.04180573672056198, -0.03415991738438606, -0.026514096185564995, -0.018868274986743927, -0.01122245192527771, -0.0035766325891017914, 0.004069186747074127, 0.01171499490737915, 0.019360816106200218, 0.027006637305021286, 0.034652456641197205, 0.04229827970266342, 0.04994410276412964, 0.05758992210030556, 0.06523574143648148, 0.07288156449794769, 0.08052738755941391, 0.08817321062088013, 0.09581902623176575, 0.10346484929323196, 0.11111067235469818, 0.1187564879655838, 0.12640231847763062, 0.13404813408851624, 0.14169394969940186, 0.14933978021144867, 0.1569855958223343, 0.1646314263343811, 0.17227724194526672, 0.17992305755615234, 0.18756887316703796, 0.19521470367908478, 0.2028605192899704, 0.2105063498020172, 0.21815216541290283, 0.22579798102378845, 0.23344381153583527, 0.2410896271467209, 0.2487354576587677, 0.2563812732696533]}, "parameters/features_extractor.network.4.bias": {"_type": "histogram", "values": [1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 2.0, 3.0, 0.0, 2.0, 2.0, 1.0, 4.0, 2.0, 1.0, 4.0, 4.0, 2.0, 1.0, 1.0, 2.0, 1.0, 3.0, 2.0, 0.0, 0.0, 4.0, 2.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0], "bins": [-0.0009839842095971107, -0.0008821723167784512, -0.0007803604239597917, -0.0006785485311411321, -0.0005767366383224726, -0.00047492474550381303, -0.0003731128526851535, -0.00027130095986649394, -0.0001694890670478344, -6.767717422917485e-05, 3.413471858948469e-05, 0.00013594661140814424, 0.00023775850422680378, 0.0003395703970454633, 0.00044138228986412287, 0.0005431941826827824, 0.000645006075501442, 0.0007468179683201015, 0.000848629861138761, 0.0009504417539574206, 0.0010522536467760801, 0.0011540655978024006, 0.0012558774324133992, 0.0013576892670243979, 0.0014595012180507183, 0.0015613131690770388, 0.0016631250036880374, 0.001764936838299036, 0.0018667487893253565, 0.001968560740351677, 0.0020703724585473537, 0.002172184409573674, 0.0022739963605999947, 0.002375808311626315, 0.0024776202626526356, 0.0025794319808483124, 0.002681243931874633, 0.0027830558829009533, 0.00288486760109663, 0.0029866795521229506, 0.003088491503149271, 0.0031903034541755915, 0.003292115405201912, 0.0033939271233975887, 0.003495739074423909, 0.0035975510254502296, 0.0036993627436459064, 0.003801174694672227, 0.0039029866456985474, 0.004004798363894224, 0.004106610547751188, 0.004208422265946865, 0.004310234449803829, 0.004412046167999506, 0.004513857886195183, 0.004615670070052147, 0.004717481788247824, 0.0048192935064435005, 0.004921105690300465, 0.0050229174084961414, 0.005124729126691818, 0.005226541310548782, 0.005328353028744459, 0.005430165212601423, 0.0055319769307971]}, "parameters/features_extractor.network.7.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 1.0, 2.0, 4.0, 9.0, 18.0, 49.0, 75.0, 119.0, 219.0, 397.0, 581.0, 951.0, 1415.0, 2283.0, 3374.0, 4733.0, 6683.0, 9161.0, 12237.0, 15690.0, 19733.0, 24685.0, 29404.0, 34195.0, 39019.0, 43472.0, 47147.0, 49315.0, 51071.0, 51300.0, 49916.0, 47717.0, 44180.0, 39860.0, 35152.0, 30474.0, 25515.0, 20980.0, 16352.0, 12761.0, 9816.0, 7295.0, 5134.0, 3561.0, 2495.0, 1615.0, 1080.0, 628.0, 401.0, 225.0, 136.0, 87.0, 44.0, 21.0, 15.0, 5.0, 5.0, 1.0, 1.0, 0.0, 1.0], "bins": [-0.13002026081085205, -0.12597012519836426, -0.12191997468471527, -0.11786983907222748, -0.11381969600915909, -0.1097695529460907, -0.10571940988302231, -0.10166926681995392, -0.09761913120746613, -0.09356898814439774, -0.08951884508132935, -0.08546870946884155, -0.08141856640577316, -0.07736842334270477, -0.07331828027963638, -0.069268137216568, -0.0652179941534996, -0.06116785109043121, -0.05711771175265312, -0.05306756868958473, -0.04901742935180664, -0.04496728628873825, -0.04091714322566986, -0.03686700016260147, -0.03281685709953308, -0.02876671589910984, -0.0247165746986866, -0.02066643163561821, -0.01661629043519497, -0.012566149234771729, -0.008516006171703339, -0.004465864971280098, -0.00041572749614715576, 0.003634414169937372, 0.0076845558360219, 0.011734697967767715, 0.015784839168190956, 0.019834980368614197, 0.023885123431682587, 0.027935264632105827, 0.03198540210723877, 0.03603554517030716, 0.04008568450808525, 0.04413582757115364, 0.04818596690893173, 0.05223610997200012, 0.05628625303506851, 0.0603363960981369, 0.06438653916120529, 0.06843668222427368, 0.07248682528734207, 0.07653696835041046, 0.08058710396289825, 0.08463724702596664, 0.08868739008903503, 0.09273753315210342, 0.09678767621517181, 0.1008378192782402, 0.1048879623413086, 0.10893809795379639, 0.11298824101686478, 0.11703838407993317, 0.12108852714300156, 0.12513867020606995, 0.12918880581855774]}, "parameters/features_extractor.network.7.bias": {"_type": "histogram", "values": [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 4.0, 3.0, 2.0, 1.0, 4.0, 5.0, 11.0, 5.0, 7.0, 16.0, 7.0, 8.0, 7.0, 9.0, 6.0, 8.0, 3.0, 2.0, 3.0, 0.0, 4.0, 3.0, 1.0, 5.0, 3.0, 4.0, 1.0, 3.0, 3.0, 5.0, 5.0, 6.0, 5.0, 9.0, 10.0, 7.0, 8.0, 8.0, 10.0, 10.0, 7.0, 6.0, 3.0, 5.0, 2.0, 0.0, 1.0, 2.0, 1.0, 3.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.003264455124735832, -0.003154575824737549, -0.003044696291908622, -0.0029348169919103384, -0.0028249374590814114, -0.002715058159083128, -0.002605178626254201, -0.0024952993262559175, -0.0023854197934269905, -0.002275540493428707, -0.00216566096059978, -0.0020557816606014967, -0.0019459021277725697, -0.0018360228277742863, -0.0017261432949453592, -0.0016162639949470758, -0.0015063845785334706, -0.0013965051621198654, -0.0012866257457062602, -0.001176746329292655, -0.0010668669128790498, -0.0009569875546731055, -0.0008471081382595003, -0.000737228721845895, -0.0006273493636399508, -0.0005174699472263455, -0.0004075905308127403, -0.00029771114350296557, -0.00018783172708936036, -7.79523397795856e-05, 3.192707663401961e-05, 0.00014180649304762483, 0.00025168596766889095, 0.00036156538408249617, 0.0004714448004961014, 0.0005813242169097066, 0.0006912036333233118, 0.0008010829915292561, 0.0009109624079428613, 0.0010208417661488056, 0.0011307212989777327, 0.0012406007153913379, 0.001350480131804943, 0.0014603595482185483, 0.0015702389646321535, 0.001680118264630437, 0.001789997797459364, 0.0018998770974576473, 0.0020097563974559307, 0.002119635697454214, 0.002229515230283141, 0.0023393945302814245, 0.0024492740631103516, 0.002559153363108635, 0.002669032895937562, 0.0027789121959358454, 0.0028887917287647724, 0.002998671028763056, 0.003108550561591983, 0.0032184298615902662, 0.0033283093944191933, 0.0034381886944174767, 0.0035480682272464037, 0.003657947527244687, 0.003767827060073614]}, "parameters/mlp_extractor.policy_net.0.weight": {"_type": "histogram", "values": [5.0, 4.0, 2.0, 4.0, 5.0, 9.0, 16.0, 16.0, 17.0, 26.0, 42.0, 58.0, 61.0, 82.0, 126.0, 149.0, 168.0, 197.0, 226.0, 253.0, 291.0, 371.0, 438.0, 485.0, 549.0, 549.0, 597.0, 697.0, 629.0, 684.0, 714.0, 700.0, 764.0, 700.0, 743.0, 660.0, 660.0, 595.0, 555.0, 506.0, 464.0, 411.0, 370.0, 325.0, 279.0, 228.0, 186.0, 174.0, 131.0, 121.0, 81.0, 71.0, 54.0, 39.0, 33.0, 21.0, 14.0, 7.0, 6.0, 5.0, 4.0, 4.0, 0.0, 3.0], "bins": [-0.31839609146118164, -0.30847927927970886, -0.2985624670982361, -0.2886456251144409, -0.27872881293296814, -0.26881200075149536, -0.2588951587677002, -0.24897834658622742, -0.23906153440475464, -0.22914472222328186, -0.2192278951406479, -0.20931106805801392, -0.19939425587654114, -0.18947744369506836, -0.1795606166124344, -0.16964378952980042, -0.15972697734832764, -0.14981016516685486, -0.1398933380842209, -0.12997651100158691, -0.12005969882011414, -0.11014287918806076, -0.10022605955600739, -0.09030923992395401, -0.08039242029190063, -0.07047560065984726, -0.060558781027793884, -0.05064196139574051, -0.040725141763687134, -0.03080832213163376, -0.020891502499580383, -0.010974682867527008, -0.0010578632354736328, 0.008858956396579742, 0.018775776028633118, 0.028692595660686493, 0.03860941529273987, 0.04852623492479324, 0.05844305455684662, 0.0683598741889, 0.07827669382095337, 0.08819351345300674, 0.09811033308506012, 0.1080271527171135, 0.11794397234916687, 0.12786078453063965, 0.13777761161327362, 0.1476944386959076, 0.15761125087738037, 0.16752806305885315, 0.17744489014148712, 0.1873617172241211, 0.19727852940559387, 0.20719534158706665, 0.21711216866970062, 0.2270289957523346, 0.23694580793380737, 0.24686262011528015, 0.25677943229675293, 0.2666962742805481, 0.2766130864620209, 0.28652989864349365, 0.2964467406272888, 0.3063635528087616, 0.3162803649902344]}, "parameters/mlp_extractor.policy_net.0.bias": {"_type": "histogram", "values": [1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 4.0, 2.0, 2.0, 5.0, 5.0, 6.0, 4.0, 2.0, 1.0, 0.0, 1.0, 1.0, 3.0, 2.0, 1.0, 2.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0], "bins": [-0.00010028098040493205, -9.744618000695482e-05, -9.46113868849352e-05, -9.177658648695797e-05, -8.894178608898073e-05, -8.610699296696112e-05, -8.327219256898388e-05, -8.043739944696426e-05, -7.760259904898703e-05, -7.47677986510098e-05, -7.193300552899018e-05, -6.909820513101295e-05, -6.626341200899333e-05, -6.34286116110161e-05, -6.059381121303886e-05, -5.7759014453040436e-05, -5.492421769304201e-05, -5.2089420933043584e-05, -4.925462417304516e-05, -4.6419823775067925e-05, -4.35850270150695e-05, -4.0750230255071074e-05, -3.791542985709384e-05, -3.5080633097095415e-05, -3.224583633709699e-05, -2.9411039577098563e-05, -2.6576240998110734e-05, -2.3741442419122905e-05, -2.090664565912448e-05, -1.8071848899126053e-05, -1.5237050320138223e-05, -1.2402251741150394e-05, -9.567462257109582e-06, -6.732664587616455e-06, -3.897866918123327e-06, -1.0630692486301996e-06, 1.771728420862928e-06, 4.606526090356056e-06, 7.441323759849183e-06, 1.0276122338837013e-05, 1.3110919098835438e-05, 1.5945715858833864e-05, 1.8780514437821694e-05, 2.1615313016809523e-05, 2.445010977680795e-05, 2.7284906536806375e-05, 3.0119705115794204e-05, 3.2954503694782034e-05, 3.578930045478046e-05, 3.8624097214778885e-05, 4.145889397477731e-05, 4.4293694372754544e-05, 4.712849113275297e-05, 4.9963287892751396e-05, 5.279808829072863e-05, 5.5632885050727054e-05, 5.846768181072548e-05, 6.130248220870271e-05, 6.413727533072233e-05, 6.697207572869956e-05, 6.98068761266768e-05, 7.264166924869642e-05, 7.547646964667365e-05, 7.831126276869327e-05, 8.11460631666705e-05]}, "parameters/mlp_extractor.policy_net.2.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 1.0, 3.0, 2.0, 3.0, 8.0, 11.0, 8.0, 11.0, 20.0, 21.0, 34.0, 28.0, 36.0, 54.0, 50.0, 61.0, 95.0, 95.0, 95.0, 94.0, 106.0, 135.0, 146.0, 157.0, 175.0, 161.0, 157.0, 169.0, 169.0, 191.0, 163.0, 174.0, 143.0, 159.0, 146.0, 149.0, 104.0, 121.0, 109.0, 81.0, 74.0, 75.0, 47.0, 41.0, 43.0, 34.0, 21.0, 33.0, 20.0, 19.0, 9.0, 13.0, 7.0, 3.0, 4.0, 2.0, 2.0, 1.0, 0.0, 0.0, 2.0], "bins": [-0.6038520932197571, -0.5848364233970642, -0.5658208131790161, -0.5468051433563232, -0.5277894735336304, -0.5087738037109375, -0.489758163690567, -0.47074252367019653, -0.45172685384750366, -0.4327111840248108, -0.4136955440044403, -0.3946799039840698, -0.37566423416137695, -0.3566485643386841, -0.3376329243183136, -0.3186172842979431, -0.29960161447525024, -0.2805859446525574, -0.2615703046321869, -0.2425546497106552, -0.22353899478912354, -0.20452333986759186, -0.18550768494606018, -0.1664920300245285, -0.14747637510299683, -0.12846072018146515, -0.10944506525993347, -0.0904294103384018, -0.07141375541687012, -0.05239810049533844, -0.03338244557380676, -0.014366790652275085, 0.004648923873901367, 0.023664578795433044, 0.04268023371696472, 0.0616958886384964, 0.08071154356002808, 0.09972719848155975, 0.11874285340309143, 0.1377585083246231, 0.15677416324615479, 0.17578981816768646, 0.19480547308921814, 0.21382112801074982, 0.2328367829322815, 0.25185245275497437, 0.27086809277534485, 0.28988373279571533, 0.3088994026184082, 0.3279150724411011, 0.34693071246147156, 0.36594635248184204, 0.3849620223045349, 0.4039776921272278, 0.42299333214759827, 0.44200897216796875, 0.4610246419906616, 0.4800403118133545, 0.499055951833725, 0.5180715918540955, 0.5370872616767883, 0.5561029314994812, 0.5751185417175293, 0.5941342115402222, 0.613149881362915]}, "parameters/mlp_extractor.policy_net.2.bias": {"_type": "histogram", "values": [2.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 0.0, 2.0, 1.0, 2.0, 2.0, 2.0, 3.0, 2.0, 3.0, 3.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 2.0, 0.0, 1.0, 4.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0], "bins": [-7.439749606419355e-05, -7.17648581485264e-05, -6.913221295690164e-05, -6.64995750412345e-05, -6.386692984960973e-05, -6.123429193394259e-05, -5.860165038029663e-05, -5.596900882665068e-05, -5.3336367273004726e-05, -5.070372571935877e-05, -4.807108416571282e-05, -4.5438442612066865e-05, -4.280580469639972e-05, -4.017315950477496e-05, -3.754052158910781e-05, -3.490788003546186e-05, -3.2275238481815904e-05, -2.964259692816995e-05, -2.7009955374523997e-05, -2.4377315639867447e-05, -2.1744674086221494e-05, -1.911203253257554e-05, -1.647939279791899e-05, -1.3846751244273037e-05, -1.121411332860589e-05, -8.581471774959937e-06, -5.948831130808685e-06, -3.3161904866574332e-06, -6.835489330114797e-07, 1.949092620634474e-06, 4.581732355291024e-06, 7.214373908936977e-06, 9.847019100561738e-06, 1.2479660654207692e-05, 1.5112301298358943e-05, 1.7744941942510195e-05, 2.037758349615615e-05, 2.3010225049802102e-05, 2.5642864784458652e-05, 2.8275506338104606e-05, 3.0908151529729366e-05, 3.354079308337532e-05, 3.617343463702127e-05, 3.880607255268842e-05, 4.143871774431318e-05, 4.407135565998033e-05, 4.670399721362628e-05, 4.9336638767272234e-05, 5.196927668293938e-05, 5.4601918236585334e-05, 5.723455979023129e-05, 5.9867197705898434e-05, 6.24998428975232e-05, 6.513248081319034e-05, 6.77651260048151e-05, 7.039776392048225e-05, 7.30304018361494e-05, 7.566303975181654e-05, 7.82956849434413e-05, 8.092832285910845e-05, 8.356096805073321e-05, 8.619360596640036e-05, 8.88262438820675e-05, 9.145888907369226e-05, 9.409153426531702e-05]}, "parameters/mlp_extractor.value_net.0.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 4.0, 7.0, 5.0, 14.0, 18.0, 18.0, 29.0, 38.0, 66.0, 88.0, 123.0, 173.0, 174.0, 242.0, 315.0, 360.0, 450.0, 515.0, 606.0, 672.0, 774.0, 778.0, 877.0, 882.0, 901.0, 928.0, 870.0, 833.0, 774.0, 729.0, 676.0, 604.0, 538.0, 491.0, 387.0, 324.0, 259.0, 212.0, 195.0, 111.0, 101.0, 72.0, 60.0, 26.0, 17.0, 12.0, 6.0, 11.0, 3.0, 5.0, 3.0, 1.0, 2.0, 1.0, 0.0, 1.0], "bins": [-0.4037497937679291, -0.39152637124061584, -0.3793029487133026, -0.3670795261859894, -0.35485610365867615, -0.3426326811313629, -0.3304092586040497, -0.31818583607673645, -0.3059624135494232, -0.29373899102211, -0.28151556849479675, -0.2692921459674835, -0.2570687234401703, -0.24484530091285706, -0.23262187838554382, -0.2203984558582306, -0.20817503333091736, -0.19595161080360413, -0.1837281882762909, -0.17150476574897766, -0.15928134322166443, -0.1470579206943512, -0.13483449816703796, -0.12261107563972473, -0.1103876531124115, -0.09816423058509827, -0.08594080805778503, -0.0737173855304718, -0.06149396300315857, -0.04927054047584534, -0.037047117948532104, -0.024823695421218872, -0.012600243091583252, -0.00037682056427001953, 0.011846601963043213, 0.024070024490356445, 0.03629344701766968, 0.04851686954498291, 0.06074029207229614, 0.07296371459960938, 0.08518713712692261, 0.09741055965423584, 0.10963398218154907, 0.1218574047088623, 0.13408082723617554, 0.14630424976348877, 0.158527672290802, 0.17075109481811523, 0.18297451734542847, 0.1951979398727417, 0.20742136240005493, 0.21964478492736816, 0.2318682074546814, 0.24409162998199463, 0.25631505250930786, 0.2685384750366211, 0.2807618975639343, 0.29298532009124756, 0.3052087426185608, 0.317432165145874, 0.32965558767318726, 0.3418790102005005, 0.3541024327278137, 0.36632585525512695, 0.3785492777824402]}, "parameters/mlp_extractor.value_net.0.bias": {"_type": "histogram", "values": [2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 3.0, 3.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 4.0, 0.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 2.0, 1.0, 3.0, 1.0, 3.0, 4.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0028360167052596807, -0.00274548283778131, -0.0026549487374722958, -0.002564414869993925, -0.0024738810025155544, -0.0023833471350371838, -0.002292813267558813, -0.0022022791672497988, -0.002111745299771428, -0.0020212114322930574, -0.001930677448399365, -0.0018401434645056725, -0.0017496095970273018, -0.0016590757295489311, -0.0015685417456552386, -0.0014780077617615461, -0.0013874738942831755, -0.0012969400268048048, -0.0012064060429111123, -0.0011158720590174198, -0.0010253381915390491, -0.0009348042658530176, -0.000844270340166986, -0.0007537364144809544, -0.0006632024887949228, -0.0005726685631088912, -0.00048213463742285967, -0.0003916007117368281, -0.0003010667860507965, -0.00021053286036476493, -0.00011999893467873335, -2.946500899270177e-05, 6.106914952397346e-05, 0.00015160307521000504, 0.00024213700089603662, 0.0003326709265820682, 0.0004232048522680998, 0.0005137387779541314, 0.0006042727036401629, 0.0006948066293261945, 0.0007853405550122261, 0.0008758744806982577, 0.0009664084063842893, 0.0010569423902779818, 0.0011474762577563524, 0.001238010125234723, 0.0013285441091284156, 0.001419078093022108, 0.0015096119605004787, 0.0016001458279788494, 0.001690679811872542, 0.0017812137957662344, 0.001871747663244605, 0.0019622815307229757, 0.00205281563103199, 0.0021433494985103607, 0.0022338833659887314, 0.002324417233467102, 0.0024149511009454727, 0.002505485201254487, 0.0025960190687328577, 0.0026865529362112284, 0.0027770870365202427, 0.0028676209039986134, 0.002958154771476984]}, "parameters/mlp_extractor.value_net.2.weight": {"_type": "histogram", "values": [1.0, 2.0, 0.0, 1.0, 4.0, 1.0, 5.0, 8.0, 15.0, 12.0, 14.0, 20.0, 21.0, 24.0, 30.0, 33.0, 43.0, 44.0, 50.0, 58.0, 78.0, 90.0, 103.0, 114.0, 122.0, 132.0, 138.0, 138.0, 165.0, 163.0, 159.0, 172.0, 141.0, 155.0, 153.0, 162.0, 165.0, 155.0, 154.0, 116.0, 120.0, 103.0, 108.0, 109.0, 71.0, 66.0, 63.0, 53.0, 37.0, 42.0, 36.0, 30.0, 19.0, 27.0, 14.0, 13.0, 1.0, 5.0, 2.0, 3.0, 2.0, 2.0, 5.0, 4.0], "bins": [-0.5987967848777771, -0.5805466771125793, -0.5622965693473816, -0.5440465211868286, -0.5257964134216309, -0.5075463056564331, -0.48929619789123535, -0.4710460901260376, -0.45279601216316223, -0.4345459043979645, -0.4162958264350891, -0.39804571866989136, -0.3797956109046936, -0.36154553294181824, -0.3432954251766205, -0.3250453472137451, -0.30679523944854736, -0.2885451316833496, -0.27029505372047424, -0.2520449459552765, -0.23379485309123993, -0.21554476022720337, -0.19729465246200562, -0.17904455959796906, -0.1607944667339325, -0.14254437386989594, -0.12429427355527878, -0.10604417324066162, -0.08779408037662506, -0.0695439875125885, -0.051293887197971344, -0.03304378688335419, -0.014793634414672852, 0.003456462174654007, 0.021706558763980865, 0.039956655353307724, 0.05820675194263458, 0.07645684480667114, 0.0947069451212883, 0.11295704543590546, 0.13120713829994202, 0.14945723116397858, 0.16770732402801514, 0.1859574317932129, 0.20420752465724945, 0.222457617521286, 0.24070772528648376, 0.25895780324935913, 0.2772079110145569, 0.29545801877975464, 0.31370809674263, 0.33195820450782776, 0.3502082824707031, 0.3684583902359009, 0.38670849800109863, 0.4049586057662964, 0.42320868372917175, 0.4414587914943695, 0.4597088694572449, 0.4779589772224426, 0.4962090849876404, 0.5144591331481934, 0.5327092409133911, 0.5509593486785889, 0.5692094564437866]}, "parameters/mlp_extractor.value_net.2.bias": {"_type": "histogram", "values": [2.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 6.0, 2.0, 5.0, 2.0, 2.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 2.0, 0.0, 2.0, 0.0, 2.0, 2.0, 3.0, 2.0, 1.0, 3.0, 2.0, 3.0, 1.0, 1.0, 2.0], "bins": [-0.02368241734802723, -0.0229591466486454, -0.022235877811908722, -0.021512607112526894, -0.020789338275790215, -0.020066067576408386, -0.019342798739671707, -0.01861952804028988, -0.0178962592035532, -0.01717298850417137, -0.016449719667434692, -0.015726448968052864, -0.015003180131316185, -0.014279910363256931, -0.013556640595197678, -0.01283336989581585, -0.012110100127756596, -0.011386830359697342, -0.010663560591638088, -0.009940290823578835, -0.00921702105551958, -0.008493751287460327, -0.007770481053739786, -0.0070472112856805325, -0.0063239410519599915, -0.005600671283900738, -0.004877401515841484, -0.00415413174778223, -0.003430861746892333, -0.0027075919788330793, -0.001984321977943182, -0.0012610522098839283, -0.0005377829074859619, 0.0001854869187809527, 0.0009087567450478673, 0.0016320266295224428, 0.0023552963975816965, 0.00307856616564095, 0.0038018361665308475, 0.004525105934590101, 0.005248375236988068, 0.005971645005047321, 0.006694914773106575, 0.007418184541165829, 0.008141454309225082, 0.008864724077284336, 0.00958799384534359, 0.010311264544725418, 0.011034534312784672, 0.011757804080843925, 0.01248107384890318, 0.013204343616962433, 0.013927613385021687, 0.01465088315308094, 0.015374153852462769, 0.016097422689199448, 0.016820693388581276, 0.017543964087963104, 0.018267232924699783, 0.01899050362408161, 0.01971377246081829, 0.02043704316020012, 0.021160311996936798, 0.021883582696318626, 0.022606851533055305]}, "parameters/action_net.weight": {"_type": "histogram", "values": [1.0, 1.0, 0.0, 3.0, 1.0, 1.0, 1.0, 2.0, 2.0, 6.0, 7.0, 7.0, 6.0, 5.0, 7.0, 6.0, 15.0, 9.0, 15.0, 17.0, 19.0, 31.0, 26.0, 21.0, 23.0, 26.0, 32.0, 22.0, 35.0, 32.0, 25.0, 27.0, 27.0, 28.0, 21.0, 19.0, 24.0, 23.0, 19.0, 33.0, 18.0, 23.0, 12.0, 8.0, 6.0, 19.0, 7.0, 10.0, 12.0, 6.0, 5.0, 2.0, 3.0, 3.0, 4.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 2.0], "bins": [-0.0049731554463505745, -0.004812793806195259, -0.004652432631701231, -0.004492070991545916, -0.0043317093513906, -0.004171348176896572, -0.004010986536741257, -0.0038506248965859413, -0.0036902634892612696, -0.003529902081936598, -0.0033695404417812824, -0.0032091790344566107, -0.003048817627131939, -0.0028884559869766235, -0.002728094579651952, -0.00256773317232728, -0.0024073715321719646, -0.002247010124847293, -0.0020866484846919775, -0.0019262870773673058, -0.0017659255536273122, -0.0016055640298873186, -0.0014452026225626469, -0.0012848410988226533, -0.0011244795750826597, -0.0009641180513426661, -0.0008037565858103335, -0.0006433951202780008, -0.00048303359653800726, -0.0003226720727980137, -0.00016231060726568103, -1.9491417333483696e-06, 0.0001584123820066452, 0.0003187738766428083, 0.00047913537127897143, 0.0006394968368113041, 0.0007998583605512977, 0.0009602198842912912, 0.001120581291615963, 0.0012809428153559566, 0.0014413043390959501, 0.0016016658628359437, 0.0017620273865759373, 0.001922388793900609, 0.0020827502012252808, 0.002243111841380596, 0.002403473248705268, 0.0025638346560299397, 0.002724196296185255, 0.002884557703509927, 0.003044919343665242, 0.003205280750989914, 0.0033656423911452293, 0.003526003798469901, 0.003686365205794573, 0.0038467268459498882, 0.004007088020443916, 0.004167449660599232, 0.00432781083509326, 0.004488172475248575, 0.004648534115403891, 0.004808895289897919, 0.004969256930053234, 0.0051296185702085495, 0.005289980210363865]}, "parameters/action_net.bias": {"_type": "histogram", "values": [2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], "bins": [-0.0012873630039393902, -0.0012380973203107715, -0.0011888317530974746, -0.0011395660694688559, -0.001090300502255559, -0.0010410348186269403, -0.0009917692514136434, -0.0009425035677850246, -0.0008932380005717278, -0.00084397237515077, -0.0007947067497298121, -0.0007454411243088543, -0.0006961754988878965, -0.0006469098152592778, -0.0005976442480459809, -0.0005483785644173622, -0.0004991129389964044, -0.0004498473135754466, -0.0004005816881544888, -0.000351316062733531, -0.0003020504373125732, -0.00025278478278778493, -0.00020351915736682713, -0.00015425353194586933, -0.00010498787742108107, -5.5722248362144455e-05, -6.4566193032078445e-06, 4.2809013393707573e-05, 9.207463881466538e-05, 0.0001413402787875384, 0.0001906059042084962, 0.00023987152962945402, 0.00028913712594658136, 0.00033840275136753917, 0.00038766837678849697, 0.0004369340022094548, 0.0004861996276304126, 0.0005354653112590313, 0.0005847308784723282, 0.0006339965621009469, 0.0006832621293142438, 0.0007325277547352016, 0.0007817933801561594, 0.0008310590055771172, 0.000880324630998075, 0.0009295903146266937, 0.0009788558818399906, 0.0010281215654686093, 0.001077387249097228, 0.0011266529327258468, 0.0011759184999391437, 0.0012251841835677624, 0.0012744497507810593, 0.001323715434409678, 0.0013729810016229749, 0.0014222466852515936, 0.0014715122524648905, 0.0015207779360935092, 0.001570043503306806, 0.0016193091869354248, 0.0016685747541487217, 0.0017178404377773404, 0.0017671060049906373, 0.001816371688619256, 0.001865637255832553]}, "parameters/value_net.weight": {"_type": "histogram", "values": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 3.0, 3.0, 2.0, 0.0, 1.0, 3.0, 1.0, 2.0, 1.0, 1.0, 2.0, 2.0, 3.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 2.0, 1.0, 2.0, 1.0, 4.0, 4.0, 1.0, 3.0, 3.0, 1.0, 3.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 2.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0], "bins": [-0.3045976459980011, -0.2942720651626587, -0.2839464843273163, -0.2736209034919739, -0.26329532265663147, -0.25296974182128906, -0.24264414608478546, -0.23231855034828186, -0.22199296951293945, -0.21166738867759705, -0.20134180784225464, -0.19101622700691223, -0.18069063127040863, -0.17036505043506622, -0.16003946959972382, -0.14971387386322021, -0.139388307929039, -0.1290627270936966, -0.11873713880777359, -0.10841155797243118, -0.09808596968650818, -0.08776038885116577, -0.07743480801582336, -0.06710921972990036, -0.05678364634513855, -0.046458061784505844, -0.03613247722387314, -0.02580689638853073, -0.015481311827898026, -0.00515572726726532, 0.005169853568077087, 0.015495441854000092, 0.025821030139923096, 0.0361466147005558, 0.04647219926118851, 0.056797780096530914, 0.06712336838245392, 0.07744894921779633, 0.08777453005313873, 0.09810011833906174, 0.10842570662498474, 0.11875128746032715, 0.12907686829566956, 0.13940244913101196, 0.14972804486751556, 0.16005362570285797, 0.17037920653820038, 0.18070480227470398, 0.1910303682088852, 0.2013559490442276, 0.21168152987957, 0.2220071256160736, 0.23233270645141602, 0.24265828728675842, 0.25298386812210083, 0.26330944895744324, 0.27363502979278564, 0.28396061062812805, 0.29428619146347046, 0.30461177229881287, 0.3149373531341553, 0.32526296377182007, 0.3355885148048401, 0.3459141254425049, 0.3562397062778473]}, "parameters/value_net.bias": {"_type": "histogram", "values": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "bins": [-0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142, -0.025595063343644142]}, "global_step": 42507, "rollout/ep_len_mean": 89.38999938964844, "rollout/ep_rew_mean": -504.2049865722656, "time/fps": 3.0, "_wandb": {"runtime": 2564}}
\ No newline at end of file
diff --git a/ROAR_gym/wandb/run-20220505_144255-Run 5/run-Run 5.wandb b/ROAR_gym/wandb/run-20220505_144255-Run 5/run-Run 5.wandb
new file mode 100644
index 0000000..9762653
Binary files /dev/null and b/ROAR_gym/wandb/run-20220505_144255-Run 5/run-Run 5.wandb differ
diff --git a/readme.md b/readme.md
index 5b12ca0..25639ef 100644
--- a/readme.md
+++ b/readme.md
@@ -23,7 +23,7 @@ ROAR/ROAR_Sim/configurations/npc_config.json
 ### Some Concept
 CARLA provides support for multi-agent through the following three core concepts.
 - Actor: Actor is anything that participates in the simulation and can be moved around, for example, vehicles, pedestrians.
-- Blueprint:Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
+- Blueprint: Blueprint is the specific attributes definition of an actor. New actors initialized through a blueprint. 
 - World: The world is the major ruler of the simulation. It represents the currently loaded map, and contains the setting of parameters of the current simulation environment and functions that create, control and destroy actors. CARLA provides carla.World as the default world setting. 
 
 ### Result
